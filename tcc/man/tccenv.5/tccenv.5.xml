<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry SYSTEM "minidocbook.dtd" [
	<!ENTITY star.arg "<replaceable>*</replaceable>">
]>

<refentry>
<!--
        Copyright (c) 2002-2007 The TenDRA Project <http://www.tendra.org/>.
        All rights reserved.

        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:

        1. Redistributions of source code must retain the above copyright notice,
           this list of conditions and the following disclaimer.
        2. Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
        3. Neither the name of The TenDRA Project nor the names of its contributors
           may be used to endorse or promote products derived from this software
           without specific, prior written permission.

        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS
        IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
        THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR
        CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
        EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
        PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
        OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
        WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
        OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
        ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<!--
			 Crown Copyright (c) 1997

	This TenDRA(r) Manual Page is subject to Copyright
	owned by the United Kingdom Secretary of State for Defence
	acting through the Defence Evaluation and Research Agency
	(DERA).	It is made available to Recipients with a
	royalty\-free licence for its use, reproduction, transfer
	to other parties and amendment for any purpose not excluding
	product development provided that any such use et cetera
	shall be deemed to be acceptance of the following conditions:\-

			(1) Its Recipients shall ensure that this Notice is
			reproduced upon any copies or amended versions of it;

			(2) Any amended version of it shall be clearly marked to
			show both the nature of and the organisation responsible
			for the relevant amendment or amendments;

			(3) Its onward transfer from a recipient to another
			party shall be deemed to be that party's acceptance of
			these conditions;

			(4) DERA gives no warranty or assurance as to its
			quality or suitability for any purpose and DERA accepts
			no liability whatsoever in relation to any use to which
			it may be put.
-->

	<refentryinfo>
		<productname>tcc</productname>
	</refentryinfo>

	<refmeta>
		<refentrytitle>tccenv</refentrytitle>
		<manvolnum>5</manvolnum>
	</refmeta>

	<refnamediv>
		<refname>tccenv</refname>
		<refpurpose>TCC Environments</refpurpose>
	</refnamediv>

	<refsection>
		<title>Description</title>

		<para>&tcc; environments are used to configure the behaviour of &tcc;,
			a special case of which is specifying the &api;s used.
			The standard environments supplied with the release are used to
			represent a number of commonly used &api;s, implement certain &tcc;
			command-line options, and provide a means of implementing
			system-specific options.
			User-defined environments can easily be written to correspond to a
			user-defined &api;, or to group together a number of &tcc;
			command-line options into a single file.</para>

		<para>An environment is just a file which is interpreted by &tcc; when
			it is specified with the command-line option
			<option>-Y</option>&str.arg;, where &str.arg; is the name of the
			file.
			Each environment file consists of lines of the form</para>

		<screen>&star.arg;<replaceable>IDENTIFIER</replaceable> "&text.arg;"</screen>

		<para>where <replaceable>IDENTIFIER</replaceable> is one of the
			environmental identifiers, &text.arg; tells &tcc; how to modify the
			value given by this identifier, and &star.arg;
			stands for one of the environment prefixes <literal>+</literal>
			<literal>&lt;</literal> and <literal>&gt;</literal>.</para>
	</refsection>

	<refsection>
		<title>User-Defined Environments</title>

		<para>The simplest example of a user-defined environment contains lines
			of the form</para>

		<screen><literal>+FLAG</literal> "&text.arg;"</screen>

		<para>which tells &tcc; to interpret &text.arg; as if it were passed on
			the command-line.
			So, for example, an environment consisting of the lines</para>

		<programlisting language="env"><![CDATA[+FLAG "-Yposix"
+FLAG "-Xs"
+FLAG "-I/home/user/include"]]></programlisting>

		<para>will modify &tcc; to use the &posix; 1003.1 &api; with strict checks,
			and add the directory <filename>/home/user/include</filename> to the
			search path for <code>#include</code>d files.</para>

		<para>By default, &tcc; looks for environments in the current working
			directory and in the default environments directory.
			In addition, if the system variable <code>TCCENV</code> is
			defined, this specifies a colon-separated list of directories along
			which &tcc; searches for any environment which is not a full
			pathname.</para>
	</refsection>

	<refsection>
		<title>Supported &api;s</title>

		<para>The following standard &api;s are supported in the form of
			TenDRA headers:</para>

		<table>
			<title>Supported &api;s</title>

			<col align="left"/>
			<col align="left"/>
			<col align="left"/>

			<thead>
				<tr>
					<th>&api;&nbsp;Name</th>
					<th>Type</th>
					<th>Description</th>
				</tr>
			</thead>

			<tbody>
				<tr>
					<td><code>ansi</code></td>
					<td>base&nbsp;(default)</td>
					<td>ANSI X3.159</td>
				</tr>
				<tr>
					<td><code>iso</code></td>
					<td>base</td>
					<td>ISO MSE 9899:1990 (Ammendment 1:1993 (E))</td>
				</tr>
				<tr>
					<td><code>posix</code></td>
					<td>base</td>
					<td>POSIX 1003.1</td>
				</tr>
				<tr>
					<td><code>posix2</code></td>
					<td>base</td>
					<td>POSIX 1003.2</td>
				</tr>
				<tr>
					<td><code>xpg3</code></td>
					<td>base</td>
					<td>X/Open Portability Guide 3</td>
				</tr>
				<tr>
					<td><code>xpg4</code></td>
					<td>base</td>
					<td>X/Open Portability Guide 4</td>
				</tr>
				<tr>
					<td><code>cose</code>
						<footnote>
							<para>This &api; description is based on an
								early version of the COSE 1170
								specification and may be subject to
								revision.</para>
						</footnote></td>
					<td>base</td>
					<td>COSE 1170</td>
				</tr>
				<tr>
					<td><code>svid3</code></td>
					<td>base</td>
					<td>System V Interface Definition 3rd Edition</td>
				</tr>
				<tr>
					<td><code>aes</code></td>
					<td>base</td>
					<td>AES Revision A</td>
				</tr>
			</tbody>

			<tbody>
				<tr>
					<td><code>bsd_extn</code>
						<footnote>
							<para>The BSD extension &api; consists of a
								pragmatic collection of BSD types and
								functions which are commonly found on
								non-BSD machines. It roughly corresponds
								to the BSD component of COSE (it contains
								sockets, <function>select</function>,
								etc.).</para>
						</footnote></td>
					<td>extension</td>
					<td>BSD-like extension for use with POSIX etc.</td>
				</tr>
				<tr>
					<td><code>x5_lib</code></td>
					<td>extension</td>
					<td>X11 (Release 5) X Library</td>
				</tr>
				<tr>
					<td><code>x5_t</code>
						<footnote>
							<para>The X11 private headers are further protected.
								If the private headers are required the option
								<option>-Yx5_private</option> should also be
								given.</para>
						</footnote></td>
					<td>extension</td>
					<td>X11 (Release 5) Intrinsics Toolkit</td>
				</tr>
				<tr>
					<td><code>x5_mu</code></td>
					<td>extension</td>
					<td>X11 (Release 5) Miscellaneous Utilities</td>
				</tr>
				<tr>
					<td><code>x5_aw</code></td>
					<td>extension</td>
					<td>X11 (Release 5) Athena Widgets</td>
				</tr>
				<tr>
					<td><code>x5_mit</code>
						<footnote>
							<para>This &api; is designed to cover some
								of the commonly used features from
								MIT-based X11 implementations which are
								not actually part of the X11
								specification.</para>
						</footnote></td>
					<td>extension</td>
					<td>X11 (Release 5) MIT implementation</td>
				</tr>
				<tr>
					<td><code>x5_proto</code></td>
					<td>extension</td>
					<td>X11 (Release 5) Protocol Extension</td>
				</tr>
				<tr>
					<td><code>x5_ext</code></td>
					<td>extension</td>
					<td>X11 (Release 5) Extensions</td>
				</tr>
				<tr>
					<td><code>motif</code></td>
					<td>extension</td>
					<td>Motif 1.1</td>	<!-- TODO: now 1.2? -->
				</tr>
			</tbody>

			<tbody>
				<tr>
					<td><code>system</code></td>
					<td role="na">&ndash;</td>
					<td>System headers as main &api;</td>
				</tr>
				<tr>
					<td><code>system+</code></td>
					<td role="na">&ndash;</td>
					<td>System headers as last resort extension &api;</td>
				</tr>
			</tbody>
		</table>

		<para>Each &api; is specified to &tcc; by means of an environment
			with the same name as the &api;.
			Thus, for example, <option>-Yposix</option> specifies
			POSIX 1003.1.
			&api;s are divided into two types, base &api;s, such as
			POSIX 1003.1, and extension &api;s, such as the
			X11 (Release 5) Toolkit.
			A program &api; consists of a base &api; plus an number of
			extension &api;s, for example, POSIX plus the X11 Toolkit.
			This example would be specified by means of the options
			<option>-Yposix&nbsp;-Yx5_t</option>, in that order
			(base &api;s override the previous &api;, extension &api;s
			add to it).</para>

		<para>Information on the current &api; may be printed by passing
			the <option>-info</option> option to &tcc;.</para>
	</refsection>

	<refsection>
		<title>Full Environment List</title>

		<para>The majority of the standard environments can be divided into two
			classes: those which correspond to &api;s and those which implement
			&tcc; command-line options.
			(In addition to these, a small number are used to enable extra tools
			and to specify minimum integer sizes.)</para>

		<para>The &api; environments are subdivided into base &api;s
			(such as &ansi;, &posix;) and extension &api;s (such as the X11
			environments):</para>

		<!-- TODO; centralise with userguide appendix? -->
		<table>
			<title>Supported &api;s</title>

			<col align="left"/>
			<col align="left"/>
			<col align="left"/>

			<thead>
				<tr>
					<th>&api;&nbsp;Name</th>
					<th>Type</th>
					<th>Description</th>
				</tr>
			</thead>

			<tbody>
				<tr>
					<td><literal>ansi</literal></td>
					<td>base&nbsp;(default)</td>
					<td>&ansi; X3.159</td>
				</tr>

				<tr>
					<td><literal>iso</literal></td>
					<td>base</td>
					<td>&iso;/IEC 9899:1990 (Amendment 1:L1995 (E))</td>
				</tr>

				<tr>
					<td><literal>posix</literal></td>
					<td>base</td>
					<td>the &posix; (&ieee; 1003.1:1988)</td>
				</tr>

				<tr>
					<td><literal>posix1</literal></td>
					<td>base</td>
					<td>the &posix;.1 (&iso;/IEC 9945-1:1990)</td>
				</tr>

				<tr>
					<td><literal>posix2</literal></td>
					<td>base</td>
					<td>the &posix;.2 (&iso;/IEC 9945-2:1993)</td>
				</tr>

				<tr>
					<td><literal>xpg3</literal></td>
					<td>base</td>
					<td>the X/Open Portability Guide 3</td>
				</tr>

				<tr>
					<td><literal>xpg4</literal></td>
					<td>base</td>
					<td>the X/Open Portability Guide 4</td>
				</tr>

				<tr>
					<td><literal>unix95</literal></td>
					<td>base</td>
					<td>the X/Open Single &unix; Specification (Spec 1170)</td>
				</tr>

				<tr>
					<td><literal>svid3</literal></td>
					<td>base</td>
					<td>the System V Interface Definition (3rd Edition)</td>
				</tr>

				<tr>
					<td><literal>aes</literal></td>
					<td>base</td>
					<td>Application Environment Specification (Revision A)</td>
				</tr>
			</tbody>

			<tbody>
				<tr>
					<td><literal>bsd_extn</literal></td>
					<td>extension</td>
					<td>&bsd;-like extension for use with &posix;, etc.</td>
				</tr>

				<tr>
					<td><literal>x5_lib</literal></td>
					<td>extension</td>
					<td>X11 (Release 5) X Library</td>
				</tr>

				<tr>
					<td><literal>x5_t</literal></td>
					<td>extension</td>
					<td>X11 (Release 5) Intrinsics Toolkit</td>
				</tr>

				<tr>
					<td><literal>x5_mu</literal></td>
					<td>extension</td>
					<td>X11 (Release 5) Miscellaneous Utilities</td>
				</tr>

				<tr>
					<td><literal>x5_aw</literal></td>
					<td>extension</td>
					<td>X11 (Release 5) Athena Widgets</td>
				</tr>

				<tr>
					<td><literal>x5_mit</literal></td>
					<td>extension</td>
					<td>X11 (Release 5) MIT Implementation</td>
				</tr>

				<tr>
					<td><literal>x5_proto</literal></td>
					<td>extension</td>
					<td>X11 (Release 5) Protocol Extension</td>
				</tr>

				<tr>
					<td><literal>x5_ext</literal></td>
					<td>extension</td>
					<td>X11 (Release 5) Extensions</td>
				</tr>

				<tr>
					<td><literal>motif_1_1</literal></td>
					<td>extension</td>
					<td>Motif (Release 1.1)</td>
				</tr>

				<tr>
					<td><literal>motif_1_2</literal></td>
					<td>extension</td>
					<td>Motif (Release 1.2)</td>
				</tr>
			</tbody>

			<tbody>
				<tr>
					<td><literal>system</literal></td>
					<td>extension</td>
					<td>System headers as main &api;</td>
				</tr>

				<tr>
					<td><literal>system+</literal></td>
					<td>extension</td>
					<td>System headers as last resort extension &api;</td>
				</tr>

				<tr>
					<td><literal>tdf_ext</literal></td>
					<td>extension</td>
					<td>compilation using &tdf; Version 4.0 extensions</td>
				</tr>
			</tbody>
		</table>

		<para>Some environments are available which modify access to previously
			specified &api;s:</para>

		<table>
			<col align="left"/>
			<col align="left"/>

			<thead>
				<tr>
					<th>Environment</th>
					<th>Description</th>
				</tr>

			</thead>

			<tbody>
				<tr>
					<td><literal>x5_private</literal></td>
					<td>permit access to X11 Release 5 private headers
						(<filename>*P.h</filename>)</td>
				</tr>

				<tr>
					<td><literal>motif_private</literal></td>
					<td>permit access to Motif private headers
						(<filename>*P.h</filename>)</td>
				</tr>
			</tbody>
		</table>

		<para>Note that &tdf; token libraries for all these &api;s will not be
			available on all platforms, so it may not be possible run installers
			for programs compiled with all &api; environments.
			It will always be possible to check code with any &api; environment
			using <code>tcc -ch</code>.</para>

		<para>The following environments are used to specify the use of particular
			tools (where available) which are not enabled by default:</para>

		<table>
			<col align="left"/>
			<col align="left"/>

			<thead>
				<tr>
					<th>Environment</th>
					<th>Description</th>
				</tr>

			</thead>

			<tbody>
				<tr>
					<td><literal>c++</literal></td>
					<td>enables the C++ producer/checker &tcpplus;.</td>
				</tr>

				<tr>
					<td><literal>pl_tdf</literal></td>
					<td>enables the PL_TDF compiler &tpl;.</td>
				</tr>

				<tr>
					<td><literal>tnc</literal></td>
					<td>enables the TDF notation compiler &tnc;.</td>
				</tr>

			</tbody>
		</table>

		<para>The default behaviour of &tcc; is to assume the minimal sizes of
			integer types allowed by &ansi;.
			This behaviour can be modified with the following
			environments:</para>

		<table>
			<col align="left"/>
			<col align="left"/>

			<thead>
				<tr>
					<th>Environment</th>
					<th>Description</th>
				</tr>
			</thead>

			<tbody>
				<tr>
					<td><literal>16bit</literal></td>
					<td>specifies minimal integer sizes allowed by &ansi; (default)</td>
				</tr>

				<tr>
					<td><literal>32bit</literal></td>
					<td>specifies integer sizes found on most 32-bit machines</td>
				</tr>
			</tbody>
		</table>

		<para>In addition to these, the following implement target-specific
			options:</para>

		<table>
			<col align="left"/>
			<col align="left"/>

			<thead>
				<tr>
					<th>Environment</th>
					<th>Description</th>
				</tr>
			</thead>

			<tbody>
				<tr>
					<td><literal>aout</literal></td>
					<td>Use a.out instead of &elf; format (386 Linux &elf; only).</td>
				</tr>

				<tr>
					<td><literal>static</literal></td>
					<td>Use static instead of dynamic linking (Alpha only).</td>
				</tr>
			</tbody>
		</table>
	</refsection>

	<refsection id='environmental_identifiers'>
		<title>Environmental Identifiers</title>

		<para>In the following list, the environmental prefix &star.arg;
			must be replaced by one of <literal>+</literal> (which replaces the
			existing value), <literal>&lt;</literal> (which adds a value to the
			beginning of the existing list), or <literal>&gt;</literal> (which
			adds a value to the end of the existing list).</para>

		<table>
			<col align="left"/>
			<col align="left"/>

			<thead>
				<tr>
					<th>Identifier</th>
					<th>Description</th>
				</tr>
			</thead>

			<tbody>
				<tr>
					<td>&star.arg;<code>API_NAME</code></td>
					<td>modifies the list of &api; analysis environment names</td>
				</tr>

				<tr>
					<td>&star.arg;<code>AS</code></td>
					<td>modifies the system assembler executable</td>
				</tr>

				<tr>
					<td>&star.arg;<code>AS1</code></td>
					<td>modifies the auxiliary assembler executable (&mips; and Alpha only)</td>
				</tr>

				<tr>
					<td>&star.arg;<code>CC</code></td>
					<td>modifies the system compiler executable</td>
				</tr>

				<tr>
					<td>&star.arg;<code>CPP_SPEC_LINK</code></td>
					<td>modifies the C++ spec linker executable</td>
				</tr>

				<tr>
					<td>&star.arg;<code>CRT0</code></td>
					<td>modifies the first list of initial default .o files</td>
				</tr>

				<tr>
					<td>&star.arg;<code>CRT1</code></td>
					<td>modifies the second list of initial default .o files</td>
				</tr>

				<tr>
					<td>&star.arg;<code>CRTP_N</code></td>
					<td>modifies the list of additional default .o files (-Yprom only)</td>
				</tr>

				<tr>
					<td>&star.arg;<code>CRTN</code></td>
					<td>modifies the list of final default .o files</td>
				</tr>

				<tr>
					<td>&star.arg;<code>DISP</code></td>
					<td>modifies the &tdf; pretty printer executable</td>
				</tr>

				<tr>
					<td>&star.arg;<code>DUMP_ANAL</code></td>
					<td>modifies the dump-file analyser executable</td>
				</tr>

				<tr>
					<td>&star.arg;<code>DUMP_LINK</code></td>
					<td>modifies the dump linker executable</td>
				</tr>

				<tr>
					<td>&star.arg;<code>DYN_LINK</code></td>
					<td>modifies the dynamic-initialisation linker executable (RS6000 and Sparc only)</td>
				</tr>

				<tr>
					<td><code>+ENVDIR</code></td>
					<td>sets the default environment directory</td>
				</tr>

				<tr>
					<td><code>+FLAG</code></td>
					<td>passes a flag to &tcc;</td>
				</tr>

				<tr>
					<td><code>+FLAG_AS</code></td>
					<td>passes a flag to the assembler</td>
				</tr>

				<tr>
					<td><code>+FLAG_AS1</code></td>
					<td>passes a flag to the auxiliary assembler (&mips; and Alpha only)</td>
				</tr>

				<tr>
					<td><code>+FLAG_CC</code></td>
					<td>passes a flag to the system compiler</td>
				</tr>

				<tr>
					<td><code>+FLAG_CPP_SPEC_LINK</code></td>
					<td>passes a flag to the C++ spec linker</td>
				</tr>

				<tr>
					<td><code>+FLAG_DISP</code></td>
					<td>passes a flag to the &tdf; pretty printer</td>
				</tr>

				<tr>
					<td><code>+FLAG_DUMP_ANAL</code></td>
					<td>passes a flag to the dump-file analyser</td>
				</tr>

				<tr>
					<td><code>+FLAG_DUMP_LINK</code></td>
					<td>passes a flag to the dump linker</td>
				</tr>

				<tr>
					<td><code>+FLAG_DYN_LINK</code></td>
					<td>passes a flag to the dynamic-initialisation linker ((RS6000 and Sparc only)</td>
				</tr>

				<tr>
					<td><code>+FLAG_INSTALL</code></td>
					<td>passes a flag to the &tdf; archive builder</td>
				</tr>

				<tr>
					<td><code>+FLAG_LD</code></td>
					<td>passes a flag to the system linker</td>
				</tr>

				<tr>
					<td><code>+FLAG_PL_TDF</code></td>
					<td>passes a flag to the &pl_tdf; compiler</td>
				</tr>

				<tr>
					<td><code>+FLAG_SPEC_LINKER</code></td>
					<td>passes a flag to the C spec linker</td>
				</tr>

				<tr>
					<td><code>+FLAG_TCPPLUS</code></td>
					<td>passes a flag to the C++ producer</td>
				</tr>

				<tr>
					<td><code>+FLAG_TCPPLUSPP</code></td>
					<td>passes a flag to the C++ preprocessor</td>
				</tr>

				<tr>
					<td><code>+FLAG_TDFC</code></td>
					<td>passes a flag to the C producer</td>
				</tr>

				<tr>
					<td><code>+FLAG_TDFCPP</code></td>
					<td>passes a flag to the C preprocessor</td>
				</tr>

				<tr>
					<td><code>+FLAG_TLD</code></td>
					<td>passes a flag to the &tdf; linker</td>
				</tr>

				<tr>
					<td><code>+FLAG_TNC</code></td>
					<td>passes a flag to the &tdf; notation compiler</td>
				</tr>

				<tr>
					<td><code>+FLAG_TRANS</code></td>
					<td>passes a flag to the &tdf; translator</td>
				</tr>

				<tr>
					<td>&star.arg;<code>INCL</code></td>
					<td>modifies the list of default include file directories</td>
				</tr>

				<tr>
					<td>&star.arg;<code>INFO</code></td>
					<td>modifies the list of &api; information</td>
				</tr>

				<tr>
					<td>&star.arg;<code>LD</code></td>
					<td>modifies the system linker executable</td>
				</tr>

				<tr>
					<td>&star.arg;<code>LIB</code></td>
					<td>modifies the list of default &tdf; libraries</td>
				</tr>

				<tr>
					<td><code>+LINE_START</code></td>
					<td>inserts a line in the &tcc; built-in start-up file</td>
				</tr>

				<tr>
					<td><code>+LINE_END</code></td>
					<td>inserts a line in the &tcc; built-in end-up file</td>
				</tr>

				<tr>
					<td>&star.arg;<code>LINK</code></td>
					<td>modifies the list of default &tdf; library directories</td>
				</tr>

				<tr>
					<td>&star.arg;<code>LINK_ENTRY</code></td>
					<td>modifies the linker options specifying the entry point</td>
				</tr>

				<tr>
					<td><code>+PORTABILITY</code></td>
					<td>sets the producer portability table</td>
				</tr>

				<tr>
					<td>&star.arg;<code>PL_TDF</code></td>
					<td>modifies the &pl_tdf; compiler executable</td>
				</tr>

				<tr>
					<td>&star.arg;<code>SPEC_LINK</code></td>
					<td>modifies the C spec linker executable</td>
				</tr>

				<tr>
					<td>&star.arg;<code>STARTUP</code></td>
					<td>modifies the list of default C producer start-up files</td>
				</tr>

				<tr>
					<td>&star.arg;<code>STARTUP_DIR</code></td>
					<td>modifies the list of default C producer start-up directories</td>
				</tr>

				<tr>
					<td>&star.arg;<code>STARTUP_CPP</code></td>
					<td>modifies the list of default C++ producer start-up files</td>
				</tr>

				<tr>
					<td>&star.arg;<code>STARTUP_CPP_DIR</code></td>
					<td>modifies the list of default C++ producer start-up directories</td>
				</tr>

				<tr>
					<td>&star.arg;<code>SUFFIX_CPP</code></td>
					<td>sets the filename suffix override for C++ source files</td>
				</tr>

				<tr>
					<td>&star.arg;<code>SYS_LIB</code></td>
					<td>modifies the list of default system libraries</td>
				</tr>

				<tr>
					<td>&star.arg;<code>SYS_LIBC</code></td>
					<td>modifies the list of standard system libraries</td>
				</tr>

				<tr>
					<td>&star.arg;<code>SYS_LINK</code></td>
					<td>modifies the list of default system library directories</td>
				</tr>

				<tr>
					<td>&star.arg;<code>TCPPLUS</code></td>
					<td>modifies the C++ producer executable</td>
				</tr>

				<tr>
					<td>&star.arg;<code>TCPPLUSPP</code></td>
					<td>modifies the C++ preprocessor executable</td>
				</tr>

				<tr>
					<td>&star.arg;<code>TDFC</code></td>
					<td>modifies the C producer executable</td>
				</tr>

				<tr>
					<td>&star.arg;<code>TDFCPP</code></td>
					<td>modifies the C preprocessor executable</td>
				</tr>

				<tr>
					<td><code>+TEMP</code></td>
					<td>sets the temporary directory</td>
				</tr>

				<tr>
					<td>&star.arg;<code>TLD</code></td>
					<td>modifies the &tdf; linker executable</td>
				</tr>

				<tr>
					<td>&star.arg;<code>TNC</code></td>
					<td>modifies the &tdf; notation compiler executable</td>
				</tr>

				<tr>
					<td>&star.arg;<code>TRANS</code></td>
					<td>modifies the &tdf; translator executable</td>
				</tr>
			</tbody>
		</table>
	</refsection>

	<refsection>
		<title>Environment Identifiers</title>

		<para>The following &tcc; environment identifiers are
			recognised:</para>

		<table>
			<col align="left"/>
			<col align="left"/>

			<thead>
				<tr>
					<th>Identifier</th>
					<th>Description</th>
				</tr>
			</thead>

			<tbody>
				<tr>
					<td><code>*AS</code></td>
					<td>Modifies the system assembler executable</td>
				</tr>
				<tr>
					<td><code>*AS1</code></td>
					<td>Modifies the auxilliary system assembler
						executable (Mips only)</td>
				</tr>
				<tr>
					<td><code>*CC</code></td>
					<td>Modifies the system compiler executable</td>
				</tr>
				<tr>
					<td><code>*CRT0</code></td>
					<td>Modifies the first list of initial default
						<filename>.o</filename> files</td>
				</tr>
				<tr>
					<td><code>*CRT1</code></td>
					<td>Modifies the second list of initial default
						<filename>.o</filename> files</td>
				</tr>
				<tr>
					<td><code>*CRTN</code></td>
					<td>Modifies the list of final default
						<filename>.o</filename> files</td>
				</tr>
				<tr>
					<td><code>*DISP</code></td>
					<td>Modifies the &tdf; pretty printer
						executable</td>
				</tr>
				<tr>
					<td><code>+ENVDIR</code></td>
					<td>Sets the main environment directory</td>
				</tr>
				<tr>
					<td><code>+FLAG</code></td>
					<td>Passes a flag to &tcc;</td>
				</tr>
				<tr>
					<td><code>+FLAG_AS</code></td>
					<td>Passes a flag to the assembler</td>
				</tr>
				<tr>
					<td><code>+FLAG_CC</code></td>
					<td>Passes a flag to the system compiler</td>
				</tr>
				<tr>
					<td><code>+FLAG_DISP</code></td>
					<td>Passes a flag to the &tdf; pretty printer</td>
				</tr>
				<tr>
					<td><code>+FLAG_INSTALL</code></td>
					<td>Passes a flag to the &tdf; archive builder</td>
				</tr>
				<tr>
					<td><code>+FLAG_LD</code></td>
					<td>Passes a flag to the system linker</td>
				</tr>
				<tr>
					<td><code>+FLAG_SPEC_LINK</code></td>
					<td>Passes a flag to the C spec linker</td>
				</tr>
				<tr>
					<td><code>+FLAG_TDFC</code></td>
					<td>Passes a flag to the producer</td>
				</tr>
				<tr>
					<td><code>+FLAG_TDFCPP</code></td>
					<td>Passes a flag to the preprocessor</td>
				</tr>
				<tr>
					<td><code>+FLAG_TLD</code></td>
					<td>Passes a flag to the &tdf; linker</td>
				</tr>
				<tr>
					<td><code>+FLAG_TNC</code></td>
					<td>Passes a flag to the &tdf; notation compiler</td>
				</tr>
				<tr>
					<td><code>+FLAG_TRANS</code></td>
					<td>Passes a flag to the &tdf; translator</td>
				</tr>
				<tr>
					<td><code>*INCL</code></td>
					<td>Modifies the list of default include
						file directories</td>
				</tr>
				<tr>
					<td><code>*INFO</code></td>
					<td>Modifies the list of &api; information</td>
				</tr>
				<tr>
					<td><code>*LD</code></td>
					<td>Modifies the system linker executable</td>
				</tr>
				<tr>
					<td><code>*LIB</code></td>
					<td>Modifies the list of default &tdf;
						libraries</td>
				</tr>
				<tr>
					<td><code>+LINE_START</code></td>
					<td>Inserts a line in the &tcc; built-in
						start-up file</td>
				</tr>
				<tr>
					<td><code>+LINE_END</code></td>
					<td>Inserts a line in the &tcc; built-in
						end-up file</td>
				</tr>
				<tr>
					<td><code>*LINK</code></td>
					<td>Modifies the list of default &tdf; library
						directories</td>
				</tr>
				<tr>
					<td><code>+PORTABILITY</code></td>
					<td>Sets the producer portability table</td>
				</tr>
				<tr>
					<td><code>*SPEC_LINK</code></td>
					<td>Modifies the C spec linker executable</td>
				</tr>
				<tr>
					<td><code>*STARTUP</code></td>
					<td>Modifies the list of default producer
						start-up files</td>
				</tr>
				<tr>
					<td><code>*STARTUP_DIR</code></td>
					<td>Modifies the list of default start-up
						directories</td>
				</tr>
				<tr>
					<td><code>*SYS_LIB</code></td>
					<td>Modifies the list of default system
						libraries</td>
				</tr>
				<tr>
					<td><code>*SYS_LIBC</code></td>
					<td>Modifies the list of standard system
						libraries</td>
				</tr>
				<tr>
					<td><code>*SYS_LINK</code></td>
					<td>Modifies the list of default system library
						directories</td>
				</tr>
				<tr>
					<td><code>*TDFC</code></td>
					<td>Modifies the producer executable</td>
				</tr>
				<tr>
					<td><code>*TDFCPP</code></td>
					<td>Modifies the preprocessor executable</td>
				</tr>
				<tr>
					<td><code>+TEMP</code></td>
					<td>Sets the temporary directory
						<footnote>
							<para>The temporary directory can also be
								set using the <varname>TMPDIR</varname>
								system variable on those machines which
								implement the XPG3
								<function>tempnam</function> system
								routine.</para>
						</footnote></td>
				</tr>
				<tr>
					<td><code>*TLD</code></td>
					<td>Modifies the &tdf; linker executable</td>
				</tr>
				<tr>
					<td><code>*TNC</code></td>
					<td>Modifies the &tdf; notation compiler
						executable</td>
				</tr>
				<tr>
					<td><code>*TRANS</code></td>
					<td>Modifies the &tdf; translator executable</td>
				</tr>
			</tbody>
		</table>

		<para><code>*</code> stands for any of the allowed environment
			modifiers <code>+</code>, <code>&lt;</code> or
			<code>&gt;</code>.</para>
	</refsection>

	<refsection>
		<title>Standard Environments</title>

		<para>In addition to the environments implementing the supported
			&api;s (see section 7.5. on page 31<!-- TODO: link -->), the
			following environments are standard; those which alter the
			compilation phases:</para>

		<table>
			<col align="left"/>
			<col align="left"/>

			<thead>
				<tr>
					<th>Environment</th>
					<th>Description</th>
				</tr>
			</thead>

			<tbody>
				<tr>
					<td><code>default</code></td>
					<td>Default settings (built into &tcc;)</td>
				</tr>
				<tr>
					<td><code>16bit</code></td>
					<td>Specifies the minimal integer
						sizes allowed by ANSI</td>
				</tr>
				<tr>
					<td><code>32bit</code></td>
					<td>Specifies the integer sizes found on most
						32-bit machines</td>
				</tr>
				<tr>
					<td><code>common</code></td>
					<td>Equivalent to <code>32bit</code></td>
				</tr>
				<tr>
					<td><code>makelib</code></td>
					<td>Used to construct &tdf; libraries</td>
				</tr>
				<tr>
					<td><code>pl_tdf</code></td>
					<td>Used to specify the use of the PL_TDF compiler</td>
				</tr>
				<tr>
					<td><code>status</code></td>
					<td>Causes the environment status to be reported</td>
				</tr>
				<tr>
					<td><code>tdp</code></td>
					<td>Used in &tdf; library building</td>
				</tr>
				<tr>
					<td><code>tnc</code></td>
					<td>Used to specify the use of the &tdf;
						notation compiler</td>
				</tr>
			</tbody>
		</table>

		<para>and those which form part of the implementation for
			command-line options:</para>

		<table>
			<col align="left"/>
			<col align="left"/>

			<thead>
				<tr>
					<th>Environment</th>
					<th>Option&nbsp;Implemented</th>
				</tr>
			</thead>

			<tbody>
				<tr>
					<td><code>tcc_diag</code></td>
					<td><option>-g</option></td>
				</tr>
				<tr>
					<td><code>tcc_pp</code></td>
					<td><option>-E</option> and <option>-P</option></td>
				</tr>
				<tr>
					<td><code>tcc_prof</code></td>
					<td><option>-p</option></td>
				</tr>
				<tr>
					<td><code>tcc_time</code></td>
					<td><option>-time</option></td>
				</tr>
				<tr>
					<td><code>wsl</code></td>
					<td><option>-wsl</option></td>
				</tr>
				<tr>
					<td><code>Goption</code></td>
					<td><option>-G</option></td>
				</tr>
				<tr>
					<td><code>K-<replaceable>item</replaceable></code></td>
					<td><option>-K&nbsp;<replaceable>item</replaceable></option></td>
				</tr>
				<tr>
					<td><code>Versions</code></td>
					<td><option>-V</option></td>
				</tr>
				<tr>
					<td><code>X<replaceable>mode</replaceable></code></td>
					<td><option>-X&nbsp;<replaceable>mode</replaceable></option></td>
				</tr>
				<tr>
					<td><code>Z-<replaceable>str</replaceable></code></td>
					<td><option>-Z&nbsp;<replaceable>str</replaceable></option></td>
				</tr>
			</tbody>
		</table>
	</refsection>

	<refsection>
		<title>See Also</title>

		<para>&tcc;, &tcpplus;, &tpl;, &tnc;.</para>
	</refsection>
</refentry>

