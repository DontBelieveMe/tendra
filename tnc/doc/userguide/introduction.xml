<?xml version="1.0" standalone="no"?>
<!DOCTYPE chapter SYSTEM "minidocbook.dtd">

<chapter>
	<title>Introduction</title>

	<para>The &tdf; notation compiler, <code>tnc</code>, is a tool for translating
		&tdf; capsules to and from text. This paper gives a brief introduction
		to how to use this utility and the syntax of the textual form of &tdf;.
		The version here described is that supporting version 3.1 of the &tdf;
		specification.</para>

	<para><code>tnc</code> has four modes, two input modes and three output modes.
		These are as follows:</para>

	<table>
		<col align="center"/>
		<col align="left"/>

		<thead>
			<tr>
				<th>Mode</th>
				<th>Description</th>
			</tr>
		</thead>

		<tbody>
			<tr>
				<td><code>decode</code></td>
				<td>Translate an input &tdf; capsule into the <code>tnc</code> internal representation.</td>
			</tr>
			<tr>
				<td><code>read</code></td>
				<td>Translate an input text file into the internal representation.</td>
			</tr>
			<tr>
				<td><code>encode</code></td>
				<td>Translate the internal representation into an output &tdf; capsule.</td>
			</tr>
			<tr>
				<td><code>write</code></td>
				<td>Translate the internal representation into an output text file.</td>
			</tr>
			<tr>
				<td><code>dot</code></td>
				<td>Translate the internal representation into an output Dot format graph,
					suitable for processing with Graphviz tools.</td>
			</tr>
		</tbody>
	</table>

	<para>Due to the modular nature of the program it is possible to form versions
		of <code>tnc</code> in which not all the modes are available. Passing
		the <code>-version</code> flag to <code>tnc</code> causes it to report which
		modes it has implemented.</para>

	<para>Any application of <code>tnc</code> consists of the composite of an
		input mode and an output mode. The default action is <code>read</code>-<code>encode</code>,
		i.e. translate an input test file into an output &tdf; capsule. Other
		modes may be specified by passing the following command line options
		to <code>tnc</code>:</para>

	<literallayout><code>-decode</code> or <code>-d</code>
		<code>-read</code> or <code>-r</code>
		<code>-encode</code> or <code>-e</code>
		<code>-write</code> or <code>-w</code></literallayout>

	<para>The only other really useful action is <code>decode</code>-<code>write</code>,
		i.e. translate an input &tdf; capsule into an output text file. This
		may also be specified by the <code>-print</code> or <code>-p</code> option. The
		actions <code>decode</code>-<code>encode</code> and <code>read</code>-<code>write</code> are
		not precise identities, they do however give equivalent input and
		output files.</para>

	<para>In addition, the <code>decode</code> mode may be modified to accept a &tdf;
		library as input rather than a &tdf; capsule by passing the additional
		flag:</para>

	<literallayout><code>-lib</code> or <code>-l</code></literallayout>

	<para>to <code>tnc</code>.</para>

	<para>The overall syntax for <code>tnc</code> is as follows:</para>

	<!-- TODO: just link to the manpage instead -->
	<screen>% tnc [ options ... ] input_file [ output_file ]</screen>

	<para>If the output file is not specified, the standard output is used.</para>
</chapter>

