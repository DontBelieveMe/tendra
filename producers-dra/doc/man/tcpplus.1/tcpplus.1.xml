<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
	"http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<!-- Initially lifted from troff+man by doclifter, additional editing by hand -->

<refentry id="tcpplus1">

<!--
        Copyright (c) 2002-2007 The TenDRA Project <http://www.tendra.org/>.
        All rights reserved.

        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:

        1. Redistributions of source code must retain the above copyright notice,
           this list of conditions and the following disclaimer.
        2. Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
        3. Neither the name of The TenDRA Project nor the names of its contributors
           may be used to endorse or promote products derived from this software
           without specific, prior written permission.

        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS
        IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
        THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR
        CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
        EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
        PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
        OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
        WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
        OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
        ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<!--
			 Crown Copyright (c) 1997

	This TenDRA(r) Manual Page is subject to Copyright
	owned by the United Kingdom Secretary of State for Defence
	acting through the Defence Evaluation and Research Agency
	(DERA).	It is made available to Recipients with a
	royalty-free licence for its use, reproduction, transfer
	to other parties and amendment for any purpose not excluding
	product development provided that any such use et cetera
	shall be deemed to be acceptance of the following conditions:\-

			(1) Its Recipients shall ensure that this Notice is
			reproduced upon any copies or amended versions of it;

			(2) Any amended version of it shall be clearly marked to
			show both the nature of and the organisation responsible
			for the relevant amendment or amendments;

			(3) Its onward transfer from a recipient to another
			party shall be deemed to be that party's acceptance of
			these conditions;

			(4) DERA gives no warranty or assurance as to its
			quality or suitability for any purpose and DERA accepts
			no liability whatsoever in relation to any use to which
			it may be put.
-->

	<refmeta>
		<refentrytitle>tcpplus</refentrytitle>
		<manvolnum>1</manvolnum>
	</refmeta>

	<refnamediv id="name">
		<refname>tcpplus</refname>
		<refpurpose>DRA C++ to TDF producer</refpurpose>
	</refnamediv>

	<refsynopsisdiv id="synopsis">
		<cmdsynopsis>
			<command>tcpplus</command>

			<arg choice="opt"><option>-A</option><replaceable>predicate</replaceable><emphasis remap="B">(</emphasis><emphasis remap="I">tokens</emphasis><emphasis remap="B">)</emphasis></arg>
			<arg choice="opt"><option>-D</option><replaceable>macro</replaceable></arg>
			<arg choice="opt"><option>-D</option><replaceable>macro</replaceable><emphasis remap="B">=</emphasis><replaceable>tokens</replaceable></arg>
			<arg choice="opt"><option>-E</option></arg>
			<arg choice="opt"><option>-F</option><replaceable>file</replaceable></arg>
			<arg choice="opt"><option>-H</option></arg>
			<arg choice="opt"><option>-I</option><replaceable>directory</replaceable></arg>

			<sbr/>

			<arg choice="opt"><option>-N</option><replaceable>name</replaceable><emphasis remap="B">:</emphasis><emphasis remap="I">directory</emphasis></arg>
			<arg choice="opt"><option>-S</option></arg>
			<arg choice="opt"><option>-U</option><replaceable>macro</replaceable></arg>
			<arg choice="opt"><option>-V</option></arg>
			<arg choice="opt"><option>-W</option><replaceable>option</replaceable></arg>
			<arg choice="opt"><option>-X</option></arg>
			<arg choice="opt"><option>-Z</option><replaceable>number</replaceable></arg>
			<arg choice="opt"><option>-a</option></arg>
			<arg choice="opt"><option>-c</option></arg>

			<sbr/>

			<arg choice="opt"><option>-d</option><replaceable>opt</replaceable><emphasis remap="B">=</emphasis><emphasis remap="I">dump-file</emphasis></arg>
			<arg choice="opt"><option>-e</option><replaceable>file</replaceable></arg>
			<arg choice="opt"><option>-f</option><replaceable>file</replaceable></arg>
			<arg choice="opt"><option>-g</option></arg>
			<arg choice="opt"><option>-j</option><replaceable>opt</replaceable></arg>
			<arg choice="opt"><option>-m</option><replaceable>opt</replaceable></arg>
			<arg choice="opt"><option>-n</option><replaceable>port-table</replaceable></arg>
			<arg choice="opt"><option>-o</option><replaceable>output-file</replaceable></arg>

			<sbr/>

			<arg choice="opt"><option>-q</option></arg>
			<arg choice="opt"><option>-s</option><replaceable>spec-file</replaceable></arg>
			<arg choice="opt"><option>-t</option></arg>
			<arg choice="opt"><option>-u</option><replaceable>&nbsp;name&nbsp;...&nbsp;name</replaceable></arg>
			<arg choice="opt"><option>-w</option></arg>
			<arg choice="opt"><option>-z</option></arg>

			<sbr/>

			<arg choice="opt"><option>--</option></arg>

			<arg choice="opt"><replaceable>input-file</replaceable> ...</arg>
			<arg choice="opt"><replaceable>output-file</replaceable></arg>
		</cmdsynopsis>

		<cmdsynopsis>
			<command>tcpplus</command>

			<group choice="req">
				<arg choice="plain"><option>-h</option></arg>
				<arg choice="plain"><option>-v</option></arg>
			</group>
		</cmdsynopsis>
	</refsynopsisdiv>

	<refsection id="description">
		<title>Description</title>

		<para>In its default action, <command>tcpplus</command> translates the
			input C++ source file, <emphasis remap="I">input-file</emphasis>,
			into a TDF capsule, <emphasis remap="I">output-file</emphasis>.
			If the output file name is omitted or is <emphasis remap="B">-</emphasis>,
			the standard output is used.
			If the input file name is omitted or is
			<emphasis remap="B">-</emphasis>, the standard input is used.</para>

		<para>By use of the <option>-s</option><replaceable>spec-file</replaceable>
			option, <command>tcpplus</command> can additionally be made to
			output a C++ spec file which contains information enabling
			intermodule analysis to be performed.
			Alternatively usage and error information suitable for processing
			by other tools can be output using the
			<option>-d</option><replaceable>opt</replaceable><emphasis remap="B">=</emphasis><emphasis remap="I">dump-file</emphasis> option.</para>

		<para><command>tcpplus</command> also has a preprocessing action, when
			invoked with the <option>-E</option> option, in which the input
			C++ source file, <emphasis remap="I">input-file</emphasis>,
			is preprocessed to an output file,
			<emphasis remap="I">ouput-file</emphasis>.</para>

		<para>Finally <command>tcpplus</command> has a spec linker action, when
			invoked with the <option>-S</option> option, in which any number
			of spec input files, <emphasis remap="I">input-file</emphasis>,
			are combined into a spec output file, which may be specified using
			the <option>-s</option> option.
			Any extra code generation resulting from this linking phase is
			written to the TDF capsule, <emphasis remap="I">output-file</emphasis>.</para>
	</refsection>

	<refsection id="invocation">
		<title>Invocation</title>

		<para>This section describes how the C++ to TDF producer,
			<code>tcpplus</code>, fits into the overall compilation scheme controlled
			by the TenDRA compiler front-end, <code>tcc</code>, or the TenDRA
			checker front-end, <code>tchk</code>.  While it is possible to use
			<code>tcpplus</code> as a stand-alone program, it is recommended that
			it should be invoked via <code>tcc</code> or <code>tchk</code>. The
			<code>tcc</code> users' guide should be consulted for more details.</para>

		<para><code>tcc</code> and <code>tchk</code> require the <code>-Yc++</code>
			command-line option in order to enable their C++ capabilities.  Files
			with a <code>.C</code> suffix are recognised as C++ source files and
			passed to <code>tcpplus</code> for processing (see
			<link linkend="compile">below</link>).  It is possible to change the suffix
			used for C++ source files; for example <code>-sC:cc</code> causes
			<code>.cc</code> files to be recognised as C++ source files.  An interesting
			variation is <code>-sC:c</code> which causes C source files to be
			processed by the C++ producer.  Similarly <code>.I</code> files are
			recognised as preprocessed C++ source files and <code>.K</code>
			files are recognised as C++ spec files.</para>

		<para>Most of the command-line option handling for <code>tcpplus</code>
			is done by <code>tcc</code> and <code>tchk</code>, however it is
			possible to pass the option <emphasis>opt</emphasis> directly to
			<code>tcpplus</code> using the option <code>-Wx,</code><emphasis>opt</emphasis>
			to <code>tcc</code> or <code>tchk</code>.
			Similarly <code>-Wg,</code><emphasis>opt</emphasis> and
			<code>-WS,</code><emphasis>opt</emphasis>
			can be used to pass options to the C++ preprocessor and the C++ spec
			linker (both of which are actually <code>tcpplus</code> invoked with
			different options) respectively.</para>
	</refsection>

	<refsection id="options">
		<title>Options</title>

		<para>The general form for the invocation of <code>tcpplus</code> is as
			given in the synopsis.</para>

		<para>The output file can alternatively be specified using the
			<link linkend="output"><code>-o</code> option</link>.
			If no output file is given, or the output file is <code>-</code>,
			the standard output is used.
			In general there can be any number of input files.
			If no input file is given, or the input file is <code>-</code>,
			the standard input is used.</para>

		<para><code>tcpplus</code> has three modes which determine the form of its
			input and output files.  The default mode is compilation, in which
			a single input C++ source file is translated into an output TDF capsule.
			In preprocessing mode, specified using the
			<link linkend="preproc"><code>-E</code> option</link>, a single input C++
			source file is preprocessed into an output C++ source file.
			Note that the preprocessor is built into <code>tcpplus</code>, rather
			than, as with most other compilers, being a separate program.
			The final mode is <A HREF="link.html">C++ spec linking</A>,
			specified using the <link linkend="linker"><code>-S</code> option</link>.
			Any number of C++ spec input files are linked and any code generated as
			a result (for example, template instantiations) is written to the output
			TDF capsule.</para>

		<para>In either compilation or spec linking mode, a C++ spec output file
			can be generated, in addition to the TDF capsule, using the
			<link linkend="spec"><code>-s</code> option</link>.
			In any mode a symbol table dump output file can generated using the
			<link linkend="dump"><code>-d</code> option</link>.</para>

		<para>The command-line options can appear in any order and can be
			interspersed with the input and output files, except following a
			<code>--</code> option.
			All the multi-part options can be given either as one or two
			command-line arguments, so that
			<option>-I</option><replaceable>dir</replaceable> and
			<option>-I</option> <replaceable>dir</replaceable> are equivalent.
			Most of the option handling required is handled by
			<citerefentry><refentrytitle>tcc</refentrytitle><manvolnum>1</manvolnum></citerefentry>
			when this is being used, but options may be passed directly to
			<command>tcpplus</command> using the
			<option>-Wx,</option><replaceable>opt</replaceable> option.</para>

		<para>The recognised options are as follows:</para>

		<variablelist remap="IP">
			<varlistentry>
				<term><option>-A</option><replaceable>predicate</replaceable><emphasis remap="B">(</emphasis><emphasis remap="I">tokens</emphasis><emphasis remap="B">)</emphasis></term>

				<listitem>
					<para>Asserts that the given predicate is true, that is to say:</para>

					<programlisting language="C++">#assert <emphasis>predicate</emphasis> ( <emphasis>tokens</emphasis> )</programlisting>

					<para>The special case <code>-A-</code> undefines all the built-in predicates
						(of which there are none).  Use of this option automatically enables
						support for the <A HREF="pragma.html#ppdir"><code>#assert</code> and
						<code>#unassert</code> directives</A>.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-D</option><replaceable>macro</replaceable></term>
				<term><option>-D</option><replaceable>macro</replaceable><emphasis remap="B">=</emphasis><replaceable>tokens</replaceable></term>

				<listitem>
					<para>Defines the given macro to be 1 in the first case,
						or the given sequence of preprocessing tokens in the
						second case, that is to say:</para>

					<programlisting language="C++">#define <emphasis>macro</emphasis> 1
#define <emphasis>macro tokens</emphasis></programlisting>

					<para>respectively.  In fact <code>-D</code> and
						<code>-U</code> options to <code>tcc</code> are not
						passed as <code>-D</code> and <code>-U</code> options to
						<code>tcpplus</code>.
						Instead a <link linkend="start-up">start-up</link> file
						containing the equivalent <code>#define</code> and
						<code>#undef</code> directives is used.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-E</option></term>

				<listitem>Enables preprocessing mode in which the input C++
					source file is preprocessed into the output
					file.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-F</option><replaceable>file</replaceable></term>

				<listitem>Causes a list of command-line options to be read from
					<emphasis>file</emphasis>.
					Other than empty lines and lines beginning with <code>#</code>, each
					line in the file is treated as if it had been specified as a separate
					command-line option.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-H</option></term>

				<listitem>Enables verbose inclusion mode in which warnings are printed at the
					start and the end of each included source file.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-I</option><replaceable>directory</replaceable></term>

				<listitem>Adds the given directory to the list searched by
					<command>tcpplus</command> for included source files.
					No such directories are built into <command>tcpplus</command>.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-N</option><replaceable>name</replaceable><emphasis remap="B">:</emphasis><emphasis remap="I">directory</emphasis></term>

				<listitem>This is identical to
					<option>-I</option><replaceable>directory</replaceable>
					except that it also associates the given identifier
					with the directory.
					The directory name can be used to specify a
					<A HREF="pragma.html#scope">compilation profile</A>
					to be used on files included from this directory.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-S</option></term>

				<listitem>Enables spec linker mode in which any number of
					C++ spec input files are linked into a single C++ spec
					output file.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-U</option><replaceable>macro</replaceable></term>

				<listitem>
					<para>Undefines the given macro, that is to say:</para>

					<programlisting language="C++">#undef <emphasis>macro</emphasis></programlisting>

					<para>The special case <code>-U-</code> undefines all the built-in macros.
						These may be described as follows:</para>

					<programlisting language="C++">#define __FILE__		<emphasis>(current file)</emphasis>
#define __LINE__		<emphasis>(current line)</emphasis>
#define __TIME__		<emphasis>(current time)</emphasis>
#define __DATE__		<emphasis>(current date)</emphasis>
#define __STDC__		1
#define __STDC_VERSION__	199409L
#define __cplusplus		199711L</programlisting>

					<para>The actual value of <code>__cplusplus</code> gives the date of the
						draft ISO C++ standard on which the current version of the producer
						is based. The value given above gives the expected date of the final
						C++ standard.</para>	<!-- TODO update -->
				</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-V</option></term>

				<listitem>Causes <command>tcpplus</command> to print the name
					of each function to the standard output as it is
					compiled.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-W</option><replaceable>option</replaceable></term>

				<listitem>
					<para>Sets the given <A HREF="pragma.html#low">compiler option</A>
						to give a warning in the circumstances described by
						<emphasis remap="I">option</emphasis>.
						That is to say:</para>

					<programlisting language="C++">#pragma TenDRA option &quot;<emphasis>option</emphasis>&quot; warning</programlisting>

					<para>The special case <code>-Wall</code> enables a wide
						range of warnings.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-X</option></term>

				<!-- TODO link "current implementation" to lib.html -->
				<listitem>Disables exception handling.
					The current implementation can be a large run-time overhead
					if not required.
					The effect of linking any module compiled with this option
					with a module which throws an exception is undefined.
					This is equivalent to <option>-j-e</option>.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-Z</option><replaceable>number</replaceable></term>

				<listitem>Sets the maximum number of errors printed by
					<command>tcpplus</command> before bailing out to be
					<emphasis remap="I">number</emphasis>.
					The default is 32.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-a</option></term>

				<listitem>Causes <command>tcpplus</command> to apply complete
					program analysis to its input files.
					That is it assumes that no other translation units need
					to be linked in order for the program to execute.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-c</option></term>

				<listitem>Disables TDF output.
					The output file will still be a valid TDF capsule, only
					it will contain no information.
					This is equivalent to <option>-j-c</option>.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-d</option><replaceable>opt</replaceable><emphasis remap="B">=</emphasis><emphasis remap="I">dump-file</emphasis></term>

				<listitem>
					<para>Causes <command>tcpplus</command> to dump information about its input file into
						<emphasis remap="I">dump-file</emphasis>.	<emphasis remap="I">opt</emphasis> is a series of characters describing the
						information to be dumped, as follows:</para>

					<table>
						<col align="center"/>
						<col align="left"/>

						<thead>
							<tr>
								<th>Key</th>
								<th>Description</th>
							</tr>
						</thead>

						<tbody>
							<tr>
								<td><code>a</code> (<quote>all</quote>)</td>
								<td>equivalent to <code>ehlmu</code></td>
							</tr>
							<tr>
								<td><code>c</code></td>
								<td>dump string literals</td>
							</tr>
							<tr>
								<td><code>e</code></td>
								<td>dump error messages</td>
							</tr>
							<tr>
								<td><code>h</code></td>
								<td>dump header information</td>
							</tr>
							<tr>
								<td><code>k</code></td>
								<td>dump keyword identifiers</td>
							</tr>
							<tr>
								<td><code>l</code></td>
								<td>dump local variables</td>
							</tr>
							<tr>
								<td><code>m</code></td>
								<td>dump macro identifiers</td>
							</tr>
							<tr>
								<td><code>s</code></td>
								<td>dump scope information</td>
							</tr>
							<tr>
								<td><code>u</code></td>
								<td>dump identifier usage information</td>
							</tr>
						</tbody>
					</table>

					<para>Note that these correspond to the
						<code>tcc -sym</code> options.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-e</option><replaceable>file</replaceable></term>

				<listitem>
					<para>Specifies the given file as an <quote>end-up</quote>
						file.  This is equivalent to adding:</para>

					<programlisting language="C++">#include &quot;<emphasis>file</emphasis>&quot;</programlisting>

					<para>at the end of the input source file.
						More than one end-up file may be given; they are
						processed in the order given.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-f</option><replaceable>file</replaceable></term>

				<listitem>
					<para>Specifies the given file as a start-up file.
						This is equivalent to adding:</para>

					<programlisting  language="C++">#include &quot;<emphasis>file</emphasis>&quot;</programlisting>

					<para>at the start of the input source file.
						More than one start-up file may be given; they are
						processed in the order given.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-g</option></term>

				<listitem>Specifies that the output TDF capsule should also
					contain information to allow for the generation of run-time
					debugging directives.
					This is equivalent to <option>-jg</option>.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-h</option></term>

				<listitem>Causes <command>tcpplus</command> to print a full
					list of its available command-line options.
					This includes a number not documented here which are
					unlikely to prove useful to the normal user.</listitem>
					<!-- TODO document them! perhaps in a separate section -->
			</varlistentry>

			<varlistentry>
				<term><option>-j</option><replaceable>opt</replaceable></term>

				<listitem>
					<para>Sets the TDF output options given by <emphasis>opt</emphasis>.
						This consists of a sequence of characters describing
						the options to be enabled or disabled.
						By default, or following a <code>+</code>, the options
						are enabled; following a <code>-</code> they are disabled.
						The available options are as follows:</para>

					<table>
						<col align="center"/>
						<col align="center"/>
						<col align="left"/>

						<thead>
							<tr>
								<th>Key</th>
								<th>Default</th>
								<th>Description</th>
							</tr>
						</thead>

						<tbody>
							<tr>
								<td><code>a</code></td>
								<td>off</td>
								<td>output external names for local objects</td>
							</tr>
							<tr>
								<td><code>b</code></td>
								<td>off</td>
								<td>work round old installer bugs</td>
							</tr>
							<tr>
								<td><code>c</code></td>
								<td>on</td>
								<td>output TDF capsule</td>
							</tr>
							<tr>
								<td><code>d</code></td>
								<td>off</td>
								<td>output termination function</td>
							</tr>
							<tr>
								<td><code>e</code></td>
								<td>on</td>
								<td>output exceptions</td>
							</tr>
							<tr>
								<td><code>f</code></td>
								<td>on</td>
								<td>mangle template function signatures</td>
							</tr>
							<tr>
								<td><code>g</code></td>
								<td>off</td>
								<td>output debugging information</td>
							</tr>
							<tr>
								<td><code>i</code></td>
								<td>off</td>
								<td>output dynamic initialisers as a function</td>
							</tr>
							<tr>
								<td><code>n</code></td>
								<td>on</td>
								<td>mangle object names</td>
							</tr>
							<tr>
								<td><code>o</code></td>
								<td>off</td>
								<td>order class data members by access</td>
							</tr>
							<tr>
								<td><code>p</code></td>
								<td>on</td>
								<td>output partial destructors</td>
							</tr>
							<tr>
								<td><code>r</code></td>
								<td>on</td>
								<td>output run-time type information</td>
							</tr>
							<tr>
								<td><code>s</code></td>
								<td>on</td>
								<td>output shared string literals</td>
							</tr>
							<tr>
								<td><code>t</code></td>
								<td>off</td>
								<td>output token declarations</td>
							</tr>
							<tr>
								<td><code>u</code></td>
								<td>on</td>
								<td>output unused static variables</td>
							</tr>
							<tr>
								<td><code>v</code></td>
								<td>off</td>
								<td>output local virtual function tables</td>
							</tr>
						</tbody>
					</table>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-m</option><replaceable>opt</replaceable></term>

				<listitem>
					<para>Sets the error formatting options given by
						<emphasis>opt</emphasis>.
						This consists of a sequence of characters describing
						the options to be enabled or disabled.
						By default, or following a <code>+</code>, the options
						are enabled; following a <code>-</code> they are
						disabled.
						The available options are as follows:</para>

					<table>
						<col align="center"/>
						<col align="center"/>
						<col align="left"/>

						<thead>
							<tr>
								<th>Key</th>
								<th>Default</th>
								<th>Description</th>
							</tr>
						</thead>

						<tbody>
						<tr>
							<td><code>c</code></td>
							<td>off</td>
							<td>show source code with error</td>
						</tr>
						<tr>
							<td><code>e</code></td>
							<td>off</td>
							<td>show error name</td>
						</tr>
						<tr>
							<td><code>f</code></td>
							<td>on</td>
							<td>reliable <code>fseek</code> function</td>
						</tr>
						<tr>
							<td><code>g</code></td>
							<td>off</td>
							<td>record statement locations</td>
						</tr>
						<tr>
							<td><code>i</code></td>
							<td>on</td>
							<td>reliable <code>stat</code> function</td>
						</tr>
						<tr>
							<td><code>k</code></td>
							<td>off</td>
							<td>enable C++ spec output</td>
						</tr>
						<tr>
							<td><code>l</code></td>
							<td>off</td>
							<td>output full error location</td>
						</tr>
						<tr>
							<td><code>s</code></td>
							<td>on</td>
							<td>output ISO section number</td>
						</tr>
						<tr>
							<td><code>t</code></td>
							<td>off</td>
							<td>use <code>typedef</code> names in errors</td>
						</tr>
						<tr>
							<td><code>w</code></td>
							<td>off</td>
							<td>disable warnings</td>
						</tr>
						<tr>
							<td><code>z</code></td>
							<td>off</td>
							<td>continue after error</td>
						</tr>
						</tbody>
					</table>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-n</option><replaceable>port-table</replaceable></term>

				<!-- TODO link to user guide to discuss portability tables; they ought to be in a manpage, too -->
				<listitem>Specifies that the given portability table should
					be used to specify the basic configuration parameters.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-o</option><replaceable>output-file</replaceable></term>

				<listitem>Gives an alternative method of specifying the
					output file.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-q</option></term>

				<listitem>Causes <command>tcpplus</command> to quit immediately
					without processing its input files.
					This is useful primarily in version and command-line
					option queries.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-s</option><replaceable>spec-file</replaceable></term>

				<listitem>Causes <command>tcpplus</command> to write a C++ spec
					file describing the input source file to
					<emphasis remap="I">spec-file</emphasis>.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-t</option></term>

				<listitem>Specifies that <command>tcpplus</command> should
					include token declarations in its output TDF capsule.
					While these are strictly unnecessary, they help when
					pretty-printing the output.
					This is equivalent to <option>-jt</option>.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-u</option><replaceable>&nbsp;name&nbsp;...&nbsp;name</replaceable></term>

				<listitem>
					<para>Causes <command>tcpplus</command> to print the
						unmangle forms of the identifier names.
						The form:</para>

					<screen>tcpplus -u <emphasis>name</emphasis> .... <emphasis>name</emphasis></screen>

					<para>can be used to print the unmangled forms of a
						list of <A HREF="lib.html#mangle">mangled identifier
						names</A> to the standard output.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-v</option></term>

				<listitem>Causes the C++ producer version number, plus
					information on the versions of C++ and TDF supported,
					to be printed to the standard error.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-w</option></term>

				<listitem>Disables all warning messages.
					This is equivalent to <option>-mw</option>.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>-z</option></term>

				<listitem>Forces <command>tcpplus</command> to produce an
					output file even if compilation errors occur.
					The effect of installing a TDF capsule produced using
					this option is undefined.
					This is equivalent to <option>-mz</option>.</listitem>
			</varlistentry>

			<varlistentry>
				<term><option>--</option></term>

				<listitem>Marks the last option.
					Any subsequent arguments are interpreted as input and
					output files even if they resemble command-line options.</listitem>
			</varlistentry>
		</variablelist>
	</refsection>

	<refsection id="see_also">
		<title>See Also</title>

		<para><citerefentry><refentrytitle>tcc</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
			<citerefentry><refentrytitle>tdfc2</refentrytitle><manvolnum>1</manvolnum></citerefentry>.</para>
	</refsection>
</refentry>

