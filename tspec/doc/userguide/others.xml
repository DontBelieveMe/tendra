<?xml version="1.0" standalone="no"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
	"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<!--
	$Id$
-->

<chapter id="Others">
	<title>Other tspec Constructs</title>

	<para>Although most <code>tspec</code> constructs are concerned either
		with specifying new objects or imposing structure upon various sets of
		objects, there are a few which do not fall into these
		categories.</para>

	<section id="If">
		<title>+IF, +ELSE and +ENDIF</title>

		<para>It is possible to introduce conditional compilation into the API
			description by means of the constructs:</para>

			<programlisting language="Tspec">
+IF %% text %%
+IFDEF %% text %%
+IFNDEF %% text %%
+ELSE
+ENDIF</programlisting>

		<para>which are translated into:</para>

			<programlisting language="C">
#if text
#ifdef text
#ifndef text
#else /* text */
#endif /* text */</programlisting>

		<para>respectively. If <code>text</code> is just a simple number or a
			single identifier the double percent delimiters may be
			excluded.</para>

		<para>A couple of special <code>+IFDEF</code> (and also
			<code>+IFNDEF</code>) forms are available which are useful on
			occasion. These are:</para>

			<programlisting language="Tspec">
+IFDEF ~building_libs
+IFDEF ~protect ( "api", "header" )</programlisting>

		<para>The macros in these constructs expand respectively to <code>
			__BUILDING_LIBS</code> which, by convention is defined if and only
			if TDF library building is taking place (see
			<link linkend="Libraries">section 6.4</link>), and the protection
			macro <code>tspec</code> makes up to protect the file
			<code>api:header</code> against multiple inclusion (see
			<link linkend="Protect">section 6.2</link>).</para>
	</section>

	<section id="Text">
		<title>Quoted Text</title>

		<para>It is sometimes desirable to include text in the specification
			file which will be copied directly into one of the output files -
			for example, sections of C. This can be done by enclosing the text
			for copying into the include output file in double percents:</para>

			<programlisting language="Tspec">
%% text %%</programlisting>

			<para>and text for copying into the source output file in triple percents:</para>

			<programlisting language="Tspec">
%%% text %%%</programlisting>

		<para>In fact more percents may be used. An even number always
			indicates text for the include output file, and an odd number the
			source output file. Note that any <code>#</code> characters in
			<code>text</code> are copied as normal, and not treated as comments.
			This also applies to the other cases where percent delimiters are
			used.</para>
	</section>

	<section id="Comment">
		<title>C Comments</title>

		<para>A special case of quoted text are C style comments:</para>

			<programlisting language="Tspec">
/* text */</programlisting>

			<para>which are copied directly into the include output file.</para>
	</section>

	<section id="Properties">
		<title>File Properties</title>

		<para>Various properties of individual sets of objects or global
			properties can be set using file properties. These take the
			form:</para>

			<programlisting>
$property = number ;</programlisting>

		<para>for numeric (or boolean) properties, and:</para>

			<programlisting>
$property = "string" ;</programlisting>

		<para>for string properties.</para>

		<para>The valid property names are as follows:</para>

		<!-- TODO: DL -->
		<itemizedlist>
			<listitem>
				<para><code>APINAME</code> is a string property which may be
					used to override the API name of the current set of
					objects.</para>
			</listitem>
	
			<listitem>
				<para><code>FILE</code> is a string property which is used by
					the <code>tspec</code> preprocessor to indicate the current
					input file name.</para>
			</listitem>
	
			<listitem>
				<para><code>FILENAME</code> is a string property which may be
					used to override the header name of the current set of
					objects.</para>
			</listitem>
	
			<listitem>
				<para><code>INCLNAME</code> is a string property which may be
					used to set the name of the include output file in place of
					the default name given in
					<link linkend="Output">section 2.3</link>.	Setting the
					property to the empty string suppresses the output of this
					file.</para>
			</listitem>
	
			<listitem>
				<para><code>INTERFACE</code> is a numeric property which may be
					set to force the creation of the source output file and
					cleared to suppress it.</para>
			</listitem>
	
			<listitem>
				<para><code>LINE</code> is a numeric property which is used by
					the <code>tspec</code> preprocessor to indicate the current
					input file line number.</para>
			</listitem>

			<listitem>
				<para><code>METHOD</code> is a string property which may be used
					to specify alternative construction methods for TDF library
					building (see
					<link linkend="Libraries">section 6.4</link>).</para>
			</listitem>
	
			<listitem>
				<para><code>PREFIX</code> is a string property which may be used
					as a prefix to unique token names in place of the API and
					header names (see
					<link linkend="Names">section 4.1.1</link>).</para>
			</listitem>
	
			<listitem>
				<para><code>PROTECT</code> is a string property which may be
					used to set the macro used by <code>tspec</code> to protect
					the include output file against multiple inclusions (see
					<link linkend="Protect">section 6.2</link>). Setting the
					property to the empty string suppresses this macro.</para>
			</listitem>
	
			<listitem>
				<para><code>SOURCENAME</code> is a string property which may be
					used to set the name of the source output file in place of the
					default name given in
					<link linkend="Output">section 2.3</link>.	Setting the
					property to the empty string suppresses the output of this
					file.</para>
			</listitem>
	
			<listitem>
				<para><code>SUBSETNAME</code> is a string property which may be
					used to override the subset name of the current set of
					objects.</para>
			</listitem>
	
			<listitem>
				<para><code>UNIQUE</code> is a numeric property which may be
					used to switch the unique token name flag on and off (see
					<link linkend="Names">section 4.1.1</link>). For standard APIs
					it is recommended that this property is set to 1 in the API
					<code>MASTER</code> file.</para>
			</listitem>
	
			<listitem>
				<para><code>VERBOSE</code> is a numeric property which may be
					used to set the level of the verbose option (see
					<link linkend="Options">section 2.5</link>).</para>
			</listitem>
	
			<listitem>
				<para><code>VERSION</code> is a string property which may be
					used to assign a version number or other identification to a
					<code>tspec</code> description. This information is reproduced
					in the corresponding include output file.</para>
			</listitem>
		</itemizedlist>
	</section>
</chapter>
	
