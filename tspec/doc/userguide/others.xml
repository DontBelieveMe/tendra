<?xml version="1.0" standalone="no"?>
<!DOCTYPE chapter SYSTEM "minidocbook.dtd">

<!--
	$Id$
-->

<chapter id="Others">
	<title>Other tspec Constructs</title>

	<para>Although most <code>tspec</code> constructs are concerned either
		with specifying new objects or imposing structure upon various sets of
		objects, there are a few which do not fall into these
		categories.</para>

	<section id="If">
		<title>+IF, +ELSE and +ENDIF</title>

		<para>It is possible to introduce conditional compilation into the API
			description by means of the constructs:</para>

		<programlisting language="tspec">+IF %% text %%
+IFDEF %% text %%
+IFNDEF %% text %%
+ELSE
+ENDIF</programlisting>

		<para>which are translated into:</para>

		<programlisting language="c">#if text
#ifdef text
#ifndef text
#else /* text */
#endif /* text */</programlisting>

		<para>respectively. If <code>text</code> is just a simple number or a
			single identifier the double percent delimiters may be
			excluded.</para>

		<para>A couple of special <code>+IFDEF</code> (and also
			<code>+IFNDEF</code>) forms are available which are useful on
			occasion. These are:</para>

		<programlisting language="tspec">+IFDEF ~building_libs
+IFDEF ~protect ( "api", "header" )</programlisting>

		<para>The macros in these constructs expand respectively to <code>
			__BUILDING_LIBS</code> which, by convention is defined if and only
			if TDF library building is taking place (see
			<link linkend="Libraries">section 6.4</link>), and the protection
			macro <code>tspec</code> makes up to protect the file
			<code>api:header</code> against multiple inclusion (see
			<link linkend="Protect">section 6.2</link>).</para>
	</section>

	<section id="Text">
		<title>Quoted Text</title>

		<para>It is sometimes desirable to include text in the specification
			file which will be copied directly into one of the output files -
			for example, sections of C. This can be done by enclosing the text
			for copying into the include output file in double percents:</para>

			<programlisting language="tspec">%% text %%</programlisting>

			<para>and text for copying into the source output file in triple percents:</para>

			<programlisting language="tspec">%%% text %%%</programlisting>

		<para>In fact more percents may be used. An even number always
			indicates text for the include output file, and an odd number the
			source output file. Note that any <code>#</code> characters in
			<code>text</code> are copied as normal, and not treated as comments.
			This also applies to the other cases where percent delimiters are
			used.</para>
	</section>

	<section id="Comment">
		<title>C Comments</title>

		<para>A special case of quoted text are C style comments:</para>

			<programlisting language="tspec">/* text */</programlisting>

			<para>which are copied directly into the include output file.</para>
	</section>

	<section id="Properties">
		<title>File Properties</title>

		<para>Various properties of individual sets of objects or global
			properties can be set using file properties. These take the
			form:</para>

		<programlisting language="tspec">$property = number ;</programlisting>

		<para>for numeric (or boolean) properties, and:</para>

		<programlisting language="tspec">$property = "string" ;</programlisting>

		<para>for string properties.</para>

		<para>The valid property names are as follows:</para>

		<table>
			<col align="left"/>
			<col align="center"/>
			<col align="left"/>

			<thead>
				<tr>
					<th>Property</th>
					<th>Type</th>
					<th>Description</th>
				</tr>
			</thead>

			<tbody>
				<tr>
					<td><code>APINAME</code></td>
					<td>string</td>
					<td>Used to override the API name of the current set of
						objects.</td>
				</tr>
			
				<tr>
					<td><code>FILE</code></td>
					<td>string</td>
					<td>Used by
						the <code>tspec</code> preprocessor to indicate the current
						input file name.</td>
				</tr>
			
				<tr>
					<td><code>FILENAME</code></td>
					<td>string</td>
					<td>Override the header name of the current set of
						objects.</td>
				</tr>
			
				<tr>
					<td><code>INCLNAME</code></td>
					<td>string</td>
					<td>Set the name of the include output file in place of
						the default name given in
						<link linkend="Output">section 2.3</link>.	Setting the
						property to the empty string suppresses the output of this
						file.</td>
				</tr>
			
				<tr>
					<td><code>INFO</code></td>
					<td>string</td>
					<td>The formal name of the API. This is intended to be a complete
						and unambigious name which can be used to find the relevant
						standards which define this API. For example,
						<code>&quot;ISO/IEC 9899:1990/Amendment 1:1995 (E)&quot;</code>.
						This is to be set in the master file only.</td>
				</tr>
			
				<tr>
					<td><code>INTERFACE</code></td>
					<td>numeric</td>
					<td>Set to force the creation of the source output file and
						cleared to suppress it.</td>
				</tr>
			
				<tr>
					<td><code>LINE</code></td>
					<td>numeric</td>
					<td>Used by
						the <code>tspec</code> preprocessor to indicate the current
						input file line number.</td>
				</tr>
			
				<tr>
					<td><code>METHOD</code></td>
					<td>string</td>
					<td>Specify alternative construction methods for TDF library
						building (see
						<link linkend="Libraries">section 6.4</link>).</td>
				</tr>
			
				<tr>
					<td><code>PREFIX</code></td>
					<td>string</td>
					<td>A prefix to unique token names in place of the API and
						header names (see
						<link linkend="Names">section 4.1.1</link>).</td>
				</tr>
			
				<tr>
					<td><code>PROTECT</code></td>
					<td>string</td>
					<td>Set the macro used by <code>tspec</code> to protect
						the include output file against multiple inclusions (see
						<link linkend="Protect">section 6.2</link>). Setting the
						property to the empty string suppresses this macro.</td>
				</tr>
			
				<tr>
					<td><code>SOURCENAME</code></td>
					<td>string</td>
					<td>Set the name of the source output file in place of the
						default name given in
						<link linkend="Output">section 2.3</link>.	Setting the
						property to the empty string suppresses the output of this
						file.</td>

				</tr>
			
				<tr>
					<td><code>SUBSETNAME</code></td>
					<td>string</td>
					<td>Override the subset name of the current set of
						objects.</td>
				</tr>
			
				<tr>
					<td><code>UNIQUE</code></td>
					<td>numeric</td>
					<td>Switch the unique token name flag on and off (see
						<link linkend="Names">section 4.1.1</link>). For standard APIs
						it is recommended that this property is set to 1 in the API
						<code>master.ts</code> file.</td>
				</tr>
			
				<tr>
					<td><code>VERBOSE</code></td>
					<td>numeric</td>
					<td>Set the level of the verbose option (see
						<link linkend="Options">section 2.5</link>).</td>
				</tr>
			
				<tr>
					<td><code>VERSION</code></td>
					<td>string</td>
					<td>Assign a version number or other identification to a
						<code>tspec</code> description. This information is reproduced
						in the corresponding include output file.</td>
				</tr>
			</tbody>
		</table>
	</section>
</chapter>
	
