<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry SYSTEM "minidocbook.dtd" [
	<!ENTITY api.arg    "<replaceable>api</replaceable>">
	<!ENTITY header.arg "<replaceable>header</replaceable>">
	<!ENTITY subset.arg "<replaceable>subset</replaceable>">

	<!ENTITY I.opt "<option>-I</option>&dir.arg;">
	<!ENTITY O.opt "<option>-O</option>&dir.arg;">
	<!ENTITY V.opt "<option>-V</option>">
	<!ENTITY a.opt "<option>-a</option>">
	<!ENTITY b.opt "<option>-b</option>">
	<!ENTITY c.opt "<option>-c</option>">
	<!ENTITY e.opt "<option>-e</option>">
	<!ENTITY f.opt "<option>-f</option>">
	<!ENTITY i.opt "<option>-i</option>">
	<!ENTITY l.opt "<option>-l</option>">
	<!ENTITY m.opt "<option>-m</option>">
	<!ENTITY n.opt "<option>-n</option>">
	<!ENTITY p.opt "<option>-p</option>">
	<!ENTITY r.opt "<option>-r</option>">
	<!ENTITY s.opt "<option>-s</option>">
	<!ENTITY u.opt "<option>-u</option>">
	<!ENTITY y.opt "<option>-y</option>">
	<!ENTITY v.opt "<option>-v</option>">
]>

<refentry>
<!--
	Copyright (c) 2002-2007 The TenDRA Project <http://www.tendra.org/>.
	All rights reserved.

	Redistribution and use in source and binary forms, with or without
	modification, are permitted provided that the following conditions are met:

	1. Redistributions of source code must retain the above copyright notice,
	   this list of conditions and the following disclaimer.
	2. Redistributions in binary form must reproduce the above copyright notice,
	   this list of conditions and the following disclaimer in the documentation
	   and/or other materials provided with the distribution.
	3. Neither the name of The TenDRA Project nor the names of its contributors
	   may be used to endorse or promote products derived from this software
	   without specific, prior written permission.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS
	IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
	THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
	PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR
	CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
	EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
	PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
	OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
	WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
	OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
	ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<!--			 Crown Copyright (c) 1997
	
	This TenDRA(r) Manual Page is subject to Copyright
	owned by the United Kingdom Secretary of State for Defence
	acting through the Defence Evaluation and Research Agency
	(DERA).	It is made available to Recipients with a
	royalty\-free licence for its use, reproduction, transfer
	to other parties and amendment for any purpose not excluding
	product development provided that any such use et cetera
	shall be deemed to be acceptance of the following conditions:\-
	
			(1) Its Recipients shall ensure that this Notice is
			reproduced upon any copies or amended versions of it;
	
			(2) Any amended version of it shall be clearly marked to
			show both the nature of and the organisation responsible
			for the relevant amendment or amendments;
	
			(3) Its onward transfer from a recipient to another
			party shall be deemed to be that party's acceptance of
			these conditions;
	
			(4) DERA gives no warranty or assurance as to its
			quality or suitability for any purpose and DERA accepts
			no liability whatsoever in relation to any use to which
			it may be put.
-->

	<refentryinfo>
		<productname>tspec</productname>
	</refentryinfo>

	<refmeta>
		<refentrytitle>tspec</refentrytitle>
		<manvolnum>1</manvolnum>
	</refmeta>

	<refnamediv>
		<refname>tspec</refname>
		<refpurpose>An API specification tool</refpurpose>
	</refnamediv>

	<refsynopsisdiv>
		<cmdsynopsis>
			<command>tspec</command>

			<!-- Options out -->
			<group choice="opt">
				<arg choice="plain">&O.opt;</arg>
			</group>
			<group choice="opt">
				<arg choice="plain">&f.opt;</arg>
				<arg choice="plain">&n.opt;</arg>
			</group>

			<sbr/>

			<!-- Common options -->
			<arg choice="opt">&b.opt;</arg>
			<arg choice="opt">&p.opt;</arg>
			<arg choice="opt">&r.opt;</arg>
			<arg choice="opt">&u.opt;</arg>
			<arg choice="opt">&v.opt;</arg>

			<sbr/>

			<!-- Input API -->
			<arg choice="opt">&I.opt;</arg>
			<group choice="opt">
				<arg choice="plain">&a.opt;</arg>
				<arg choice="plain">&s.opt;</arg>
			</group>
			<group choice="req">
				<arg choice="plain">
					<!-- Input local file -->
					&l.opt;&nbsp;&file.arg;
				</arg>
				<arg choice="plain">
					<!-- Input API -->
					<arg choice="plain">&api.arg;
						<arg choice="opt">&header.arg;
							<arg choice="opt">&subset.arg;</arg>
						</arg>
					</arg>
				</arg>
			</group>
		</cmdsynopsis>

		<cmdsynopsis>
			<command>tspec</command>

			<!-- Options noout -->
			<group choice="req">
				<arg choice="plain">&c.opt;</arg>
				<arg choice="plain">&e.opt;</arg>
				<arg choice="plain">&i.opt;</arg>
				<arg choice="plain">&m.opt;</arg>
			</group>

			<sbr/>

			<!-- Common options -->
			<arg choice="opt">&p.opt;</arg>
			<arg choice="opt">&r.opt;</arg>
			<arg choice="opt">&u.opt;</arg>
			<arg choice="opt">&v.opt;</arg>

			<sbr/>

			<!-- Input API -->
			<arg choice="opt">&I.opt;</arg>
			<group choice="opt">
				<arg choice="plain">&a.opt;</arg>
				<arg choice="plain">&s.opt;</arg>
			</group>
			<group choice="req">
				<arg choice="plain">
					<!-- Input local file -->
					<arg choice="plain">&l.opt;</arg>
					<arg choice="plain">&file.arg;</arg>
				</arg>
				<arg choice="plain">
					<!-- Input API -->
					<arg choice="plain">&api.arg;
						<arg choice="opt">&header.arg;
							<arg choice="opt">&subset.arg;</arg>
						</arg>
					</arg>
				</arg>
			</group>
		</cmdsynopsis>

		<cmdsynopsis>
			<command>tspec</command>

			<!-- Options out -->
			<group choice="req">
				<arg choice="plain">&y.opt;</arg>
			</group>

			<sbr/>

			<!-- Common options -->
			<arg choice="opt">&b.opt;</arg>
			<arg choice="opt">&r.opt;</arg>
			<arg choice="opt">&v.opt;</arg>

			<sbr/>

			<!-- Input API -->
			<arg choice="opt">&I.opt;</arg>
			<group choice="opt">
				<arg choice="plain">&a.opt;</arg>
				<arg choice="plain">&s.opt;</arg>
			</group>
			<group choice="req">
				<arg choice="plain">
					<!-- Input local file -->
					<arg choice="plain">&l.opt;</arg>
					<arg choice="plain">&file.arg;</arg>
				</arg>
				<arg choice="plain">
					<!-- Input API -->
					<arg choice="plain">&api.arg;
						<arg choice="opt">&header.arg;
							<arg choice="opt">&subset.arg;</arg>
						</arg>
					</arg>
				</arg>
			</group>
		</cmdsynopsis>

		<cmdsynopsis>
			<command>tspec</command>

			<group choice="req">
				<arg choice="plain">&V.opt;</arg>
			</group>
		</cmdsynopsis>
	</refsynopsisdiv>

	<refsection>
		<title>Description</title>

		<para>&tspec; is a tool for translating a form of &api;
			(Application Programing Interface) description into the
			<code>#pragma</code> headers used by &tcc; to represent such &api;s.
			It is more fully documented in &tspec.doc;.</para>

		<para>There are two basic forms of stating what to process.
			The first specifies that &tspec; should process the whole of the
			&api; description &api.arg;, or just one header from it,
			&header.arg;, or just a subset of that header, &subset.arg;, writing
			its output to the standard output directory.
			In addition, &tspec; has a local input mode (using the &l.opt; option)
			for translating single headers which are not part of an &api;
			into the corresponding <code>#pragma token</code> statements,
			writing the output to the standard output.</para>
	</refsection>

	<refsection>
		<title>Options</title>

		<variablelist>
			<varlistentry>
				<term>&I.opt;</term>

				<listitem>
					<para>Add the colon-separated list of directories &dir.arg;
						to the list of directories searched for input files.
						Input directories can also be specified using the
						<varname>TSPEC_INPUT</varname> environment variable.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&O.opt;</term>

				<listitem>
					<para>Specifies that the directory &dir.arg; should be used
						as a base for the include output generated files.  This can also be
						specified using the <varname>TSPEC_OUTPUT</varname>
						environment variable.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&V.opt;</term>

				<listitem>
					<para>Causes &tspec; to print the program's version, as well
						as the TenDRA release.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&b.opt;</term>

				<listitem>
					<para>Apply <code>basename</code> to &api; paths. This has the
						effect of flattening &api;s within subdirectories into a single
						directory on output.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&a.opt;</term>

				<listitem>
					<para>Causes &tspec; to check all headers in an &api; at
						once, as opposed to separately (as with the &s.opt; option).</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&c.opt;</term>

				<listitem>
					<para>Causes &tspec; to only check the input files, not to
						generate any output files.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&e.opt;</term>

				<listitem>
					<para>Causes &tspec; to only run its preprocessor phase,
						writing the output to the standard output.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&f.opt;</term>

				<listitem>
					<para>Causes &tspec; to ignore date stamps when deciding
						whether it is necessary to update an output file, and to
						force it to be updated.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&i.opt;</term>

				<listitem>
					<para>Causes &tspec; to print an index of all the objects
						specified in the input files to the standard output.
						This index is designed to be used as a quick guide to the
						contents of an &api;.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&l.opt;</term>

				<listitem>
					<para>Specifies local input mode (see above).</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&m.opt;</term>

				<listitem>
					<para>Causes &tspec; to print an index intended for machine
						processing of all the objects specified in the input files
						to the standard output.
						This index is suitable for processing with text processing
						tools such as &awk;.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&n.opt;</term>

				<listitem>
					<para>Causes &tspec; to update any output files which are
						younger than the &tspec; executable.  This is useful
						primarily in development work on &tspec; itself.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&p.opt;</term>

				<listitem>
					<para>Indicates to &tspec; that its input has already been
						preprocessed (i.e. that it is the output of a previous
						&e.opt; option).</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&r.opt;</term>

				<listitem>
					<para>Causes &tspec; to only produce output for implemented,
						as opposed to used, objects.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&s.opt;</term>

				<listitem>
					<para>Causes &tspec; to check each header in an &api;
						separately, as opposed to all at once
						(as with the &a.opt; option).</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&u.opt;</term>

				<listitem>
					<para>Causes &tspec; to generate unique token names for the
						objects in its input files.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&v.opt;</term>

				<listitem>
					<para>Causes &tspec; to enter verbose mode, in which it
						reports on the output files it creates. If two &v.opt;
						options are given then &tspec; enters very verbose mode,
						in which it gives more information on its activities.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&y.opt;</term>

				<listitem>
					<para>Causes &tspec; to generate &tcc; environment files.
						These contain the relevant configuration for &tcc; to
						use an &api;.</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsection>

	<refsection>
		<title>See Also</title>

		<para>&tcc;, &tdfc2;.</para>

		<para>&tspec.doc;.</para>
	</refsection>
</refentry>

