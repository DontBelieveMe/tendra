# $Id$

PREFIX?=/usr/local
BINDIR?=${PREFIX}/bin

EXDS_LIBS?=-L${PREFIX}/lib/exds
EXDS_CFLAGS?=-I${PREFIX}/include/exds

CFLAGS?=${EXDS_CFLAGS}

TARGETS=arg-parse.o grammar.o lexer.o \
	main.o output.o parser.o lexi_lexer.o fmt.o

MOVE=mv
REMOVE=rm -f
PERL=perl
LEXI=lexi
SID=sid
INSTALL=install

# XXX: Do I want to have them removed during clean?
#CLEAN_EXTRA= parser.c junk.h c-parser.c c-junk.h

SIDOPTS=-l ansi-c -s numeric -s no-terminals -s no-numeric-terminals
LEXIOPTS=-lC90 -a

#PARSER_OUT=${SRC}/parser.c ${SRC}/junk.h
#C_OUT=${SRC}/c-parser.c ${SRC}/c-junk.h

all: sid

install: sid
	${INSTALL} -m 755 -d ${BINDIR}
	${INSTALL} -m 755 sid ${BINDIR}/

# Remove only what's generated by a normal build except for configurations
clean:
	${REMOVE} sid ${TARGETS}
	cd shared/error && ${MAKE} clean
	cd rules && ${MAKE} clean
	cd lang-c && ${MAKE} clean
	cd lang-test && ${MAKE} clean
	cd lang-bnf && ${MAKE} clean
	cd adt && ${MAKE} clean

# Remove generated files that are in the distribution
maintainer-clean:
	${REMOVE} lexi_lexer.c
	cd lang-c && ${MAKE} maintainer-clean

sid: ${TARGETS} shared/error/liberror.a rules/rules.a adt/adt.a \
	lang-c/lang-c.a lang-test/lang-test.a lang-bnf/lang-bnf.a
	${CC} ${CFLAGS} ${LDFLAGS} -o $@ ${TARGETS} \
		rules/rules.a adt/adt.a \
		lang-c/lang-c.a lang-test/lang-test.a lang-bnf/lang-bnf.a -lexds ${LIBS_EXDS} \
		-Lshared/error -lerror

shared/error/liberror.a:
	cd shared/error && ${MAKE} -f makefile.standalone liberror.a

rules/rules.a:
	cd rules && ${MAKE} all

adt/adt.a:
	cd adt && ${MAKE} all

lang-c/lang-c.a:
	cd lang-c && ${MAKE} all

lang-test/lang-test.a:
	cd lang-test && ${MAKE} all

lang-bnf/lang-bnf.a:
	cd lang-bnf && ${MAKE} all

parser.c: parser.sid parser.act
	${SID} ${SIDOPTS} parser.sid parser.act tmp.$@ junk.h \
		|| ( ${REMOVE} tmp.$@ ; exit 1 )
	${MOVE} tmp.$@ $@

lexer.c: lexi_lexer.c

lexer.h: lexi_lexer.h

lexi_lexer.h lexi_lexer.c: lexi_lexer.lxi lexi_lexer.lct
	-${MOVE} lexi_lexer.c sav.lexi_lexer.c 
	-${MOVE} lexi_lexer.h sav.lexi_lexer.h
	${LEXI} ${LEXIOPTS} -t LEXER_TOK_ lexi_lexer.lxi lexi_lexer.lct lexi_lexer.c lexi_lexer.h \
		|| ( ${MOVE} sav.lexi_lexer.c lexi_lexer.c ; ${MOVE} sav.lexi_lexer.h lexi_lexer.h ; exit 1 )

