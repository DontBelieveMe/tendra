/*
 * Copyright (c) 2002-2005 The TenDRA Project <http://www.tendra.org/>.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 3. Neither the name of The TenDRA Project nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific, prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS
 * IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * $Id$
 */

HEADERS = @{

#include "c-lexer.h"
#include "../gen-errors.h"

/*
 * Lexi interface identifier wrappers.
 *
 * These are defined here just to keep them out of the way; nothing but the
 * lxi file references them.
 *
 * TODO These will be removed once Lexi provides identifier support.
 */
#define c_lexer_read_identifier(c) \
	c_lexer_support_read_id(c, C_TOK_C_HIDENTIFIER, c_lexi_group_identbody)

#define c_lexer_act_read_label(c0, c1, c2) \
	c_lexer_support_read_id(c2, C_TOK_ACT_HLABEL, c_lexi_group_act_identbody)

#define c_lexer_act_read_reference(c0, c1, c2) \
	c_lexer_support_read_id(c2, C_TOK_ACT_HREFERENCE, c_lexi_group_act_identbody)

#define c_lexer_act_read_modifiable(c0, c1, c2) \
	c_lexer_support_read_id(c2, C_TOK_ACT_HMODIFIABLE, c_lexi_group_act_identbody)

#define c_lexer_act_read_basic(c0, c1, c2) \
	c_lexer_support_read_id(c2, C_TOK_ACT_HBASIC, c_lexi_group_identbody)

#define c_lexer_act_read_identifier(c0, c1) \
	c_lexer_support_read_id(c1, C_TOK_ACT_HIDENTIFIER, c_lexi_group_act_identbody)

@} , @{
@};

TRAILERS = @{
@},@{
@} ;

MAP TERMINAL -> int;

ACTION E_c_eof_in_comment : () -> () = @{
	 E_c_eof_in_comment(&c_lexer_stream->istream);
@};
