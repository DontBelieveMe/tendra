/*
 * Copyright (c) 2002-2005 The TenDRA Project <http://www.tendra.org/>.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 3. Neither the name of The TenDRA Project nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific, prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS
 * IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * $Id$
 */

HEADERS = @{

	#include "c-lexer.h"
	#include "../shared/error/error.h"

@} , @{
@};

TRAILERS = @{
@},@{
@} ;

MAP TERMINAL -> int;

ACTION read_builtin : (c:CHARACTER) -> (t:TERMINAL) = @{
       @t=c_lexer_read_builtin(@c);
@};


ACTION act_read_string : (c:CHARACTER) -> (t:TERMINAL) = @{
       @t=c_lexer_act_read_string(@c);
@};

ACTION support_read_id_global : (c:CHARACTER, t1:TERMINAL) -> (t2:TERMINAL) = @{
       @t2=c_lexer_support_read_id(@c, @t1, c_lexi_group_identbody);
@};

ACTION support_read_id_act : (c:CHARACTER, t1:TERMINAL) -> (t2:TERMINAL) = @{
       @t2=c_lexer_support_read_id(@c, @t1, c_lexi_group_act_identbody);
@};

ACTION eof_in_comment = @{
	error_posn(ERROR_FATAL, istream_name(&c_lexer_stream->istream), (int) istream_line(&c_lexer_stream->istream),
		"end of file in comment");
@};

ACTION unknown_token : (c:CHARACTER) -> (t:TERMINAL) = @{
       @t=c_lexer_unknown_token(@c);
@};
