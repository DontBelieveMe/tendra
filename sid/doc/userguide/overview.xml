<?xml version="1.0" standalone="no"?>
<!DOCTYPE chapter SYSTEM "minidocbook.dtd">

<chapter id="overview">
	<title>Overview</title>

	<para>One of the aims of
		&sid; was to separate the specification of the
		language to be recognised from the language that the recogniser
		program is written in. For this reason, input to &sid;
		is split into two components: output language independent
		information (.sid), and output language dependent information (.act).</para>

	<para>The main operations &sid; performs are, in order</para>

	<orderedlist>
		<listitem>
			<para>Read the grammar <filename>.sid</filename> file.</para>
		</listitem>

		<listitem>
			<para>Read the grammar output language specific .act file.</para>
		</listitem>

		<listitem>
			<para>Transform and Optimises the Grammar. Most notably, it removes left
				recursion and tries to transform the context free grammar provided 
				in an equivalent LL(1) grammar.</para>
		</listitem>

		<listitem>
			<para>Output the parser.</para>
		</listitem>
	</orderedlist>

	<para>At present, &sid; will only output programs in C
		(either &iso; or pre-&iso;), but it is designed so that adding new
		output languages should be fairly simple. Output of the grammar
		to BNF is also provided. There is one other pseudo-language:
		the test language. This is used for testing grammars and the
		transforms, but will not output a parser.</para>
</chapter>

