/*
 *  AUTOMATICALLY GENERATED BY lexi VERSION 2.0
 */

#ifndef LEXI_GENERATED_HEADER_lexi_lct__INCLUDED
#define LEXI_GENERATED_HEADER_lexi_lct__INCLUDED

/*
 * This struct holds state for the lexer; its representation is
 * private, but present here for ease of allocation.
 */
struct lexi_lct_state {
	int (*zone_function)(struct lexi_lct_state *);

	/*
	 * Lexi's buffer is a simple stack. The size is calculated as
	 * max(mapping) - 1 + max(token) - 1
	 */
	int buffer[9 - 1];
	int buffer_index;

};
#ifndef LEX_EOF
#define LEX_EOF		256
#endif

extern void lexi_lct_push(struct lexi_lct_state *state, const int c);
extern int lexi_lct_pop(struct lexi_lct_state *state);
extern void lexi_lct_flush(struct lexi_lct_state *state);
extern int lexi_lct_readchar(struct lexi_lct_state *state);
enum lexi_lct_groups {
	lexi_lct_group_alpha = 0x01,
	lexi_lct_group_white = 0x02
};

/* true if the given character is present in the given group */
extern int lexi_lct_group(enum lexi_lct_groups group, int c);
extern int lexi_lct_keyword(const char *identifier, int notfound);

extern int lexi_lct_read_token(struct lexi_lct_state *state);
void lexi_lct_init(struct lexi_lct_state *state);
#endif
