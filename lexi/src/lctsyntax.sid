/*
 * Copyright (c) 2002-2005 The TenDRA Project <http://www.tendra.org/>.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 3. Neither the name of The TenDRA Project nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific, prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS
 * IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * $Id: lex.c 1714 2007-11-25 13:36:15Z kate $
 */

%types%


%terminals%

header-kw ;
trailer-kw ;
letter ;
define ;  	//=
semicolon ;	//;
comma ;   	//,
code-start;	//@{
code-end;	//@}
eof;
!unknown ;

%productions%

<E-syntax-error> ;
<E_unexpected_eof> ;

letters : () -> () = {
	$ ;
    ||
	letter ; letters ; 
} ;

grp-of-letters : () ->() = {
	letters ; 
    	{
		$ ;
	    ||
		eof; <E_unexpected_eof> ;
	} ;
};

header-stmnt : () -> () = {
	header-kw ;
	define ;
	code-start ;
	grp-of-letters ;
	code-end ;	
	comma ;
	code-start ;
	letters ;
	code-end ;	
	semicolon ;
};

trailer-stmnt : () -> () = {
	trailer-kw ;
	define ;
	code-start ;
	grp-of-letters ;
	code-end ;	
	comma ;
	code-start ;
	letters ;
	code-end ;	
	semicolon ;
};


lct-unit : () -> () = {
	{
		header-stmnt;
	    ||
		$;
	} ;
	{
		trailer-stmnt;
	    ||
		$;
	} ;
	eof;
    ##
	<E-syntax-error> ;
};

%entry% 
lct-unit ;
