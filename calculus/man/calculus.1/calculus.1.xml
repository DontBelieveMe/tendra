<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry SYSTEM "minidocbook.dtd" [
	<!ENTITY A.opt "<option>-A</option>&nbsp;&name.arg;">
	<!ENTITY E.opt "<option>-E</option>&nbsp;&file.arg;">
	<!ENTITY T.opt "<option>-T</option>&nbsp;&file.arg;">
	<!ENTITY a.opt "<option>-a</option>">
	<!ENTITY d.opt "<option>-d</option>">
	<!ENTITY i.opt "<option>-i</option>">
	<!ENTITY o.opt "<option>-o</option>">
	<!ENTITY p.opt "<option>-p</option>">
	<!ENTITY r.opt "<option>-r</option>">
	<!ENTITY t.opt "<option>-t</option>">
	<!ENTITY v.opt "<option>-v</option>">
	<!ENTITY w.opt "<option>-w</option>">
	<!ENTITY x.opt "<option>-x</option>">
]>

<!-- $Id$ -->
<refentry>
<!--
	Copyright (c) 2002-2007 The TenDRA Project <http://www.tendra.org/>.
	All rights reserved.

	Redistribution and use in source and binary forms, with or without
	modification, are permitted provided that the following conditions are met:

	1. Redistributions of source code must retain the above copyright notice,
	   this list of conditions and the following disclaimer.
	2. Redistributions in binary form must reproduce the above copyright notice,
	   this list of conditions and the following disclaimer in the documentation
	   and/or other materials provided with the distribution.
	3. Neither the name of The TenDRA Project nor the names of its contributors
	   may be used to endorse or promote products derived from this software
	   without specific, prior written permission.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS
	IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
	THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
	PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR
	CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
	EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
	PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
	OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
	WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
	OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
	ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<!--			 Crown Copyright (c) 1997
	
	This TenDRA(r) Manual Page is subject to Copyright
	owned by the United Kingdom Secretary of State for Defence
	acting through the Defence Evaluation and Research Agency
	(DERA).	It is made available to Recipients with a
	royalty\-free licence for its use, reproduction, transfer
	to other parties and amendment for any purpose not excluding
	product development provided that any such use et cetera
	shall be deemed to be acceptance of the following conditions:\-
	
			(1) Its Recipients shall ensure that this Notice is
			reproduced upon any copies or amended versions of it;
	
			(2) Any amended version of it shall be clearly marked to
			show both the nature of and the organisation responsible
			for the relevant amendment or amendments;
	
			(3) Its onward transfer from a recipient to another
			party shall be deemed to be that party's acceptance of
			these conditions;
	
			(4) DERA gives no warranty or assurance as to its
			quality or suitability for any purpose and DERA accepts
			no liability whatsoever in relation to any use to which
			it may be put.
-->

	<refmeta>
		<refentrytitle>calculus</refentrytitle>
		<manvolnum>1</manvolnum>
	</refmeta>

	<refnamediv>
		<refname>Calculus</refname>
		<refpurpose>Algebraic type system tool</refpurpose>
	</refnamediv>

	<refsynopsisdiv>
		<cmdsynopsis>
			<command>calculus</command>

			<arg choice="opt">&A.opt;</arg>
			<arg choice="opt">&E.opt;</arg>
			<arg choice="opt">&T.opt;</arg>
			<arg choice="opt">&a.opt;</arg>
			<arg choice="opt">&d.opt;</arg>
			<arg choice="opt">&i.opt;</arg>
			<arg choice="opt">&o.opt;</arg>
			<arg choice="opt">&p.opt;</arg>
			<arg choice="opt">&r.opt;</arg>
			<arg choice="opt">&t.opt;</arg>
			<arg choice="opt">&w.opt;</arg>
			<arg choice="opt">&x.opt;</arg>

			<sbr/>

			<arg choice="plain" rep="repeat">&in-file.arg;</arg>
			<arg choice="opt">&out-file.arg;</arg>
		</cmdsynopsis>

		<cmdsynopsis>
			<command>calculus</command>

			<group choice="req">
				<arg choice="plain">&v.opt;</arg>
			</group>
		</cmdsynopsis>
	</refsynopsisdiv>

	<refsection>
		<title>Description</title>

		<para>&calculus; translates a specification of an algebraic type system,
			&in-file.arg;, into code representing that system.
			This takes the form of a number of files which are generated in the
			output directory, &out-file.arg;.
			If no output directory is specified then the current working
			directory is used.</para>

		<para>By default, C code implementing the type system is generated,
			however this may be changed by means of command-line options.</para>

		<para>Input files and command-line options may be given in any order.
			Options always relate to the input files immediately following.</para>

		<para>Type systems for &calculus; are conventionally named with the
			extension &alg.ext;.</para>
	</refsection>

	<refsection>
		<title>Options</title>

		<variablelist>
			<varlistentry>
				<term>&A.opt;</term>

				<listitem>
					<para>Specifies that the algebra named
						&name.arg; should be used by the output routines.
						Unless otherwise specified the last algebra input is
						used for output.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&E.opt;</term>

				<listitem>
					<para>Specifies a file containing a list of extra types to
						&calculus;.
						These are used, for example, to generate extra disk reading
						and writing routines in conjunction with the
						&d.opt; option.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&T.opt;</term>

				<listitem>
					<para>Specifies a template file which is used to generate an
						output file &out-file.arg;.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&a.opt;</term>

				<listitem>
					<para>Causes &calculus; to generate extra statements in its
						C code which includes assertions about null pointers etc.
						and other code to help in writing programs using the
						tool.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&d.opt;</term>

				<listitem>
					<para>Causes &calculus; to generate disk reading and writing
						routines designed to add persistence to the generated type
						system.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&i.opt;</term>

				<listitem>
					<para>Indicates to &calculus; that &in-file.arg; is a
						simple input file.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&o.opt;</term>

				<listitem>
					<para>Causes &calculus; to output a pretty-print of the input
						algebra into &out-file.arg;, which in this instance in an
						output file.
						If no output file is given then the standard output is
						used.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&p.opt;</term>

				<listitem>
					<para>Causes &calculus; to generate printing routines designed
						for use in the debugging of programs written using the type
						system.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&r.opt;</term>

				<listitem>
					<para>Indicates to &calculus; that &in-file.arg; is the
						output of a previous &w.opt; option.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&t.opt;</term>

				<listitem>
					<para>Causes &calculus; to generate <code>#pragma token</code>
						commands describing the type system.
						These are designed so that &tcc; can apply extremely rigorous
						type checking to programs written using the type
						system.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&v.opt;</term>

				<listitem>
					<para>Causes &calculus; to print its version number.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&w.opt;</term>

				<listitem>
					<para>Causes &calculus; to output a dump of the input algebra
						into &out-file.arg;, which in this instance is an output
						file.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>&x.opt;</term>

				<listitem>
					<para>Causes &calculus; to suppress the vector and vector
						pointer constructs in its output.</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsection>

	<refsection>
		<title>See Also</title>

		<para>&tcc;.</para>
	</refsection>
</refentry>

