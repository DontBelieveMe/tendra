# TenDRA make build infrastructure
#
# $Id$

.if !defined(_TENDRA_WORK_ENV_MK_)
_TENDRA_WORK_ENV_MK_=1

.include <tendra.base.mk>
.include <tendra.functions.mk>

ENVCAT= Envcat() {                                                  \
        echo '/* generated by tendra.env.mk */';                    \
        echo;                                                       \
        for env in $${*}; do                                        \
            cat $${env}                                             \
            | sed 's,^/\* \$$Id,/* '$${env\#${BASE_DIR}/machines/}': $$Id,g'; \
            echo;                                                   \
        done                                                        \
    }; Envcat


.if !defined(ENVFILE) && !defined(ENVCOMMON)
.BEGIN:
	@${ECHO} '$${ENVFILE} or $${ENVCOMMON} must be set'
	@${EXIT} 1;
.endif

listenvs:
	@${ECHO} ${ENVFILE}

# The silly inner loop is because OpenBSD's make(1) does not have :O:u
.for dir in ${ENVCOMMON}
_ENVCOMMON_${dir} != cd ${BASE_DIR}/${dir} && ${MAKE} listenvs
. for env in ${_ENVCOMMON_${dir}}
ENVFILE := ${ENVFILE:S/^${env}$//} ${env}
. endfor
.endfor

.for env in ${ENVFILE}
.for dir in ${ENVCOMMON}
.  if exists(${BASE_DIR}/${dir}/${env})
${OBJ_DIR}/env/${env}: ${BASE_DIR}/${dir}/${env}
.  endif
. endfor
.endfor

.for env in ${ENVFILE}
. if exists(${env})
${OBJ_DIR}/env/${env}: ${.CURDIR}/${env}
. endif
.endfor

.for env in ${ENVFILE}
${OBJ_DIR}/env/${env}:
	@${CONDCREATE} "${OBJ_DIR}/env"
	@${ECHO} "==> Constructing ${WRKDIR}/${env} environment"
	@${ENVCAT} ${.ALLSRC} > ${.TARGET}
.endfor



#
# User-facing targets
#

.if defined(ENVCOMMON)
. for env in ${ENVFILE}
all:: ${OBJ_DIR}/env/${env:R}
. endfor
.endif


clean::
	${RMFILE} ${ENVFILE:C/^/${OBJ_DIR}\/env\//}

.if defined(ENVCOMMON)
. for env in ${ENVFILE}
install:: ${OBJ_DIR}/env/${env}
. endfor
.endif

.if defined(ENVCOMMON)
install::
	@${ECHO} "==> Installing ${WRKDIR} environments"
	@${CONDCREATE} "${PREFIX_ENV}"
. for env in ${ENVFILE}
	${INSTALL} -m 644 ${OBJ_DIR}/env/${env} ${PREFIX_ENV}/${env}
. endfor
.endif



.endif	# !defined(_TENDRA_WORK_ENV_MK_)
