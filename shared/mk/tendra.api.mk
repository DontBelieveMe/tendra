# TenDRA make build infrastructure
#
# $Id$

.if !defined(_TENDRA_WORK_API_MK_)
_TENDRA_WORK_API_MK_=1

.include <tendra.base.mk>
.include <tendra.functions.mk>

.if !defined(API)
.BEGIN:
	@${ECHO} '$${API} must be set'
	@${EXIT} 1;
.endif

# XXX: assert on APILIB and APIOBJS for target(makeapi)


_objdir=	${OBJ_DIR}/${APIS}

JOPTS= -Y32bit -I${BASE_DIR}/src/lib/machines/${OSFAM}/${BLDARCH}/include \
	-I/usr/include -f${BASE_DIR}/${STARTUP_MACH}/${API}.h -D__BUILDING_LIBS

# Include Makefile generated by tspec during api-depend.
.if exists(${_objdir}/building/${API}.api/Makefile)
. include "${_objdir}/building/${API}.api/Makefile"
.endif

# Make tspec-generated paths relative to objdir
APIOBJS:=	${APIOBJS:C/^/${_objdir}\//g}
APILIB:= 	${APILIB:C/^/${_objdir}\//g}

makeapi: ${APILIB}

${APILIB}: ${APIOBJS}
	@${ECHO} "==> Linking ${API} API"
	${TLD} -mc -o ${APILIB} ${APIOBJS}

CLEAN_EXTRA+= ${APILIB} ${APIOBJS} ${APIOBJS:S/.j/.c/} \
              ${_objdir}/building/${API}.api/Makefile



#
# User-facing targets
#

all::
	@${ECHO} "==> Creating API source for ${API}"
	@cd ${_objdir} && ${TSPEC} -v -I${BASE_DIR}/${APIS} -O. -S./building ${API}
	@cd ${BASE_DIR}/${APIS}/${API}/ && ${.MAKE} makeapi ${.MAKEFLAGS}


clean::
.if "${CLEAN_EXTRA}" != ""
	${REMOVE} ${CLEAN_EXTRA}
.endif


# Relative to .OBJDIR.
CAPIDIR=${_objdir}/building
SAPIDIR=${_objdir}/shared
HAPIDIR=${_objdir}

# Absolute target dirs.
SINSTDIR=${INSTALL_DIR}/lib/include/shared
HINSTDIR=${INSTALL_DIR}/lib/include
CINSTDIR=${INSTALL_DIR}/lib/building
LINSTDIR=${INSTALL_DIR}/lib

# XXX: not all of these files are required to be installed
install::
	@${ECHO} "==> Installing ${API} API"
	${CONDCREATE} "${HINSTDIR}" "${CINSTDIR}" "${LINSTDIR}"
.if exists(${SAPIDIR}/${API}.api)
	${CONDCREATE} "${SINSTDIR}"
.endif
	${INSTALL} -m 644 ${_objdir}/${API}.tl ${LINSTDIR}
	@cd ${CAPIDIR} && ${FIND} ${API}.api -name '.*' -prune -o -print | \
	while read file; do \
		if ${TEST} -d $${file}; then \
			${ECHO} ${INSTALL} -m 755 -d ${CINSTDIR}/$${file}; \
			${INSTALL} -m 755 -d ${CINSTDIR}/$${file} || ${EXIT} $$?; \
		else \
			${ECHO} ${INSTALL} -m 644 $${file} ${CINSTDIR}/$${file}; \
			${INSTALL} -m 644 $${file} ${CINSTDIR}/$${file} || ${EXIT} $$?; \
		fi; \
	done
	@cd ${HAPIDIR} && ${FIND} ${API}.api -name '.*' -prune -o -print | \
	while read file; do \
		if ${TEST} -d $${file}; then \
			${ECHO} ${INSTALL} -m 755 -d ${HINSTDIR}/$${file}; \
			${INSTALL} -m 755 -d ${HINSTDIR}/$${file} || ${EXIT} $$?; \
		else \
			${ECHO} ${INSTALL} -m 644 $${file} ${HINSTDIR}/$${file}; \
			${INSTALL} -m 644 $${file} ${HINSTDIR}/$${file} || ${EXIT} $$?; \
		fi; \
	done
.if exists(${SAPIDIR}/${API}.api)
	@cd ${SAPIDIR} && ${FIND} ${API}.api -name '.*' -prune -o -print | \
	while read file; do \
		if ${TEST} -d $${file}; then \
			${ECHO} ${INSTALL} -m 755 -d ${SINSTDIR}/$${file}; \
			${INSTALL} -m 755 -d ${SINSTDIR}/$${file} || ${EXIT} $$?; \
		else \
			${ECHO} ${INSTALL} -m 644 $${file} ${SINSTDIR}/$${file}; \
			${INSTALL} -m 644 $${file} ${SINSTDIR}/$${file} || ${EXIT} $$?; \
		fi; \
	done
.endif



.endif	# !defined(_TENDRA_WORK_API_MK_)
