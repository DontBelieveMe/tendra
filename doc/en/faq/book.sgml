<!DOCTYPE BOOK PUBLIC "-//FreeBSD//DTD DocBook V4.1-Based Extension//EN">

<book>
  <bookinfo>
    <title>TenDRA Frequently Asked Questions</title>
    <pubdate>$TenDRA$</pubdate>
    <corpauthor>The TenDRA Documentation Team</corpauthor>
    <copyright>
      <year>2002</year>
      <year>2003</year>
      <holder>TenDRA Documentation Team</holder>
    </copyright>
    <copyright>
      <year>1997</year>
      <year>1998</year>
      <holder>Defence Evaluation and Research Agency (DERA)</holder>
    </copyright>
    <abstract>
    <para>This is the Frequently Asked Questions for TenDRA.</para>
    <para>Please email us at <email>docs@tendra.org</email> if you see any
      errors or omissions.</para>
    </abstract>
  </bookinfo>

  <chapter>
    <title>TenDRA's History</title>

    <qandaset>
      <qandaentry>

        <question id="dera">
          <para>What is this <acronym>DERA</acronym> you speak of?</para>
        </question>
        <answer>
          <para><acronym>DERA</acronym> (formerly
        <acronym>RSRE</acronym> - Royal Signals and Radar Establishment)
        was, until July 2, 2001, the Defense Evaluation and Research
        Agency of the United Kingdom. It has since been split into two
        separate organisations and is now known as <ulink
        url="http://www.qinetiq.com">QinetiQ</ulink>.
        <acronym>DERA</acronym> was the logical equivalent of the United
        States' <ulink url="http://www.darpa.mil">DARPA</ulink>. 
          </para>
        </answer>

      </qandaentry>

      <qandaentry>

        <question id="andf-tdf">
          <para>What are ANDF and TDF?</para>
        </question>
        <answer>
          <para><acronym>ANDF</acronym> stands for
        <emphasis>Architectural Neutral Distribution Format</emphasis>,
        a format designed to improve portability and distribtution of
        software. <acronym>TDF</acronym> stands for <emphasis>Ten15
        Distribution Format</emphasis> (though it has more recently
        become known just as the <emphasis>TenDRA Distribution
        Format</emphasis>), and is the base technology selected for the
        <acronym>ANDF</acronym> technology by the now-defunct
        <emphasis>Open Source Foundation</emphasis>
        (<acronym>OSF</acronym>). There is a wealth of information
        available at the <ulink
        url="http://www.info.uni-karlsruhe.de/~andf/">ANDF Home Page at
        the University of Karlsruhe</ulink>, as well as at <ulink
        url="http://www.mca-ltd.com/martin/Ten15/introduction.html">Martin
        C. Atkins' Personal Retrospective</ulink>.
          </para>
        </answer>

      </qandaentry>
    </qandaset>

  </chapter>

  <chapter>
    <title>TenDRA Development</title>

    <qandaset>
      <qandaentry>

        <question id="why-cvs">
          <para>Why are you still using CVS? There are far better
        systems out there, such as Subversion, Perforce, Arch, Aegis or
        BitKeeper.</para>
        </question>
        <answer>
          <para>CVS: Tried, tested and true. We are aware of the various
        shortcomings CVS has, but at this point in time, it works, and
        for our purposes it works well. Most of the above-mentioned
        alternatives are either lacking in terms of features or
        maturity. We will continue to revise our opinion on this, and if
        there is reason to change at some point in the future, we will
        do so.
          </para>
        </answer>

      </qandaentry>

      <qandaentry>

        <question id="why-not-autotools">
          <para>Why aren't you using autoconf/automake? All this
        Makefile stuff is annoying!</para>
        </question>
        <answer>
          <para>One of the most compelling reasons to use these tools is
        to be able to adapt to different environments on the various
        platforms out there. TenDRA conveniently divides OS-dependent
        code into separate files, thus making the autoconf/automake
        combination an unnecessary added complexity. Additionally, there
        are unavoidable issues concerning long-time maintenance worries
        due to incompatibilities, which often arise between differing
        versions of the above-named tools.
          </para>
        </answer>

      </qandaentry>

      <qandaentry>

        <question id="why-not-gmake">
          <para>Why aren't you using gmake?</para>
        </question>
        <answer>
          <para>Famous words, once uttered on the tendra-dev list by
        asmodai@: <quote>A lot of Linux code requires gmake, we just
        require this make.</quote>
          </para>
        </answer>

      </qandaentry>
    </qandaset>

  </chapter>

   <chapter>
    <title>Using TenDRA</title> 

    <qandaset>
      <qandaentry>

        <question id="try-compile-cplusplus">
          <para>Compiling simple C++ programs does not work.</para>
        </question>
        <answer>
          <para>At this point, TenDRA only contains the bare minimum
        language support library, not the full standard C++ library. See
        the C++ producer documentation for more details.
          </para>
        </answer>

      </qandaentry>

      <qandaentry>

        <question id="compile-program-fail">
          <para>I tried compiling [insert program here] with TenDRA, but
        it failed. Am I doing something wrong?</para>
        </question>
        <answer>
          <para>This depends upon the specific issue you are
        experiencing. The most common issues range from broken standards
        support on the side of TenDRA or platform of choice to use of
        compiler-specific features (non-standard features) in the source
        code. It is prudent to take time to look into possible issues
        and direct requests to the appropriate place, be it the
        application author, platform vendor, or the TenDRA team. If you
        are unsure of where to go, the <ulink
        url="http://lists.tendra.org">tendra-help</ulink> list may be a
        good place to start. Please consult <ulink
        url="http://www.google.com">Google</ulink> as well as the <ulink
        url="http://lists.tendra.org">list archives</ulink> before
        mailing the list. 
          </para>
        </answer>

      </qandaentry>

      <qandaentry>

        <question id="inline-asm">
          <para>Is there support for inline assembly?</para>
        </question>
        <answer>
          <para>No. We encourage the use of separate
        <filename>.s</filename> files combined with
        <filename>.c</filename>/<filename>.h</filename> instead.
          </para>
        </answer>

      </qandaentry>

      <qandaentry>

        <question id="long-long">
          <para>Is <parameter class="option">long long</parameter>
        supported?</para> 
        </question>
        <answer>
          <para>As described in <ulink
        url="http://http://www.tendra.org/docs/tdfc/#AEN769">section 3.7
        of the C Checker Reference Manual</ulink>, <parameter
        class="option">long long</parameter> is supported by TenDRA. It
        is not enabled by default; you may pass <parameter
        class="option">-Y longlong</parameter> to <command>tcc</command>
        or modify the system description file before building to enable
        it by default. 
          </para>
        </answer>

      </qandaentry>
    </qandaset>

  </chapter>

  <chapter>
    <title>TenDRA and GCC</title>

    <qandaset>
      <qandaentry>

        <question id="why-bother">
          <para>We have GCC, so why even bother working on another
        compiler?</para>
        </question>
        <answer>
          <para>For starters, because we like working on it. In the long
        run, there are interesting prospects in areas such as research,
        especially due to the nature of the TenDRA compiler; the ANDF
        technology for instance. Another point of motivation is the fact
        that TenDRA is a <ulink
        url="http://www.tendra.org/licenses/BSDL.txt">BSD-licensed</ulink>
        compiler, which we consider an asset. Finally, everone has their
        own reasons, but the above is a fair representation of interests
        shared by all developers.
          </para>
        </answer>

      </qandaentry>
    </qandaset>

  </chapter>

  <chapter>
    <title>TenDRA's Future</title>

    <qandaset>
      <qandaentry>

        <question id="future">
          <para>What does the future hold for TenDRA?</para>
        </question>
        <answer>
          <para>A peek at the <ulink
        url="http://www.tendra.org/tasks/">task list</ulink> should give
        a pretty good picture of what is currently being worked on, or
        up for grabs if anyone were to be so-inclined. General goals
        include standards conformance, and research into interesting
        developments in the world of compiler technology.
          </para>
        </answer>

      </qandaentry>
    </qandaset>

  </chapter>

  <chapter>
    <title>Contributing to TenDRA</title>

    <qandaset>
      <qandaentry>

        <question id="where-to-start">
          <para>I would like to help, but I don't really know where to
        start.</para> 
        </question>
        <answer>
          <para>A peek at the <ulink
        url="http://www.tendra.org/tasks/">task list</ulink> is 
        probably a good idea. See if anything fits your bill, and take
        it up. It is a great idea to subscribe to the <ulink
        url="http://lists.tendra.org">mailing lists</ulink> to stay
        up-to-date on current developments. Let the developers know
        which are you are interested in contributing to via the
        appropriate list. We always welcome help!
          </para>
        </answer>

      </qandaentry>

      <qandaentry>
 
        <question id="add-support">
          <para>I want to work on support for a specific
        architecture/platform.</para>
        </question>
        <answer>
          <para>Familiarize yourself with the TenDRA source that you
        want to work on, as well as current development. The easiest way
        to 'get in touch' is to be subscribed to the <ulink
        url="http://lists.tendra.org">mailing lists</ulink> and check out
        the <ulink url="http://www.tendra.org/tasks/">task list</ulink>
        as well. From there, open a dialogue on tendra-dev, and things
        should begin to take shape. We hope to see your contributions
        soon!
          </para>
        </answer>

      </qandaentry>
    </qandaset>

  </chapter>

  <chapter>
    <title>Problems related to TenDRA-4.1.2</title> 

    <qandaset>
      <qandaentry>

        <question id="building-release">
          <para>I try to build the release, but I am having problems in the API
            library building phase.
          </para>
        </question>
        <answer>
          <para>Unfortunately this area is <emphasis>very</emphasis> operating
            system dependent. It set up so that it works for the operating
            systems listed under supported platforms, but this is not a
            cast iron guarantee that it will work for other versions of the
            same operating system.
          </para>

          <para>Some understanding of how the system works is useful in trying
            to work around problems. The start-up files describing the
            macros needed to nagivate the system headers for a particular
            API are found in: 
            <filename class="directory">src/lib/machines/&lt;os&gt;/&lt;cpu&gt;/startup/&lt;api&gt;.h</filename>
            where &lt;os&gt; is the operating system name, &lt;cpu&gt; is
            the CPU type, and &lt;api&gt; is the API name. A set of
            replacement system headers, which are checked before the real
            system headers, are found in: 
            <filename class="directory">src/lib/machines/&lt;os&gt;/lt;cpu&gt;/include</filename>
            These are also used with the -Ysystem option to tcc,
            modifications which are specific to library building, should be
            enclosed in:</para>

          <programlisting>
#ifdef __BUILDING_LIBS
.....
#endif
          </programlisting>

          <para>Good places to look for inspiration on how to customise these
            files for your particular system include looking to see how
            I've done things in similar circumstances. Often a problem
            crops up on more than one machine; I may have a workround which
            works on another platform which you can steal.</para>

          <para>If you don't intend to re-distribute the TenDRA source code you
            also have an option which, for copyright reasons, is not
            available to us. You can copy the system header into the
            include directory above and make minor corrections directly.</para>

          <para>If all else fails you can tell the library building to ignore
            the header. Find the source file which is failing to compile.
            This should contain lines like:</para>

          <programlisting>
<![CDATA[
#define __BUILDING_TDF_<API>_<HEADER>
#ifndef __WRONG_<API>
#ifndef __WRONG_<API>_<HEADER>
....
#endif /* __WRONG_<API> */
#endif /* __WRONG_<API>_<HEADER> */
]]>
          </programlisting>

          <para>If you insert the line:</para>

          <programlisting>
<![CDATA[
#define __WRONG_<API>_<HEADER>
]]>
</programlisting>

          <para>in the corresponding API start-up file:</para>

          <programlisting>
src/lib/machines/<literal>&lt;os&gt;</literal>/&lt;cpu&gt;/startup/&lt;api&gt;.h
          </programlisting>

          <para>then the library builder will ignore this header. You will get
            a compile-time error ("token not defined") if you subsequently
            try to use one of the features from this header.</para>
        </answer>

      </qandaentry>
    </qandaset>
  </chapter>
</book>
