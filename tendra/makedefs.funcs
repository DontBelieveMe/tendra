# $Id$
# ex:filetype=sh

# Check if the CC environment variable is set.
check_cc()
{
	if [ -z $CC ]; then
		CC="cc";
	elif [ "$CC" = "CC" ]; then
		CC="cc";
		echo "NOTICE: CC is often the C++ compiler, we just need a normal C compiler,";
		echo "        setting CC to \"cc\"."
		echo;
	elif [ "$CC" = "xlc_r" -o "$CC" = "xlc_r4" -o "$CC" = "xlc_r7"\
		-o "$CC" = "cc_r" -o "$CC" = "cc_r4" -o "$CC" = "cc_r7" ]; then
		# We are on AIX, and since we focus on ANSI as a compiler, use
		# the right bootstrapping compiler: xlc (which implies ansi).
		CC="xlc";
		echo "NOTICE: Using xlc_r or cc_r creates POSIX threaded applications.  We do";
		echo "        not need that.  Setting CC to \"xlc\"."
		echo
	fi
}

# Check to see which architecture the host is running on.
check_hostarch()
{
	case "$HOSTARCH" in
		alpha)		# DEC, nay, Compaq, nay HP Alpha
				BLDARCH="alpha"
				BLDARCHBITS="64"
				;;
		amd64)		# AMD64
				BLDARCH="amd64"
				BLDARCHBITS="64"
				;;
		i386)		# Intel 80386
				BLDARCH="80x86"
				BLDARCHBITS="32"
				;;
		i486)		# Intel 80486
				BLDARCH="80x86"
				BLDARCHBITS="32"
				;;
		i586)		# Intel 80586 (Pentium, Pentium MMX)
				BLDARCH="80x86"
				BLDARCHBITS="32"
				;;
		i686)		# Intel 80686 (Pentium Pro, Pentium II,
				# Pentium III, Pentium 4, AMD Athlon)
				BLDARCH="80x86"
				BLDARCHBITS="32"
				;;
		sparc)		# SPARC 32 bit
				BLDARCH="sparc"
				BLDARCHBITS="32"
				;;
		sparc64)	# SPARC 64 bit
				BLDARCH="sparc"
				BLDARCHBITS="64"
				;;
		*)		echo "Unknown architecture \"${HOSTARCH}\""
				echo "Please report the following to the developers:"
				echo
				echo "uname -m:	${HOSTARCH}"
				echo
				;;
	esac
}

usage()
{
	echo "makedefs"
	echo "usage: [OPTIONS] ./makedefs [-h]"
	echo
	echo "Configuration definition generator of the TenDRA Project"
	echo
	echo "Available OPTIONS (OPTION=value):"
	echo "PREFIX		installation prefix"
	echo "CC		C compiler command name"
	echo "EXECFORMAT	desired default executable format (aout, elf)"
}
