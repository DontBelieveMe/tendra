<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
	"http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<!-- Initially lifted from troff+man by doclifter, additional editing by hand -->

<refentry id="tcc1">

<!--
        Copyright (c) 2002-2007 The TenDRA Project <http://www.tendra.org/>.
        All rights reserved.

        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:

        1. Redistributions of source code must retain the above copyright notice,
           this list of conditions and the following disclaimer.
        2. Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
        3. Neither the name of The TenDRA Project nor the names of its contributors
           may be used to endorse or promote products derived from this software
           without specific, prior written permission.

        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS
        IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
        THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
        PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR
        CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
        EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
        PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
        OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
        WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
        OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
        ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<!--
			 Crown Copyright (c) 1997

	This TenDRA(r) Manual Page is subject to Copyright
	owned by the United Kingdom Secretary of State for Defence
	acting through the Defence Evaluation and Research Agency
	(DERA).	It is made available to Recipients with a
	royalty\-free licence for its use, reproduction, transfer
	to other parties and amendment for any purpose not excluding
	product development provided that any such use et cetera
	shall be deemed to be acceptance of the following conditions:\-

			(1) Its Recipients shall ensure that this Notice is
			reproduced upon any copies or amended versions of it;

			(2) Any amended version of it shall be clearly marked to
			show both the nature of and the organisation responsible
			for the relevant amendment or amendments;

			(3) Its onward transfer from a recipient to another
			party shall be deemed to be that party's acceptance of
			these conditions;

			(4) DERA gives no warranty or assurance as to its
			quality or suitability for any purpose and DERA accepts
			no liability whatsoever in relation to any use to which
			it may be put.
-->

	<refmeta>
		<refentrytitle>tcc</refentrytitle>
		<manvolnum>1</manvolnum>
	</refmeta>

	<refnamediv id='name'>
		<refname>tcc</refname>
		<refpurpose>User interface to the TDF system</refpurpose>
	</refnamediv>

	<refsynopsisdiv id='synopsis'>
		<cmdsynopsis>
			<command>tcc</command>
			<arg choice='opt'><replaceable>options</replaceable></arg>
			<arg choice='plain'><replaceable>files</replaceable></arg>
		</cmdsynopsis>
	</refsynopsisdiv>

	<refsection id='description'>
		<title>Description</title>

		<para><command>tcc</command> is the user interface to the TDF system.	It is more fully
			documented in the <emphasis remap='I'>tcc User's Guide</emphasis>.</para>

		<para><command>tcc</command> accepts several types of arguments as <emphasis remap='I'>files</emphasis>:</para>

		<variablelist remap='IP'>
			<varlistentry>
				<term>-</term>
				<listitem>
					<para>Arguments whose names end in <markup>.c</markup> are understood to be C source files.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>-</term>
				<listitem>
					<para>Arguments whose names end in <markup>.i</markup> are understood to be preprocessed
						C source files.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>-</term>
				<listitem>
					<para>Arguments whose names end in <markup>.C</markup> are understood to be C++ source
						files (only if <option>-Yc++</option> is specified).</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>-</term>
				<listitem>
					<para>Arguments whose names end in <markup>.I</markup> are understood to be preprocessed
						C++ source files (only if <option>-Yc++</option> is specified).</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>-</term>
				<listitem>
					<para>Arguments whose names end in <markup>.j</markup> are understood to be target
						independent TDF capsules.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>-</term>
				<listitem>
					<para>Arguments whose names end in <markup>.ta</markup> are understood to be archives of
						target independent TDF capsules.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>-</term>
				<listitem>
					<para>Arguments whose names end in <markup>.t</markup> are understood to be target
						dependent TDF capsules.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>-</term>
				<listitem>
					<para>Arguments whose names end in <markup>.s</markup> are understood to be assembly
						source files.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>-</term>
				<listitem>
					<para>Arguments whose names end in <markup>.d</markup> are understood to be TenDRA dump
						files.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>-</term>
				<listitem>
					<para>Arguments whose names end in <markup>.K</markup> are understood to be C++ spec files
						(only if <option>-Yc++</option> is specified).</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>-</term>
				<listitem>
					<para>Arguments whose names end in <markup>.p</markup> are understood to be TDF notation
						source files (only if <option>-Ytnc</option> is specified).</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>-</term>
				<listitem>
					<para>Arguments whose names end in <markup>.tpl</markup> are understood to be PL_TDF source
						files (only if <option>-Ypl_tdf</option> is specified).</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>-</term>
				<listitem>
					<para>All other arguments (but particularly those whose names end in <markup>.o</markup>
						and <markup>.a</markup>) are understood to be binary object files.</para>
				</listitem>
			</varlistentry>
		</variablelist>

		<para>The compilation process is as follows.	Depending on the options given,
			it may halt at any stage:</para>

		<orderedlist>
			<listitem>
				<para>TDF archives are split into their constituent target independent capsules.</para>
			</listitem>
			<listitem>
				<para>C source files (including preprocessed C) are compiled into target
					independent TDF capsules using <citerefentry><refentrytitle>tdfc2</refentrytitle><manvolnum>1</manvolnum></citerefentry>.
					(<citerefentry><refentrytitle>tcpplus</refentrytitle><manvolnum>1</manvolnum></citerefentry>
					does the same for C++ source files when <option>-Yc++</option> is specified.)</para>
			</listitem>
			<listitem>
				<para>Target independent TDF capsules are linked, using <citerefentry><refentrytitle>tld</refentrytitle><manvolnum>1</manvolnum></citerefentry>, with
					the TDF libraries to produce target dependent TDF capsules.</para>
			</listitem>
			<listitem>
				<para>Target dependent TDF capsules are translated into assembly source files
					using one of <citerefentry><refentrytitle>mipstrans</refentrytitle><manvolnum>1</manvolnum></citerefentry> (q.v. - things are not quite so simple
					in this case), <citerefentry><refentrytitle>trans386</refentrytitle><manvolnum>1</manvolnum></citerefentry> etc.</para>
			</listitem>
			<listitem>
				<para>Assembly source files are compiled into binary object files
					using <citerefentry><refentrytitle>as</refentrytitle><manvolnum>1</manvolnum></citerefentry>.</para>
			</listitem>
			<listitem>
				<para>Binary object files are linked with the precompiled libraries, using
					<citerefentry><refentrytitle>ld</refentrytitle><manvolnum>1</manvolnum></citerefentry>, to produce a final executable.</para>
			</listitem>
		</orderedlist>

		<para>With the exception of binary object files, intermediate files are not
			preserved unless explicitly instructed.</para>

		<para>The standard file suffixes <emphasis remap='B'>c</emphasis>, <emphasis remap='B'>i</emphasis>,
			<emphasis remap='B'>C</emphasis>, <emphasis remap='B'>I</emphasis>, <emphasis remap='B'>j</emphasis>,
			<emphasis remap='B'>t</emphasis>, <emphasis remap='B'>s</emphasis>, <emphasis remap='B'>o</emphasis>,
			<emphasis remap='B'>d</emphasis>, <emphasis remap='B'>k</emphasis>, and <emphasis remap='B'>K</emphasis>, together with
			<emphasis remap='B'>p</emphasis> (pretty-printed TDF capsule) and <emphasis remap='B'>pl</emphasis> (PL_TDF source file),
			are used to indicate file types in some options.	Also the various
			compilation phases are identified by letters in some options.
			These are:</para>

		<variablelist remap='IP'>
			<varlistentry>
				<term><emphasis remap='B'>c</emphasis></term>
				<listitem>
								<para>C to TDF producer</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><emphasis remap='B'>p</emphasis></term>
				<listitem>
								<para>C preprocessor</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><emphasis remap='B'>x</emphasis></term>
				<listitem>
					<para>C++ to TDF producer (only if <option>-Yc++</option> is specified)</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><emphasis remap='B'>g</emphasis></term>
				<listitem>
					<para>C++ preprocessor (only if <option>-Yc++</option> is specified)</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><emphasis remap='B'>L</emphasis></term>
				<listitem>
					<para>TDF linker (or builder)</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><emphasis remap='B'>t</emphasis></term>
				<listitem>
					<para>TDF translator</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><emphasis remap='B'>a</emphasis></term>
				<listitem>
					<para>System assembler</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><emphasis remap='B'>l</emphasis></term>
				<listitem>
					<para>System linker</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><emphasis remap='B'>S</emphasis></term>
				<listitem>
					<para>C++ spec linker</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><emphasis remap='B'>e</emphasis></term>
				<listitem>
					<para>Compact-output error reporter (only if <option>-Ycompact</option> is specified)</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><emphasis remap='B'>u</emphasis></term>
				<listitem>
					<para>TenDRA dump file linker</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><emphasis remap='B'>d</emphasis></term>
				<listitem>
					<para>TDF pretty-printer</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsection>

	<refsection id='options'>
		<title>Options</title>

		<para>The following options are supported by <command>tcc</command>.	All options are scanned
			before input files are dealt with.	The system variable <emphasis remap='B'>TCCOPTS</emphasis>
			may be used to specify a list of options which are processed before the
			first command-line option.</para>

		<variablelist remap='IP'>
			<varlistentry>
				<term><option>-A</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Asserts the predicate <emphasis remap='I'>string</emphasis>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-B</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Passed to the system linker.	The valid values of <emphasis remap='I'>string</emphasis> are target
						dependent.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-C</option></term>
				<listitem>
					<para>Not implemented and provided for <citerefentry><refentrytitle>cc</refentrytitle><manvolnum>1</manvolnum></citerefentry> compatibility only.	It is
						meant to preserve comments when preprocessing.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-D</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Where <emphasis remap='I'>string</emphasis> is of the form <emphasis remap='I'>macro</emphasis> or <emphasis remap='I'>macro=defn</emphasis>, is
						equivalent to inserting the preprocessor directives "#define <emphasis remap='I'>macro</emphasis> 1"
						or "#define <emphasis remap='I'>macro defn</emphasis>" at the start of each C source file.	This
						is implemented by <command>tcc</command> writing this directive into a start-up file.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-E</option></term>
				<listitem>
					<para>Invokes the C preprocessor only, putting the result into a file with
						a <markup>.i</markup> suffix if other options indicate that preprocessed C files
						are to be preserved, or onto the standard output otherwise.	Similarly,
						C++ source files are preprocessed and put into files with <markup>.I</markup> suffixes.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-E</option><replaceable>letter</replaceable><emphasis remap='B'>:</emphasis><emphasis remap='I'>file</emphasis></term>
				<listitem>
					<para>Causes <emphasis remap='I'>file</emphasis> to be invoked as the executable for the compilation
						stage given by <emphasis remap='I'>letter</emphasis>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-F</option><replaceable>letter</replaceable><emphasis remap='B'></emphasis></term>
				<listitem>
					<para>Tells <command>tcc</command> to stop after producing the files indicated by <emphasis remap='I'>letter</emphasis>,
						and to preserve these files. <emphasis remap='I'>letter</emphasis> is a single character corresponding
						to the suffix of the files to be preserved.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-G</option></term>
				<listitem>
					<para>Provided for <emphasis remap='I'>cc</emphasis> compatibility.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-H</option></term>
				<listitem>
					<para>Causes the names of files included by a '#include' directive to be printed.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-I</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Tells the producers and preprocessors to search the directory <emphasis remap='I'>string</emphasis>
						for included files.	The directories are searched in the order given,
						followed by the system default directories.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-J</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Tells the TDF linker to search the directory <emphasis remap='I'>string</emphasis> for TDF libraries.
						The linker searches the directories in the order given, followed by the
						system default directories.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-K</option><replaceable>string</replaceable><emphasis remap='B'>,...</emphasis></term>
				<listitem>
					<para>Provided for <emphasis remap='I'>cc</emphasis> compatibility.	Specifies various installer options.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-L</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Tells the system linker to search the directory <emphasis remap='I'>string</emphasis> for libraries.
						It searches the directories in the order given, followed by the system
						default directories.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-M</option></term>
				<listitem>
					<para>Specifies that the TDF linker should link all the given target
						independent TDF capsules into one.	This is done between stages 2
						and 3 above.	The default name for the produced capsule is <emphasis remap='B'>a.j</emphasis>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-MA</option></term>
				<listitem>
					<para>Specifies that the TDF linker should link all the given target
						independent TDF capsules into one and also hide all the defined
						tag and token names from the resultant TDF (except the tag "main").
						This should only be used to compile complete programs.	The default
						name for the resulting capsule is <emphasis remap='B'>a.j</emphasis>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-N</option><replaceable>identifier</replaceable>:<emphasis remap='I'>string</emphasis></term>
				<listitem>
					<para>As <option>-I</option><replaceable>string</replaceable> except that the identifier <emphasis remap='I'>identifier</emphasis> is
						associated with the directory <emphasis remap='I'>string</emphasis> in the producer.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-O</option><replaceable>string</replaceable></term>
				<listitem>
					<para>This flag has no effect other than to cancel any previous diagnostics
						flag and is included only for compatibility with other compilers.	All
						TDF optimisations are on by default.	All optimisations are believed to
						be correct, any bug which occurs in the fully-optimised state is a
						genuine bug.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-P</option></term>
				<listitem>
					<para>Invokes the C preprocessor only, putting the result into a file with
						a <markup>.i</markup> suffix.	The C++ preprocessor is similarly invoked for C++
						source files, putting the result into a file with a <markup>.I</markup> suffix.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-P</option><replaceable>letter</replaceable>...</term>
				<listitem>
					<para>Tells <command>tcc</command> to preserve those files indicated by <emphasis remap='I'>letter</emphasis>.	Each
						<emphasis remap='I'>letter</emphasis> is a single character corresponding to the suffix of the files
						to be preserved.	The <command>tcc</command> startup-file can be preserved as
						<emphasis remap='B'>tcc_startup.h</emphasis> using <option>-Ph</option>.	All intermediate files can be
						preserved using <option>-Pa</option>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-S</option></term>
				<listitem>
					<para>Tells <command>tcc</command> to stop after producing an assembly source file.	This
						is equivalent to <option>-Fs</option>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-S</option><replaceable>letter</replaceable><emphasis remap='B'>,</emphasis><emphasis remap='I'>string</emphasis><emphasis remap='B'>,</emphasis>...</term>
				<listitem>
					<para>The specifies that the list of input files <emphasis remap='I'>string</emphasis> all have type
						<emphasis remap='I'>letter</emphasis>, where <emphasis remap='I'>letter</emphasis> is a single character giving the normal
						suffix of the file type.	This gives an alternative method of passing input
						files to <command>tcc</command>, one which does not depend on it having to recognise
						suffixes to find the type of a file.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-S</option><replaceable>letter</replaceable><emphasis remap='B'>:</emphasis><emphasis remap='I'>string</emphasis></term>
				<listitem>
					<para>Similar to the option above, but specifies a single input file,
						<emphasis remap='I'>string</emphasis> (which may contain a comma).</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-U</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Is equivalent to inserting	the preprocessor directive "#undef <emphasis remap='I'>string</emphasis>"
						at the start of each C source file.	This is implemented by <command>tcc</command> writing
						this directive into a start-up file.	The only macros built into the C to
						TDF producer are __LINE__ , __FILE__ , __DATE__ , __TIME__ , __STDC__ ,
						__ANDF__ and __TenDRA__ .</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-V</option></term>
				<listitem>
					<para>Causes all tools invoked by <command>tcc</command> to print their version numbers.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-W</option><replaceable>letter</replaceable><emphasis remap='B'>,</emphasis><emphasis remap='I'>string</emphasis><emphasis remap='B'>,</emphasis>...</term>
				<listitem>
					<para>This passes the list of options <emphasis remap='I'>string</emphasis> to the compilation phase
						indicated by <emphasis remap='I'>letter</emphasis>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-W</option><replaceable>letter</replaceable><emphasis remap='B'>:</emphasis><emphasis remap='I'>string</emphasis></term>
				<listitem>
					<para>Similar to the option above, but specifies a single file <option>string</option>
						(which may contain a comma).</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-X</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Specifies a compilation mode.	<emphasis remap='I'>string</emphasis> can be <emphasis remap='B'>a</emphasis> for "lenient
						ANSI", <emphasis remap='B'>c</emphasis> for "strict ANSI" (this is default), <emphasis remap='B'>p</emphasis> for "strict
						ANSI with some extra checks", <emphasis remap='B'>s</emphasis> for "strict ANSI with many extra
						checks" or <emphasis remap='B'>t</emphasis> for "traditional".</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-X:</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Specifies an individual compilation option.	See the <emphasis remap='I'>tcc User's Guide</emphasis>
						for details.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-Y</option><replaceable>file</replaceable></term>
				<listitem>
					<para>Specifies the environment to use.	An environment is a file telling
						<command>tcc</command> to modify its defaults.	If the full pathname of <emphasis remap='I'>env</emphasis> is
						not given, the file is searched for along the <command>tcc</command> environments path
						which is a list of directories separated by colons.	This search path can
						be printed using <option>-show_env</option>.	There are certain standard environments,
						for example, <emphasis remap='B'>ansi</emphasis>, representing the ANSI API (this is the default
						API environment), <emphasis remap='B'>posix</emphasis> represents the POSIX API, <emphasis remap='B'>xpg3</emphasis> the
						XPG3 API, and so on.	The <emphasis remap='B'>system</emphasis> environment allows <command>tcc</command> to
						behave like <citerefentry><refentrytitle>cc</refentrytitle><manvolnum>1</manvolnum></citerefentry>, using the system header files etc.	See the
						<emphasis remap='I'>tcc User's Guide</emphasis> and <citerefentry><refentrytitle>tccenv</refentrytitle><manvolnum>5</manvolnum></citerefentry> manual page for more details
						about environments.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-Z</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Provided for <citerefentry><refentrytitle>cc</refentrytitle><manvolnum>1</manvolnum></citerefentry> compatibility.	Specifies various installer
						options.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-api_check</option></term>
				<listitem>
					<para>Causes <emphasis remap='B'>tchk</emphasis> to create an API usage analysis file, with default name
						<emphasis remap='B'>a.api</emphasis>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-api_check_out&nbsp;</option><replaceable>string</replaceable></term>
				<listitem>
					<para>If an API usage analysis file is produced, call it <emphasis remap='I'>string</emphasis>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-b</option></term>
				<listitem>
					<para>Stops the library <emphasis remap='B'>libc.a</emphasis> being used by the linker by default.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-c</option></term>
				<listitem>
					<para>Tells <command>tcc</command> to stop after producing the binary object files.	This is
						equivalent to <option>-Fo</option>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-cc</option></term>
				<listitem>
					<para>Causes <command>tcc</command> to invoke <citerefentry><refentrytitle>cc</refentrytitle><manvolnum>1</manvolnum></citerefentry> for its code production, using the
						C to TDF producer as a checking front-end to <emphasis remap='I'>cc</emphasis>.	This allows the
						checking capabilities of the front-end of the TDF compiler to be exploited
						on machines where no TDF back-end is available.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-cc_only</option></term>
				<listitem>
					<para>Causes <command>tcc</command> to invoke <citerefentry><refentrytitle>cc</refentrytitle><manvolnum>1</manvolnum></citerefentry> only.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-ch</option></term>
				<listitem>
					<para>Causes <command>tcc</command> to emulate the stand-alone static checker,
						<citerefentry><refentrytitle>tchk</refentrytitle><manvolnum>1</manvolnum></citerefentry>.	Intermodular checks are enabled in this mode.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-d</option></term>
				<listitem>
					<para>Halts the compilation after the creation of the dump files.	This is
						equivalent to <option>-Fd</option>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-disp</option></term>
				<listitem>
					<para>Runs the TDF pretty-printer on all files at stage 2 or 3 and then
						terminates.	The results are put into files with <markup>.p</markup> suffixes.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-disp_t</option></term>
				<listitem>
					<para>Runs the pretty-printer on all files at stage 3 and then terminates.
						This differs from the previous option in that it displays the TDF
						after linking with the target-dependent TDF libraries rather than
						before.	The output is put into a file with a <markup>.p</markup> suffix.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-dn</option>&nbsp;or&nbsp;<option>-dy</option></term>
				<listitem>
					<para>Passed to the system linker.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-do</option><replaceable>letter</replaceable>&nbsp;<emphasis remap='I'>string</emphasis></term>
				<listitem>
					<para>Sets the name of the default output file of type <emphasis remap='I'>letter</emphasis> to
						<emphasis remap='I'>string</emphasis>.	For example, <option>-doh</option> can be used to set the name of
						the preserved start-up file.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-dry</option></term>
				<listitem>
					<para>Makes <command>tcc</command> print information on what system commands it would execute
						with the given files and options (as in verbose mode) but not actually
						perform them.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-dump</option></term>
				<listitem>
					<para>Causes <command>tcc</command> to dump its current status.	This option is only used
						during the actual compilation of <command>tcc</command>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-e</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Is equivalent to inserting the preprocessor directive
						"#include "<emphasis remap='I'>string</emphasis>"" at the end of each C source file.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-f</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Is equivalent to inserting the preprocessor directive
						"#include "<emphasis remap='I'>string</emphasis>"" at the start of each C source file.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-g</option></term>
				<listitem>
					<para>Tells <command>tcc</command> to produce diagnostic information compatible with the
						system debugger.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-h</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Passed to the system linker.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-i</option></term>
				<listitem>
					<para>Tells <command>tcc</command> to stop after producing the target independent TDF capsules.
						This is equivalent to <option>-Fj</option>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-im</option></term>
				<listitem>
					<para>Enables intermodular checks.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-im0</option></term>
				<listitem>
					<para>Disables intermodular checks.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-info</option></term>
				<listitem>
					<para>Causes <command>tcc</command> to print information on the current API.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-j</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Tells the TDF linker to use the TDF library <emphasis remap='I'>string</emphasis><markup>.tl</markup>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-k</option></term>
				<listitem>
					<para>In intermodular checking mode, halts the compilation after the creation
						of the C++ spec files.	This is equivalent to <option>-FK</option>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-keep_errors</option></term>
				<listitem>
					<para>By default, if an error occurs during the production of a file, <command>tcc</command>
						will remove it.	This option will preserve such files.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-l</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Tells the system linker to use the library <emphasis remap='B'>lib</emphasis><emphasis remap='I'>string</emphasis><markup>.a</markup>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-make_up_names</option></term>
				<listitem>
					<para>Causes <command>tcc</command> to make up names for all intermediate files rather than
						forming them from the basenames of the input files.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-message&nbsp;</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Causes <command>tcc</command> to print the message <emphasis remap='I'>string</emphasis>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-nepc</option></term>
				<listitem>
					<para>Tells the C to TDF producer to allow certain non-portable constructs
						through.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-not_ansi</option></term>
				<listitem>
					<para>Tells the C to TDF producer to allow certain non-ANSI features through.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-no_startup_options</option></term>
				<listitem>
					<para>Ensures that no start-up or end-up options are passed to the C to TDF
						producer (unlikely to be useful).</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-o&nbsp;</option><replaceable>string</replaceable></term>
				<listitem>
					<para>If a final executable is produced, call it <emphasis remap='I'>string</emphasis> (the default is
						<emphasis remap='B'>a.out</emphasis>).	Otherwise, if only one file is preserved, call it <emphasis remap='I'>string</emphasis>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-p</option></term>
				<listitem>
					<para>Produces profiling data for use with <citerefentry><refentrytitle>prof</refentrytitle><manvolnum>1</manvolnum></citerefentry> on those machines for
						which this command is available.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-prod</option></term>
				<listitem>
					<para>Specifies that <command>tcc</command> should stop after producing the target independent
						TDF capsules and combine them into a TDF archive.	The default archive
						name is <emphasis remap='B'>a.ta</emphasis>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-q</option>&nbsp;or&nbsp;<option>-quiet</option></term>
				<listitem>
					<para>Specifies that <command>tcc</command> should work silently.	This is the default.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-query</option></term>
				<listitem>
					<para>Causes <command>tcc</command> to print a list of all the options it recognises,
						together with a brief description of each.	Since this list is
						automatically generated it is likely to be more accurate than this
						manual page.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-s</option></term>
				<listitem>
					<para>Passed to the system linker.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-s</option><replaceable>letter</replaceable><emphasis remap='B'>:</emphasis><emphasis remap='I'>suffix</emphasis></term>
				<listitem>
					<para>Specifies that files with suffix <emphasis remap='I'>suffix</emphasis> are interpreted as having
						type indicated by <emphasis remap='I'>letter</emphasis>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-show_env</option></term>
				<listitem>
					<para>Prints the <command>tcc</command> environments path.	This is a list of directories
						separated by colons.	The first element of the list is always the system
						default environments directory and the last element is always the current
						working directory.	The other elements may be specified by the user by
						means of the <emphasis remap='B'>TCCENV</emphasis> system variable.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-show_errors</option></term>
				<listitem>
					<para>Makes <command>tcc</command> report on the command it was executing when an error
						occurred.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-special&nbsp;</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Allows various internal options to be specified.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-startup&nbsp;</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Causes <emphasis remap='I'>string</emphasis> to be printed to the <command>tcc</command> built-in start-up file.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-sym</option></term>
				<listitem>
					<para>Enables dump-linking.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-sym:&nbsp;</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Enables dump-linking (with mode specified by options in <replaceable>string</replaceable>).</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-target&nbsp;</option><replaceable>string</replaceable></term>
				<listitem>
					<para>No effect (allowed for compatibility with <citerefentry><refentrytitle>cc</refentrytitle><manvolnum>1</manvolnum></citerefentry> on some systems).</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-temp&nbsp;</option><replaceable>dir</replaceable></term>
				<listitem>
					<para>Specifies that <command>tcc</command> should use <emphasis remap='I'>dir</emphasis> as its temporary directory.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-tidy</option></term>
				<listitem>
					<para>Causes <command>tcc</command> to remove its intermediate files when they are no longer
						required rather than waiting to the end of the compilation.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-time</option></term>
				<listitem>
					<para>Makes <command>tcc</command> print information on what system commands it is executing
						(as with verbose mode) followed by the time taken for each.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-u</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Passed to the system linker.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-v</option>&nbsp;or&nbsp;<option>-verbose</option></term>
				<listitem>
					<para>Specifies that <command>tcc</command> should work in verbose mode, sending information
						on what system commands it is executing to the standard output.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-vb</option></term>
				<listitem>
					<para>Causes the name of each input file to be printed as it is processed.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-vd</option></term>
				<listitem>
					<para>Causes a dump of the environment information tcc got hold of.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-ve</option></term>
				<listitem>
					<para>Causes verbose information about tool chain environment to be printed.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-vt</option></term>
				<listitem>
					<para>Causes verbose information about tool chain invocation to be printed.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-version</option></term>
				<listitem>
					<para>Makes <command>tcc</command> report its version number.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-w</option></term>
				<listitem>
					<para>Suppresses all <command>tcc</command> warning messages.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-work&nbsp;</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Specifies that all preserved intermediate files are placed in the
						directory <emphasis remap='I'>string</emphasis> rather than where they are placed by default,
						in the current working directory.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-wsl</option></term>
				<listitem>
					<para>Tells the TDF translator to make all string literals writable.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>-z</option><replaceable>string</replaceable></term>
				<listitem>
					<para>Passed to the system linker.</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsection>

	<refsection id='files'>
		<title>Files</title>

		<variablelist remap='IP'>
			<varlistentry>
				<term><filename>file.c</filename></term>
				<listitem>
					<para>C source file</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>file.i</filename></term>
				<listitem>
					<para>Preprocessed C source file</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>file.C</filename></term>
				<listitem>
					<para>C++ source file (only if <option>-Yc++</option> is specified)</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>file.I</filename></term>
				<listitem>
					<para>Preprocessed C++ source file (only if <option>-Yc++</option> is specified)</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>file.j</filename></term>
				<listitem>
					<para>Target independent TDF capsule</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>file.t</filename></term>
				<listitem>
					<para>Target dependent TDF capsule</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>file.s</filename></term>
				<listitem>
					<para>Assembly source file</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>file.o</filename></term>
				<listitem>
					<para>Binary object file</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>file.d</filename></term>
				<listitem>
					<para>TenDRA dump file</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>file.K</filename></term>
				<listitem>
					<para>C++ spec file (only if <option>-Yc++</option> is specified)</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>file.p</filename></term>
				<listitem>
					<para>Pretty-printed TDF capsule</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>file.tpl</filename></term>
				<listitem>
					<para>PL_TDF source file (only if <option>-Ypl_tdf</option> is specified)</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>file.ta</filename></term>
				<listitem>
					<para>TDF archive</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>file.G</filename></term>
				<listitem>
					<para>Binasm source file (Mips and Alpha only)</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>file.T</filename></term>
				<listitem>
					<para>Assembler symbol table (Mips and Alpha only)</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>a.out</filename></term>
				<listitem>
					<para>Default executable name</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>a.ta</filename></term>
				<listitem>
					<para>Default TDF archive name</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>a.d</filename></term>
				<listitem>
					<para>Default dump file name</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>a.api</filename></term>
				<listitem>
					<para>Default API usage analysis file name</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>a.j</filename></term>
				<listitem>
					<para>Default output file for merge-TDF-capsules option</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>tcc_startup.h</filename></term>
				<listitem>
					<para>Name of preserved <command>tcc</command> start-up file</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>/tmp/tcc*</filename></term>
				<listitem>
					<para>Temporary directory (this may be changed using the <envar>TMPDIR</envar>
						system variable, see <citerefentry><refentrytitle>tempnam</refentrytitle><manvolnum>3</manvolnum></citerefentry>).</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsection>

	<refsection id='see_also'><title>SEE ALSO</title>
		<para><citerefentry><refentrytitle>as</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
			<citerefentry><refentrytitle>cc</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
			<citerefentry><refentrytitle>disp</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
			<citerefentry><refentrytitle>ld</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
			<citerefentry><refentrytitle>prof</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
			<citerefentry><refentrytitle>tchk</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
			<citerefentry><refentrytitle>tdfc2</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
			<citerefentry><refentrytitle>tcpplus</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
			<citerefentry><refentrytitle>tot_o</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
			<citerefentry><refentrytitle>tld</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
			<citerefentry><refentrytitle>trans386</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
			<citerefentry><refentrytitle>alphatrans</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
			<citerefentry><refentrytitle>hppatrans</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
			<citerefentry><refentrytitle>mipstrans</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
			<citerefentry><refentrytitle>sparctrans</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
			<citerefentry><refentrytitle>tccenv</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</para>
	</refsection>
</refentry>

