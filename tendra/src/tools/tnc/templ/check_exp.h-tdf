/*
 * Copyright (c) 2002-2004, The Tendra Project <http://www.ten15.org/>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice unmodified, this list of conditions, and the following
 *    disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 *
 *    		 Crown Copyright (c) 1997
 *
 *    This TenDRA(r) Computer Program is subject to Copyright
 *    owned by the United Kingdom Secretary of State for Defence
 *    acting through the Defence Evaluation and Research Agency
 *    (DERA).  It is made available to Recipients with a
 *    royalty-free licence for its use, reproduction, transfer
 *    to other parties and amendment for any purpose not excluding
 *    product development provided that any such use et cetera
 *    shall be deemed to be acceptance of the following conditions:-
 *
 *        (1) Its Recipients shall ensure that this Notice is
 *        reproduced upon any copies or amended versions of it;
 *
 *        (2) Any amended version of it shall be clearly marked to
 *        show both the nature of and the organisation responsible
 *        for the relevant amendment or amendments;
 *
 *        (3) Its onward transfer from a recipient to another
 *        party shall be deemed to be that party's acceptance of
 *        these conditions;
 *
 *        (4) DERA gives no warranty or assurance as to its
 *        quality or suitability for any purpose and DERA accepts
 *        no liability whatsoever in relation to any use to which
 *        it may be put.
 *
 * $TenDRA$
 */


@special exp
@special tag
@special nat
@special bool
@special string
@special shape
@special variety
@special floating_variety
@special bitfield_variety
@special alignment
@special exp_list
@special exp_option
/* AUTOMATICALLY GENERATED BY %ZX VERSION %ZV FROM TDF %VA.%VB */

#define sub0(X)		((X)->son)
#define sub1(X)		((X)->son->bro)
#define sub2(X)		((X)->son->bro->bro)
#define sub3(X)		((X)->son->bro->bro->bro)
#define sub4(X)		((X)->son->bro->bro->bro->bro)
#define sub5(X)		((X)->son->bro->bro->bro->bro->bro)
#define sub6(X)		((X)->son->bro->bro->bro->bro->bro->bro)
#define sub7(X)		((X)->son->bro->bro->bro->bro->bro->bro->bro)


/*
 *    SET THE SHAPE OF AN EXPRESSION
 *
 *    The shape of the expression exp is calculated and assigned.  Most of
 *    the work is done by the check routines above, as selected by an
 *    automatically generated switch statement.
 */

void
check_exp_fn(node *exp)
{
    long m;

    if (exp == null) return;
    m = exp->cons->encoding;
    if (m == ENC_labelled) {
	node *placelabs_intro = sub0 (exp);
	node *places = sub2 (exp);
	if (placelabs_intro->cons->encoding != places->cons->encoding)
	    MSG_FATAL_labels_dont_match_exps ();
    }
    if (do_check) {
	if (exp->shape) return;
	checking = exp->cons->name;
	switch (m) {
@loop sort
@if sort.eq.exp
@loop sort.cons
	    case ENC_%27CN : {
@loop cons.param
@if param.sort.special
		node *%PN = sub%PE (exp);
@else
@if param.sort.dummy
		%PSN parameter, %PN, messes things up!
@endif
@endif
@end
		CHECK_%25CN
		break;
	    }
@end
@endif
@end
	}
	exp->shape = expand_fully (exp->shape);
    }
    return;
}
