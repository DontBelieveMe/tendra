/*
    $TenDRA$

    		 Crown Copyright (c) 1997

    This TenDRA(r) Computer Program is subject to Copyright
    owned by the United Kingdom Secretary of State for Defence
    acting through the Defence Evaluation and Research Agency
    (DERA).  It is made available to Recipients with a
    royalty-free licence for its use, reproduction, transfer
    to other parties and amendment for any purpose not excluding
    product development provided that any such use et cetera
    shall be deemed to be acceptance of the following conditions:-

        (1) Its Recipients shall ensure that this Notice is
        reproduced upon any copies or amended versions of it;

        (2) Any amended version of it shall be clearly marked to
        show both the nature of and the organisation responsible
        for the relevant amendment or amendments;

        (3) Its onward transfer from a recipient to another
        party shall be deemed to be that party's acceptance of
        these conditions;

        (4) DERA gives no warranty or assurance as to its
        quality or suitability for any purpose and DERA accepts
        no liability whatsoever in relation to any use to which
        it may be put.
*/


/* AUTOMATICALLY GENERATED BY %ZX VERSION %ZV FROM TDF %VA.%VB */

#include "config.h"
#include "encodings.h"
#include "enc_nos.h"
#include "defs.h"
#include "analyse_sort.h"
#include "consfile.h"
#include "lex.h"
#include "syntax.h"
#include "msgcat.h"

@use exp
@special callees
@special procprops
@special string
@special exp apply_general_proc
@special exp apply_proc
@special exp case
@special exp identify
@special exp labelled
@special exp make_floating
@special exp make_general_proc
@special exp make_int
@special exp make_proc
@special exp obtain_tag
@special exp sequence
@special exp tail_call
@special exp variable
@special alignment obtain_al_tag
@special error_treatment error_jump
@special nat make_nat
@special token use_tokdef
@loop sort
@if sort.basic
@if !sort.special
@loop sort.cons
@if cons.simple

void
c_%CN(void)
{
@if cons.params
    skip_term (lex_ord);
    o_%CN (
@loop cons.param
@if param.last
	read_%PSN (); skip_term (lex_crd)
@else
	read_%PSN (); skip_term (lex_comma),
@endif
@end
    )
@else
    o_%CN;
@endif
    return;
}
@endif
@end
@endif
@endif
@end
