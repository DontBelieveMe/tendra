.\" Copyright (c) 2002-2004 The TenDRA Project <http://www.ten15.org/> 
.\" All rights reserved. 
.\"  
.\" Redistribution and use in source and binary forms, with or without 
.\" modification, are permitted provided that the following conditions 
.\" are met: 
.\" 1. Redistributions of source code must retain the above copyright 
.\"    notice, this list of conditions and the following disclaimer. 
.\" 2. Redistributions in binary form must reproduce the above copyright 
.\"    notice, this list of conditions and the following disclaimer in the 
.\"    documentation and/or other materials provided with the distribution. 
.\"  
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND 
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
.\" SUCH DAMAGE. 
.\" 
.\" $TenDRA$ 
.\" 
.TH "tccenv" "5" "Sun 08 Aug 2004, 19:59" "tccenv @PROGRAM_VERSION@" "TenDRA @TENDRA_VERSION@" 
.SH "NAME" 
.PP 
\fBtccenv\fP - Environments for tcc
.SH "SYNOPSIS"
.PP
\fBnone\fP
.SH "DESCRIPTION"
.PP
\fITcc\fP environments are used to configure the
behaviour of \fBtcc\fP\fB(1)\fP, a special case of which is specifying
the APIs used\&. The standard environments supplied with the release are
used to represent a number of commonly used APIs, implement certain
\fBtcc\fP\fB(1)\fP command-line options, and provide a means of
implementing system-specific options\&. User-defined environments can
easily be written to correspond to a user-defined API, or to group
together a number of \fBtcc\fP\fB(1)\fP command-line options into a
single file\&.
.PP
An environment is just a file which is interpreted by
\fBtcc\fP\fB(1)\fP when it is specified with the command-line option
-Y\fIstring\fP, where \fIstring\fP is the
name of the file\&. Each environment file consists of lines of the
form
.IP "\fB*IDENTIFIER\fP" 5
"text"
.PP
where \fIIDENTIFIER\fP is one of the environmental
identifiers, \fItext\fP tells \fBtcc\fP\fB(1)\fP how to
modify the value given by this identifier, and * stands for one of the
environment prefixes + < and >\&.
.SH "USER-DEFINED ENVIRONMENTS"
.PP
The simplest example of a user-defined environment contains lines
of the form
.IP "\fB+FLAG\fP" 5
"text"
.PP
which tells \fBtcc\fP\fB(1)\fP to interpret
\fItext\fP as if it were passed on the command-line\&. So,
for example, an environment consisting of the lines
.IP "\fB+FLAG\fP" 5
"-Yposix"
.IP "\fB+FLAG\fP" 5
"-Xs"
.IP "\fB+FLAG\fP" 5
"-I/home/user/include"
.PP
will modify \fBtcc\fP\fB(1)\fP to use the POSIX 1003\&.1 API with
strict checks, and add the directory /home/user/include to the search
path for #included files\&.
.PP
By default, \fBtcc\fP\fB(1)\fP looks for environments in the
current working directory and in the default environments directory\&. In
addition, if the system variable \fITCCENV\fP is
defined, this specifies a colon-separated list of directories along
which \fBtcc\fP\fB(1)\fP searches for any environment which is not a full
pathname\&.
.SH "FULL ENVIRONMENT LIST"
.PP
The majority of the standard environments can be divided into two
classes: those which correspond to APIs and those which implement
\fBtcc\fP\fB(1)\fP command-line options\&. (In addition to these, a small
number are used to enable extra tools and to specify minimum integer
sizes\&.)
.PP
The API environments are subdivided into base APIs (such as ANSI,
POSIX) and extension APIs (such as the X11 environments):
.IP "\fBansi\fP" 5
the ANSI X3\&.159 API (this is the default API environment)
.IP "\fBiso\fP" 5
the ISO/IEC 9899:1990 (Amendment 1:L1995 (E)) API
.IP "\fBposix\fP" 5
the POSIX (IEEE 1003\&.1:1988) API
.IP "\fBposix1\fP" 5
the POSIX\&.1 (ISO/IEC 9945-1:1990) API
.IP "\fBposix2\fP" 5
the POSIX\&.2 (ISO/IEC 9945-2:1993) API
.IP "\fBxpg3\fP" 5
the X/Open Portability Guide 3
.IP "\fBxpg4\fP" 5
the X/Open Portability Guide 4
.IP "\fBunix95\fP" 5
the X/Open Single UNIX Specification (Spec 1170)
.IP "\fBsvid3\fP" 5
the System V Interface Definition (3rd Edition)
.IP "\fBaes\fP" 5
the Application Environment Specification (Revision A) API
.IP "\fBbsd_extn\fP" 5
BSD-like extension for use with POSIX, etc\&.
.IP "\fBx5_lib\fP" 5
X11 (Release 5) X Library
.IP "\fBx5_t\fP" 5
X11 (Release 5) Intrinsics Toolkit
.IP "\fBx5_mu\fP" 5
X11 (Release 5) Miscellaneous Utilities
.IP "\fBx5_aw\fP" 5
X11 (Release 5) Athena Widgets
.IP "\fBx5_mit\fP" 5
X11 (Release 5) MIT Implementation
.IP "\fBx5_proto\fP" 5
X11 (Release 5) Protocol Extension
.IP "\fBx5_ext\fP" 5
X11 (Release 5) Extensions
.IP "\fBmotif_1_1\fP" 5
Motif (Release 1\&.1)
.IP "\fBmotif_1_2\fP" 5
Motif (Release 1\&.2)
.IP "\fBsystem\fP" 5
System headers as main API
.IP "\fBsystem+\fP" 5
System headers as last resort extension API
.IP "\fBtdf_ext\fP" 5
compilation using TDF Version 4\&.0 extensions
.PP
Some environments are available which modify access to previously
specified APIs:
.IP "\fBx5_private\fP" 5
permit access to X11 Release 5 private headers (*P\&.h)
.IP "\fBmotif_private\fP" 5
permit access to Motif private headers (*P\&.h)
.PP
Note that TDF token libraries for all these APIs will not be
available on all platforms, so it may not be possible run installers
for programs compiled with all API environments\&. It will always be
possible to check code with any API environment using
\fBtchk\fP\fB(1)\fP\&.
.PP
The following environments are used to specify the use of
particular tools (where available) which are not enabled by
default:
.IP "\fBc++\fP" 5
enables the C++ producer/checker tcpplus\&.
.IP "\fBpl_tdf\fP" 5
enables the PL_TDF compiler pl\&.
.IP "\fBtnc\fP" 5
enables the TDF notation compiler tnc\&.
.PP
The default behaviour of \fBtcc\fP\fB(1)\fP is to assume the
minimal sizes of integer types allowed by ANSI\&. This behaviour can be
modified with the following environments:
.IP "\fB16bit\fP" 5
specifies minimal integer sizes allowed by ANSI (default)
.IP "\fB32bit\fP" 5
specifies integer sizes found on most 32-bit machines
.PP
In addition to these, the following implement target-specific
options:
.IP "\fBaout\fP" 5
Use a\&.out instead of ELF format (386 Linux ELF only)\&.
.IP "\fBstatic\fP" 5
Use static instead of dynamic linking (Alpha only)\&.
.SH "ENVIRONMENTAL IDENTIFIERS"
.PP
In the following list, the environmental prefix * must be
replaced by one of + (which replaces the existing value), < (which
adds a value to the beginning of the existing list), or > (which
adds a value to the end of the existing list)\&.
.IP "\fB*API_NAME\fP" 5
modifies the list of API analysis environment names
.IP "\fB*AS\fP" 5
modifies the system assembler executable
.IP "\fB*AS1\fP" 5
modifies the auxiliary assembler executable (Mips and Alpha only)
.IP "\fB*CC\fP" 5
modifies the system compiler executable
.IP "\fB*CPP_SPEC_LINK\fP" 5
modifies the C++ spec linker executable
.IP "\fB*CRT0\fP" 5
modifies the first list of initial default \&.o files
.IP "\fB*CRT1\fP" 5
modifies the second list of initial default \&.o files
.IP "\fB*CRTP_N\fP" 5
modifies the list of additional default \&.o files (-Yprom only)
.IP "\fB*CRTN\fP" 5
modifies the list of final default \&.o files
.IP "\fB*DISP\fP" 5
modifies the TDF pretty printer executable
.IP "\fB*DUMP_ANAL\fP" 5
modifies the dump-file analyser executable
.IP "\fB*DUMP_LINK\fP" 5
modifies the dump linker executable
.IP "\fB*DYN_LINK\fP" 5
modifies the dynamic-initialisation linker executable (RS6000 and Sparc only)
.IP "\fB+ENVDIR\fP" 5
sets the default environment directory
.IP "\fB+FLAG\fP" 5
passes a flag to tcc(1)
.IP "\fB+FLAG_AS\fP" 5
passes a flag to the assembler
.IP "\fB+FLAG_AS1\fP" 5
passes a flag to the auxiliary assembler (Mips and Alpha only)
.IP "\fB+FLAG_CC\fP" 5
passes a flag to the system compiler
.IP "\fB+FLAG_CPP_SPEC_LINK\fP" 5
passes a flag to the C++ spec linker
.IP "\fB+FLAG_DISP\fP" 5
passes a flag to the TDF pretty printer
.IP "\fB+FLAG_DUMP_ANAL\fP" 5
passes a flag to the dump-file analyser
.IP "\fB+FLAG_DUMP_LINK\fP" 5
passes a flag to the dump linker
.IP "\fB+FLAG_DYN_LINK\fP" 5
passes a flag to the dynamic-initialisation linker ((RS6000 and Sparc only)
.IP "\fB+FLAG_INSTALL\fP" 5
passes a flag to the TDF archive builder
.IP "\fB+FLAG_LD\fP" 5
passes a flag to the system linker
.IP "\fB+FLAG_PL_TDF\fP" 5
passes a flag to the PL_TDF compiler
.IP "\fB+FLAG_SPEC_LINKER\fP" 5
passes a flag to the C spec linker
.IP "\fB+FLAG_TCPPLUS\fP" 5
passes a flag to the C++ producer
.IP "\fB+FLAG_TCPPLUSPP\fP" 5
passes a flag to the C++ preprocessor
.IP "\fB+FLAG_TDFC\fP" 5
passes a flag to the C producer
.IP "\fB+FLAG_TDFCPP\fP" 5
passes a flag to the C preprocessor
.IP "\fB+FLAG_TLD\fP" 5
passes a flag to the TDF linker
.IP "\fB+FLAG_TNC\fP" 5
passes a flag to the TDF notation compiler
.IP "\fB+FLAG_TRANS\fP" 5
passes a flag to the TDF translator
.IP "\fB*INCL\fP" 5
modifies the list of default include file directories
.IP "\fB*INFO\fP" 5
modifies the list of API information
.IP "\fB*LD\fP" 5
modifies the system linker executable
.IP "\fB*LIB\fP" 5
modifies the list of default TDF libraries
.IP "\fB+LINE_START\fP" 5
inserts a line in the tcc(1) built-in start-up file
.IP "\fB+LINE_END\fP" 5
inserts a line in the tcc(1) built-in end-up file
.IP "\fB*LINK\fP" 5
modifies the list of default TDF library directories
.IP "\fB*LINK_ENTRY\fP" 5
modifies the linker options specifying the entry point
.IP "\fB+MACHINE\fP" 5
sets the target machine type
.IP "\fB+PORTABILITY\fP" 5
sets the producer portability table
.IP "\fB*PL_TDF\fP" 5
modifies the PL_TDF compiler executable
.IP "\fB*SPEC_LINK\fP" 5
modifies the C spec linker executable
.IP "\fB*STARTUP\fP" 5
modifies the list of default C producer start-up files
.IP "\fB*STARTUP_DIR\fP" 5
modifies the list of default C producer start-up directories
.IP "\fB*STARTUP_CPP\fP" 5
modifies the list of default C++ producer start-up files
.IP "\fB*STARTUP_CPP_DIR\fP" 5
modifies the list of default C++ producer start-up directories
.IP "\fB*SUFFIX_CPP\fP" 5
sets the filename suffix override for C++ source files
.IP "\fB*SYS_LIB\fP" 5
modifies the list of default system libraries
.IP "\fB*SYS_LIBC\fP" 5
modifies the list of standard system libraries
.IP "\fB*SYS_LINK\fP" 5
modifies the list of default system library directories
.IP "\fB*TCPPLUS\fP" 5
modifies the C++ producer executable
.IP "\fB*TCPPLUSPP\fP" 5
modifies the C++ preprocessor executable
.IP "\fB*TDFC\fP" 5
modifies the C producer executable
.IP "\fB*TDFCPP\fP" 5
modifies the C preprocessor executable
.IP "\fB+TEMP\fP" 5
sets the temporary directory
.IP "\fB*TLD\fP" 5
modifies the TDF linker executable
.IP "\fB*TNC\fP" 5
modifies the TDF notation compiler executable
.IP "\fB*TRANS\fP" 5
modifies the TDF translator executable
.IP "\fB+VERSION\fP" 5
sets the target machine version (Mips only)
.SH "SEE ALSO"
.PP
\fBtcc\fP\fB(1)\fP, \fBtchk\fP\fB(1)\fP, \fBtcpplus\fP\fB(1)\fP\fBpl\fP\fB(1)\fP\&. \fBtnc\fP\fB(1)\fP
...\" created by instant / docbook-to-man, Sun 08 Aug 2004, 19:59
