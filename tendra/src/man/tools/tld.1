.\" Copyright (c) 2002-2004 The TenDRA Project <http://www.ten15.org/> 
.\" All rights reserved. 
.\"  
.\" Redistribution and use in source and binary forms, with or without 
.\" modification, are permitted provided that the following conditions 
.\" are met: 
.\" 1. Redistributions of source code must retain the above copyright 
.\"    notice, this list of conditions and the following disclaimer. 
.\" 2. Redistributions in binary form must reproduce the above copyright 
.\"    notice, this list of conditions and the following disclaimer in the 
.\"    documentation and/or other materials provided with the distribution. 
.\"  
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND 
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
.\" SUCH DAMAGE. 
.\" 
.\" $TenDRA$ 
.\" 
.TH "tld" "1" "Sun 23 Oct 2005, 12:36" "tld @PROGRAM_VERSION@" "TenDRA @TENDRA_VERSION@" 
.SH "NAME" 
.PP 
\fBtld\fP - TDF linking and library manipulation
utility
.SH "SYNOPSIS"
.PP
\fBtld\fP [\fImode\fP]  [\fIoption\fP] \fIfile\fP 
.SH "DESCRIPTION"
.PP
The \fItld\fP command is used to create and
manipulate TDF libraries, and to link together TDF capsules\&. It has four
modes, selected by one of the \fB-ml\fP (link TDF capsules),
\fB-mc\fP (create TDF library), \fB-mt\fP (list TDF
library contents) or \fB-mx\fP (extract capsules from TDF
library) switches\&. If provided, the switch must be the first on the
command line\&. If one is not provided, the \fB-ml\fP switch is
assumed\&.
.PP
The different modes are described below\&. In the description,
external name definitions are referred to as unique and multiple\&. A
unique definition is a definition where the defined attribute is set; a
multiple definition is one where the multiple attribute is set (i\&.e\&. more
than one definition is allowed)\&. A definition may be both multiple and
unique (if both bits are set - this means that there is more than
definition, but one of them is unique)\&. It is an error for there to be
more than one unique definition of any given name\&. It is an error for
token external names to have the multiple attribute set\&.
.SH "SWITCHES"
.PP
The new version of \fItld\fP accepts both short form
and long form command line switches\&.
.PP
Short form switches are single characters, and begin with a \&'-\&' or
\&'+\&' character\&. They can be concatenated into a single command line word,
e\&.g\&.:
.PP
\fB-Vo\fP \fIoutput-file\fP
.PP
which contains two different switches (\fB-V\fP, which
takes no arguments; and \fB-o\fP, which takes one argument:
\fIoutput-file\fP)\&.
.PP
Long form switches are strings, and begin with \&'--\&' or \&'++\&'\&. With
long form switches, only the shortest unique prefix need be entered\&. The
long form of the above example would be:
.PP
\fB--version\fP \fB--output-file \fP\fIoutput-file\fP
.PP
In most cases the arguments to the switch should follow the switch
as a separate word\&. In the case of short form switches, the arguments to
the short form switches in a single word should follow the word in the
order of the switches (as in the first example)\&. For some options, the
argument may be part of the same word as the switch (such options are
shown without a space between the switch and the argument in the switch
summaries below)\&. In the case of short form switches, such a switch would
terminate any concatenation of switches (either a character would follow
it, which would be treated as its argument, or it would be the end of the
word, and its argument would follow as normal)\&.
.PP
For binary switches, the \&'-\&' or \&'--\&' switch prefixes set (enable)
the switch, and the \&'+\&' or \&'++\&' switch prefixes reset (disable) the
switch\&. This is probably back to front, but is in keeping with other
programs\&. The switches \&'--\&' or \&'++\&' by themselves terminate option
parsing\&.
.SH "EXTERNAL NAMES"
.PP
An external name may be either a string or a unique\&. A unique is
written as
.PP
\fI[\fP\fIcomponent1\fP\fB\&.\fP\fIcomponent2\fP\fB\&.\fP\&.\&.\&.\fB\&.\fP\fIcomponentN\fP\fI]\fP
.PP
Each component of a unique is a string\&. A string consists of any
sequence of characters, although some special characters must be preceded
by a backslash character to stop them being treated specially\&. These
characters are \fB\&'\\'\fP,
\fB\&'[\&'\fP, \fB\&']\&'\fP and \fB\&'\&.\&'\fP\&.
In addition, the following character sequences are treated the same as they
would be in C: \fB\&'\\n\&'\fP, \fB\&'\\r\&'\fP,
\fB\&'\\t\&'\fP, \fB\&'\\0\&'\fP\&.  Finally, the
sequence \fB\&'\\xNN\&'\fP represents the character with code
\fINN\fP in hex\&.
.SH "RENAME FILE SYNTAX"
.PP
Renaming may be specified either on the command line, or in a file\&.
The files that specify the renamings to be performed have the following
syntax\&. The file consists of a number of sections\&. Each section begins
with a shape name, followed by zero or more pairs of external names (each
pair is terminated by a semi-colon)\&. Shape names are written as a
sequence of characters surrounded by single quotes\&. Unique names have the
same syntax as described above\&. String names are a sequence of characters
surrounded by double quotes\&. The normal backslash escape sequences are
supported\&. The hash character acts as a comment to end of line character
(if this is necessary)\&.
.SH "UNIT SET FILE SYNTAX"
.PP
The file should consist of a sequence of strings enclosed in double
quotes\&. The backslash character can be used to escape characters\&. The
following C style escape sequences are recognized:
\fB\&'\\n\&'\fP, \fB\&'\\r\&'\fP,
\fB\&'\\t\&'\fP, \fB\&'\\0\&'\fP\&. Also, the
sequence \fB\&'\\xNN\&'\fP represents the
character with code \fINN\fP in hex\&. The order of the
strings is important, as it specifies the order that the unit sets should
be in when read from capsules\&. It is necessary to specify the
\fItld\fP unit set name\&.
.SH "ERROR FILE SYNTAX"
.PP
It is possible to change the error messages that the linker uses\&.
In order to do this, make the environment variable
\fITLD_ERROR_FILE\fP contain the name of a file with the
new error messages in\&.
.PP
The error file consists of zero or more sections\&. Each section
begins with a section marker (one of \fI%prefix%\fP,
\fI%errors%\fP or \fI%strings%\fP)\&. The
prefix section takes a single string (this is to be the prefix for all
error messages)\&. The other sections take zero or more pairs of names and
strings\&. A name is a sequence of characters surrounded by single quotes\&.
A string is a sequence of characters surrounded by double quotes\&. In the
case of the prefix and error sections, the strings may contain variables
of the form \fI${\fP\fIvariable
name\fP\fI}\fP\&. These variables will be replaced
by suitable information when the error occurs\&. The normal backslash
escape sequences are supported\&. The hash character acts as a comment to
end of line character\&.
.PP
The \fB--show-errors\fP option may be used to get a copy
of the current error messages\&.
.SH "LINKING"
.PP
In the default mode, \fItld\fP tries to link
together the TDF capsules specified on the command line\&. This consists of
the following stages:
.PP
All of the external names specified for renaming on the command
line are added to the name tables as indirections to their new
names\&.
.PP
All of the capsules specified on the command line are loaded, and
their identifiers are mapped into a per shape namespace\&. In these
namespaces, all external names of the same shape and with the same name
will be mapped to the same identifier\&. \fItld\fP will
report errors about any attempt to link together more than one capsule
providing a unique definition for any external name\&.
.PP
If any libraries were specified on the command line, then the
libraries are loaded to see what definitions they provide\&. After loading
the libraries, the external names specified for link suppression on the
command line are removed from the library index (so that the linker will
not attempt to define those names)\&. Link suppression does not prevent a
name from being defined, it just stops the linker trying to define it; a
definition for it may still be found from a capsule that is loaded to
define another name\&.
.PP
Any capsules that provide necessary definitions are loaded\&. There
must only be one definition for each external name in all of the
libraries (in the case of all non-token shapes, this may be either one
non-unique definition, or one unique definition with zero or more
non-unique definitions; if a unique definition exists, then the
non-unique definitions are ignored)\&.
.PP
If any external names require hiding or keeping (specified by
command line switches), then they are hidden at this point\&. Hiding means
removing the external name from the external name list\&. It is illegal to
hide undefined external names\&. Keeping means keeping an external name in
the external name tables\&. Keeping a name overrides any attempt to hide
that name\&.
.PP
A new TDF capsule is created, consisting of all of the input
capsules and the necessary library capsules\&. Unless specified with the
\fB--output-file\fP switch, the output file will be called
\fIcapsule\&.j\fP\&.
.SH "SWITCHES"
.PP
\fBtld\fP accepts the following switches in link
mode:
.PP
\fB--all-hide-defined\fP,
\fB-a\fP
.PP
Hide all external names (of any shape) that are defined\&.
.PP
\fB--debug-file\fP \fIFILE\fP,
\fB-d\fP \fIFILE\fP
.PP
Produce a diagnostic trace of the linking process in
\fIFILE\fP\&.
.PP
\fB--help\fP,
\fB-?\fP
.PP
Write an option summary to the standard error\&.
.PP
\fB--hide\fP \fISHAPE\fP\fB \fP\fINAME\fP,
\fB-h\fP \fISHAPE\fP\fB \fP\fINAME\fP
.PP
Cause the external \fISHAPE\fP name
\fINAME\fP to be hidden\&. An error is reported if the name
is not defined\&.
.PP
\fB--hide-defined\fP \fISHAPE\fP,
\fB-H\fP \fISHAPE\fP
.PP
Cause the all external \fISHAPE\fP names that are
defined to be hidden\&.
.PP
\fB--keep\fP \fISHAPE\fP\fB \fP\fINAME\fP,
\fB-k\fP \fISHAPE\fP\fB \fP\fINAME\fP
.PP
Cause the external \fISHAPE\fP name
\fINAME\fP to be kept\&.
.PP
\fB--keep-all\fP \fISHAPE\fP,
\fB-K\fP \fISHAPE\fP
.PP
Cause the all external \fISHAPE\fP names to be
kept\&.
.PP
\fB--library\fP \fIFILE\fP,
\fB-l\fP\fIFILE\fP
.PP
Use the file \fIFILE\fP as a TDF library\&. If the
file name contains a \&'/\&', then it is used as specified; if not, the
library search path is searched for a file named
\&'\fIFILE\fP\&.tl\&'\&. Duplicate entries for the same library
are ignored\&.
.PP
\fB--output-file\fP \fIFILE\fP,
\fB-o\fP \fIFILE\fP
.PP
Write the output capsule to the file \fIFILE\fP\&. If
this switch is not specified, then the output is written to the file
\&'capsule\&.j\&' instead\&.
.PP
\fB--path\fP \fIDIRECTORY\fP,
\fB-L\fP\fIDIRECTORY\fP
.PP
Append the directory \fIDIRECTORY\fP to the library
search path\&.
.PP
\fB--rename\fP \fISHAPE\fP\fB \fP\fIFROM\fP\fB \fP\fITO\fP,
\fB-r\fP \fISHAPE\fP\fB \fP\fIFROM\fP\fB \fP\fITO\fP
.PP
Rename the external \fISHAPE\fP name
\fIFROM\fP to \fITO\fP\&.
.PP
\fB--rename-file\fP \fIFILE\fP,
\fB-R\fP \fIFILE\fP
.PP
Read the contents of the file \fIFILE\fP as a series
of renaming specifications\&. The format of the file is described
above\&.
.PP
\fB--show-errors\fP,
\fB-e\fP
.PP
Write the current error message list to the standard output\&.
.PP
\fB--suppress\fP \fISHAPE\fP\fB \fP\fINAME\fP,
\fB-s\fP \fISHAPE\fP\fB \fP\fINAME\fP
.PP
Do not try to find a definition for the external
\fISHAPE\fP name \fINAME\fP\&.
.PP
\fB--suppress-all\fP \fISHAPE\fP,
\fB-S\fP \fISHAPE\fP
.PP
Do not try to find a definition for any external
\fISHAPE\fP name\&.
.PP
\fB--suppress-mult\fP,
\fB-M\fP
.PP
Do not use non-unique definitions in libraries as definitions for
external names\&.
.PP
\fB--unit-file\fP \fIFILE\fP,
\fB-u\fP \fIFILE\fP
.PP
Parse \fIFILE\fP to get a new unit set name list\&. By
default, all of the standard (as specified in the version 4\&.0 TDF
specification) unit set names are known\&.
.PP
\fB--version\fP,
\fB-V\fP
.PP
Write the version number of the program to the standard error
stream\&.
.PP
\fB--warnings\fP,
\fB-w\fP
.PP
Enable/disable the printing of warning messages\&. Warnings are
generated for things like obsolete linker information units, and
undefined external names\&.
.SH "LIBRARY CONSTRUCTION"
.PP
A TDF library is a sequence of named capsules, with an index\&. The
index indicates which external names are defined by the capsules in the
library, and which capsules provide the definitions\&. When invoked with
the \fB-mc\fP switch, \fItld\fP produces a
library consisting of the TDF capsules specified on the command line\&. The
library is written to the file \fIlibrary\&.tl\fP, unless
the \fB--output-file\fP switch is used\&.
.SH "SWITCHES"
.PP
\fBtld\fP accepts the following switches in library
construction mode:
.PP
\fB--debug-file\fP \fIFILE\fP,
\fB-d\fP \fIFILE\fP
.PP
Produce a diagnostic trace of the library construction process in
\fIFILE\fP\&.
.PP
\fB--help\fP, \fB-?\fP
.PP
Write an option summary to the standard error\&.
.PP
\fB--include-library\fP \fIFILE\fP,
\fB-i\fP \fIFILE\fP
.PP
Include all of the capsules in the TDF library
\fIFILE\fP in the library being constructed\&. The library
name should be a proper file name, not a library abbreviation like the
\fB--library\fP switch used by the linking mode\&.
.PP
\fB--output-file\fP \fIFILE\fP,
\fB-o\fP \fIFILE\fP
.PP
Write the output library to the file \fIFILE\fP\&. If
this switch is not specified, then the output is written to the file
\&'library\&.tl\&' instead\&.
.PP
\fB--show-errors\fP,
\fB-e\fP
.PP
Write the current error message list to the standard output\&.
.PP
\fB--suppress\fP \fISHAPE\fP\fB \fP\fINAME\fP,
\fB-s\fP \fISHAPE\fP\fB \fP\fINAME\fP
.PP
Do not try to find a definition for the external
\fISHAPE\fP name \fINAME\fP\&.
.PP
\fB--suppress-all\fP \fISHAPE\fP,
\fB-S\fP \fISHAPE\fP
.PP
Do not try to find a definition for any external
\fISHAPE\fP name\&.
.PP
\fB--suppress-mult\fP,
\fB-M\fP
.PP
Do not use non-unique definitions in libraries as definitions for
external names\&.
.PP
\fB--unit-file\fP \fIFILE\fP,
\fB-u\fP \fIFILE\fP
.PP
Parse \fIFILE\fP to get a new unit set name list\&. By
default, all of the standard (as specified in the version 4\&.0 TDF
specification) unit set names are known\&.
.PP
\fB--version\fP,
\fB-V\fP
.PP
Write the version number of the program to the standard error
stream\&.
.SH "LIBRARY CONTENTS"
.PP
When invoked with the \fB-mt\fP switch,
\fItld\fP produces a listing of the contents of the TDF
library specified on the command line\&.
.SH "SWITCHES"
.PP
\fBtld\fP accepts the following switches in library
contents mode:
.PP
\fB--debug-file\fP \fIFILE\fP,
\fB-d\fP \fIFILE\fP
.PP
Produce a diagnostic trace of the library contents process in
\fIFILE\fP\&.
.PP
\fB--help\fP,
\fB-?\fP
.PP
Write an option summary to the standard error\&.
.PP
\fB--index\fP,
\fB-i\fP
.PP
Enable/disable the printing of the index of the library\&. If
printing of the index is enabled, the index of the library will be
printed\&. The order of the shapes and external names in the printed index
is not necessarily the same as the order of the index in the library
itself\&. If the order is important, use the --debug-file option and look
at the output that is produced\&.
.PP
\fB--show-errors\fP,
\fB-e\fP
.PP
Write the current error message list to the standard output\&.
.PP
\fB--size\fP,
\fB-s\fP
.PP
Enable/disable the printing of the size of each capsule in the
library\&. If enabled, the size of each capsule in bytes is printed after
its name\&.
.PP
\fB--version\fP,
\fB-V\fP
.PP
Write the version number of the program to the standard error
stream\&.
.SH "LIBRARY EXTRACTION"
.PP
When invoked with the \fB-mx\fP switch,
\fItld\fP extracts capsules from the TDF library specified
as the first file on the command line\&. The names of the capsules to
extract should follow the library name\&. If capsule names are specified,
they must match exactly the names of the capsules in the library (use the
\fB-mt\fP mode switch to find out what the exact names are)\&.
The capsules are normally extracted relative to the current directory,
using the name of the capsule as the output file name\&. The linker will
try to create any directories on the extracted capsule\&'s path name (in
some implementations of the linker this may not be supported, in which
case the directories will need to be created manually before extraction)\&.
The extracted capsules will overwrite existing files of the same
name\&.
.SH "SWITCHES"
.PP
\fBtld\fP accepts the following switches in library
extraction mode:
.PP
\fB--all\fP,
\fB-a\fP
.PP
Enable/disable the extraction of all capsules\&. If all capsules are
to be extracted, no capsule names should be specified on the command
line\&.
.PP
\fB--basename\fP,
\fB-b\fP
.PP
Enable/disable the use of the basename of each capsule when
extracting\&. If this is enabled, then extracted capsules are extracted
into the current directory, using just their basename\&. This may cause
some of the capsules to be written on top of each other\&.
.PP
\fB--debug-file\fP \fIFILE\fP,
\fB-d\fP \fIFILE\fP
.PP
Produce a diagnostic trace of the library extraction process in
\fIFILE\fP\&.
.PP
\fB--help\fP,
\fB-?\fP
.PP
Write an option summary to the standard error\&.
.PP
\fB--info\fP,
\fB-i\fP
.PP
Enable/disable informational messages\&. These say which capsules are
being extracted\&.
.PP
\fB--match-basename\fP,
\fB-m\fP
.PP
Enable/disable matching of capsule names by basename\&. If enabled,
then the basename of each library capsule is also matched against the
file names specified\&. This may result in more than one capsule being
extracted for one file name\&.
.PP
\fB--show-errors\fP,
\fB-e\fP
.PP
Write the current error message list to the standard output\&.
.PP
\fB--version\fP,
\fB-V\fP
.PP
Write the version number of the program to the standard error
stream\&.
.SH "SEE ALSO"
.PP
\fBtcc\fP\fB(1)\fP\&.
...\" created by instant / docbook-to-man, Sun 23 Oct 2005, 12:36
