/*
 * Copyright (c) 2003, The Tendra Project <http://www.ten15.org/>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice unmodified, this list of conditions, and the following
 *    disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * $TenDRA$
 */

/* ISO/IEC 9899:1999 INTEGER LITERAL RULES */

#ifndef __STARTUP_INT_LIT_INCLUDED
#define __STARTUP_INT_LIT_INCLUDED


#include <int_sizes.pf>

#pragma token PROC ( VARIETY ) VARIETY l_i # ~lit_int99
#pragma token PROC ( VARIETY ) VARIETY l_h # ~lit_hex99
#pragma token PROC ( VARIETY ) VARIETY l_u # ~lit_unsigned99

#pragma integer literal decimal unsigned long long *:unsigned long long
#pragma integer literal octal unsigned long long *:unsigned long long
#pragma integer literal hexadecimal unsigned long long *:unsigned long long

#pragma integer literal decimal unsigned long ulint_max:unsigned long | **:l_u
#pragma integer literal octal unsigned long ulint_max:unsigned long | **:l_u
#pragma integer literal hexadecimal unsigned long ulint_max:unsigned long | **:l_u

#pragma integer literal decimal unsigned uint_max:unsigned int | **:l_u
#pragma integer literal octal unsigned uint_max:unsigned int | **:l_u
#pragma integer literal hexadecimal unsigned uint_max:unsigned int | **:l_u

#pragma integer literal decimal long long *:long long
#pragma integer literal octal long long llint_max:long long | **:l_h
#pragma integer literal hexadecimal long long llint_max:long long | **:l_h

#pragma integer literal decimal long lint_max:long | **:l_i
#pragma integer literal octal long lint_max:long | **:l_h
#pragma integer literal hexadecimal long lint_max:long | **:l_h

#pragma integer literal decimal int_max:int | **:l_i
#pragma integer literal octal int_max:int | **:l_h
#pragma integer literal hexadecimal int_max:int | **:l_h


#pragma no_def l_i l_h l_u
#undef int_max
#undef uint_max
#undef lint_max
#undef ulint_max
#undef llint_max
#undef l_i
#undef l_h
#undef l_u


#endif
