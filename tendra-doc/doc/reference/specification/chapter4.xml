<?xml version="1.0" standalone="no"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<!--
  $Id$
-->

<chapter id="C4">
  <title>Installer behavior</title>

  <section id="C4S1">
    <title>Definition of terms</title>

    In this document the behaviour of TDF installers is described in a precise
    manner. Certain words are used with very specific meanings. These are:

    <itemizedlist>
      <listitem>
        <para>
          <quote>undefined</quote>: means that installers can perform any
          action, including refusing to translate the program. It can produce
          code with any effect, meaningful or meaningless.
        </para>
      </listitem>

      <listitem>
        <para>
          <quote>shall</quote>: when the phrase <quote><emphasis>P</emphasis>
          shall be done</quote> (or similar phrases involving
          <quote>shall</quote>) is used, every installer must perform
          <emphasis>P</emphasis>.
        </para>
      </listitem>

      <listitem>
        <para>
          <quote>should</quote>: when the phrase <quote><emphasis>P</emphasis>
          should be done</quote> (or similar phrase involving
          <quote>should</quote>) is used, installers are advised to perform
          <emphasis>P</emphasis>, and producer writers may assume it will be
          done if possible. This usage generally relates to optimisations which
          are recommended.
        </para>
      </listitem>

      <listitem>
        <para>
          <quote>will</quote>: when the phrase <quote><emphasis>P</emphasis>
          will be true</quote> (or similar phrases involving
          <quote>will</quote>) is used to describe the composition of a TDF
          construct, the installer may assume that <emphasis>P</emphasis> holds
          without having to check it. If, in fact, a producer has produced TDF
          for which <emphasis>P</emphasis> does not hold, the effect is
          undefined.
        </para>
      </listitem>

      <listitem>
        <para>
          <quote>target-defined</quote>: means that behaviour will be defined,
          but that it varies from one target machine to another. Each target
          installer shall define everything which is said to be
          <quote>target-defined</quote>.
        </para>
      </listitem>
    </itemizedlist>
  </section>

  <section id="C4S2">
    <title>Properties of installers</title>

    <para>
      All installers must implement all of the constructions of TDF. There are
      some constructions where the installers may impose limits on the ranges of
      values which are implemented. In these cases the description of the
      installer must specify these limits.
    </para>

    <para>
      Installers are not expected to check that the TDF they are processing is
      well-formed, nor that undefined constructs are absent. If the TDF is not
      well-formed any effect is permitted.
    </para>

    <para>
      Installers shall only implement optimisations which are correct in all
      circumstances. This correctness can only be shown by demonstrating the
      equivalence of the transformed program, from equivalences deducible from
      this specification or from the ordinary laws of arithmetic. No statements
      are made in this specification of the form <quote>such and such an
      optimisation is permitted</quote>.
    </para>

    <para>
      <emphasis>Fortran90 has a notion of mathematical equivalence which is not
      the same as TDF equivalence. It can be applied to transform programs
      provided parentheses in the text are not crossed. TDF does not acknowledge
      this concept. Such transformations would have to be applied in a context
      where the permitted changes are known.</emphasis>
    </para>
  </section>
</chapter>
