<?xml version="1.0" standalone="no"?>
<!DOCTYPE glossary PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<!--
  $Id$
-->


<glossary>
	<title>TenDRA Glossary</title>

	<para>
		A glossary of major terms and concepts used by The TenDRA Project.
	</para>

	<!--
		Certainly all acronyms should be here, especially those used for
		file extensions and other highly visible things.

		Perhaps more importantly, this document is to be a reference for
		the obscure terms which need clarifying. These are most often only
		visible to developers who have nothing but the source code, if
		something is unclear - and the source currently isn't very helpful
		in description.

		Be careful not to let this become an index of software. Is it
		really appropriate to add entries for things like yacc? Or if we
		do, keep them separate (as for CPUs, etc). Perhaps we should remove
		CPUs and such.
	-->

	<!-- TODO
		dredge out terms from existing documents
		perhaps we should split this file up with include
	-->

	<glossdiv>
		<title>A</title>

		<glossentry>
			<glossterm>Application Programmer Interface</glossterm>
			<acronym>API</acronym>
		</glossentry>

		<glossentry>
			<glossterm>Architecture Neutral Distribution Format</glossterm>
			<acronym>ANDF</acronym>
<!-- see also wikipedia, ANDF home page (defunct?) -->
		</glossentry>

		<glossentry>
			<glossterm>Architecture</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Assembling</glossterm>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>B</title>

		<glossentry>
			<glossterm>bmake</glossterm>
		</glossentry>

		<glossentry>
			<glossterm><!-- TODO BSD --></glossterm>
			<acronym>BSD</acronym>
		</glossentry>

		<glossentry>
			<glossterm>build</glossterm>

			<glossdef>
				<para><!-- TODO Compilation of things --></para>
			</glossdef>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>C</title>

		<glossentry>
			<glossterm>Calculus</glossterm>

			<glossdef>
				<para><!-- TODO An algebraic type system tool --></para>
			</glossdef>
		</glossentry>

		<glossentry>
			<glossterm>command line interface</glossterm>
			<acronym>CLI</acronym>
		</glossentry>

		<glossentry>
			<glossterm>Compiling</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Central Processing Unit</glossterm>
			<acronym>CPU</acronym>
		</glossentry>

		<glossentry>
			<glossterm>Capability Architecture</glossterm>

			<glossdef>
				<para>
					An architecture whereby programs do not exist
					in flat memory ranges, but must request a hierarchy
					of allocated memory ranges from the operating system.
					The pointers to these ranges are called capabilities.
				</para>

				<para>
					This design makes it impossible for a program to access
					memory that is not pointed to by one of the
					capabilities granted to the program.
				</para>

<!-- See wikipedia. -->
			</glossdef>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>D</title>

		<glossentry>
			<glossterm>DERA</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>disp</glossterm>

			<glossdef>
				<para><!-- TODO tdf pretty printer --></para>
			</glossdef>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>F</title>

		<glossentry>
			<glossterm>Flex</glossterm>	<!-- TODO we probably shouldn't mention flex and bison -->

			<glossdef>
				<para>
					A capability architecture and operating system
					developed at DERA during the 1980s.
				</para>
<!-- See Flex machine on wikipedia. -->
			</glossdef>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>G</title>

		<glossentry>
			<glossterm>GNU Compiler Collection</glossterm>
			<acronym>GCC</acronym>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>I</title>

		<glossentry>
			<glossterm>ICC Intel C Compiler</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Installer</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>IRC</glossterm>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>J</title>

		<glossentry>
			<glossterm>Just-in-time Compilation</glossterm>
			<acronym>JIT</acronym>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>L</title>

		<glossentry>
			<glossterm>Lexer</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>lexi</glossterm>

			<glossdef>
				<para><!-- TODO A lexical generator --></para>
			</glossdef>
		</glossentry>

		<glossentry>
			<glossterm>Lexical Generation</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Linking</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Linux</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Low-level Ten15</glossterm>

			<glossdef>
				<para>
					The format that became known as TDF.
				</para>

				<para>
					To make porting the Ten15 System easier, after
					type checking had succeeded and machine-independent
					optimisations made, the untyped output of the Ten15
					compiler was provided: this became defined as Low-level
					Ten15.
				</para>

				<para>
					Low-level Ten15, being untyped, was a viable target
					for weakly-typed languages, including C.
				</para>

				<para>
					At the OSF's <emphasis>request for technologies</emphasis>
					for ANDF, Low-level Ten15 was renamed to TDF (Ten15
					Distribution Format), and put forward as a (successful)
					proposal.
				</para>

<!--
See also OSF, ANDF, TDF
See also personal retrospective,
wikipedia
-->
			</glossdef>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>M</title>

		<glossentry>
			<glossterm>Machine</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>make_err</glossterm>

			<glossdef>
				<para><!-- TODO A tool to generate TDF encoding and decoding routines --></para>
			</glossdef>
		</glossentry>

		<glossentry>
			<glossterm>mk</glossterm>

			<glossdef>
				<para><!-- TODO suffix for makefiles --></para>
			</glossdef>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>O</title>

		<glossentry>
			<glossterm>Object<!-- TODO obj for short --></glossterm>

			<glossdef>
				<para><!-- TODO Compiled thing --></para>
			</glossdef>
		</glossentry>

		<glossentry>
			<glossterm>Open Software Foundation</glossterm>
			<acronym>OSF</acronym>
		</glossentry>

		<glossentry>
			<glossterm>Optimisation</glossterm>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>P</title>

		<glossentry>
			<glossterm>Parser</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Parser Generation</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Parsing</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Porting</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>PL_TDF</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Producer</glossterm>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>S</title>

		<glossentry>
			<glossterm>Source Code Management</glossterm>
			<acronym>SCM</acronym>
		</glossentry>

		<glossentry>
			<glossterm>Syntax Improving Device</glossterm>
			<acronym>SID</acronym>

			<glossdef>
				<para><!-- TODO This is a parser generator --></para>
			</glossdef>
		</glossentry>

		<glossentry id="startupfile">
			<glossterm>Start-up File</glossterm>

			<glossdef>
				<para><!-- TODO TODO --></para>
			</glossdef>
		</glossentry>

		<glossentry>
			<glossterm>Strong typing</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Structured TDF</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Subversion</glossterm>

			<glossdef>
				<para><!-- TODO Our SCM system of choice --></para>
			</glossdef>
		</glossentry>

		<glossentry>
			<glossterm>svn</glossterm>

			<glossdef>
				<para><!-- TODO CLI to Subversion --></para>
			</glossdef>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>T</title>

		<glossentry>
			<glossterm>tcc</glossterm>

			<glossdef>
				<para><!-- TODO CLI --></para>
			</glossdef>
		</glossentry>

		<glossentry>
			<glossterm>TDF</glossterm>
<!--
Low-level Ten15: Ten15 Distribution Format
Retrospectively renamed to TenDRA Distribution Format.
-->
		</glossentry>

		<glossentry>
			<glossterm>TDF Notation Compiler</glossterm>
			<acronym>TNC</acronym>

			<glossdef>
				<para><!-- TODO This is an unstructured TDF assembler and disassembler --></para>
			</glossdef>
		</glossentry>

		<glossentry>
			<glossterm>Ten15</glossterm>

			<glossdef>
				<para>Ten15 refers to:</para>
<!--
* The Ten15 system
* The Ten15 language
* The Ten15 intermediate representation
* ten15.org, who took their name from the above.
-->
			</glossdef>
		</glossentry>

		<glossentry>
			<glossterm>The Ten15 language</glossterm>

			<glossdef>
				<para>
					The Ten15 language (usually called Ten15 Notation)
					was the main language used to program the Ten15 system;
					it was created to provide all of the virtual machine's
					abilities.
				</para>
				<!-- See also Ten15 system -->
			</glossdef>
		</glossentry>

		<glossentry>
			<glossterm>Ten15 Notation</glossterm>

			<glossdef>
				<!-- See Ten15 Language -->
			</glossdef>
		</glossentry>

		<glossentry>
			<glossterm>The Ten15 system</glossterm>

			<glossdef>
				<para>
					This was a capability architecture which was created
					as an equivalent to the Flex capability architecture
					for the microcomputer, intended to make the work on Flex
					available to modern machines lacking a microcode facility.
				</para>

				<para>
					Ten15 provided this by way of a strongly typed virtual
					machine. This differed from other virtual machines of
					the time by making use of JIT (then yet to be named).
				</para>

				<para>
					This machine acted as an abstract superset of several
					high-level languages, and was intended to express these
					(in much the same way as Microsoft's .Net virtual machine
					expresses several languages today).
				</para>

				<para>
					Conspicuously, C was not supported as it is not strongly
					typed. This was eventually provided for by TDF, instead.
				</para>

<!-- See also Low level Ten15.  -->
			</glossdef>
		</glossentry>

		<glossentry>
			<glossterm>Ten15.org</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>The Ten15 intermediate representation</glossterm>

			<glossdef>
				<para><!-- TODO for programs on the Ten15 system, using the Ten15 compiler. -->
				</para>
<!-- See also Ten15 system -->
			</glossdef>
		</glossentry>

		<glossentry>
			<glossterm>TenDRA</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>TenDRA.org</glossterm>

			<glossdef>
				<para><!-- TODO us --></para>
			</glossdef>
		</glossentry>

		<glossentry>
			<glossterm>Ticket</glossterm>

			<glossdef>
				<para><!-- TODO The thing you make on trac --></para>
			</glossdef>
		</glossentry>

		<glossentry>
			<glossterm>tld</glossterm>

			<glossdef>
				<para><!-- TODO The TDF Linker --></para>
			</glossdef>
		</glossentry>

		<glossentry>
			<glossterm>TPL</glossterm>

			<glossdef>
				<para><!-- TODO The PL_TDF Compiler. This is a structured TDF assembler. --></para>
			</glossdef>
		</glossentry>

		<glossentry>
			<glossterm>Trac</glossterm>

			<glossdef>
				<para><!-- TODO Our ticket and Wiki system of choice --></para>
			</glossdef>
		</glossentry>

		<glossentry>
			<glossterm>tspec</glossterm>

			<glossdef>
				<para><!-- TODO An API specification generation tool --></para>
			</glossdef>
		</glossentry>

		<glossentry>
			<glossterm>Type</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Type checking</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Type system</glossterm>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>U</title>

		<glossentry>
			<glossterm>Unstructured TDF</glossterm>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>V</title>

		<glossentry>
			<glossterm>Virtual Machine</glossterm>
			<acronym>VM</acronym>

			<glossdef>
				<para>
					<!-- TODO see machine -->
				</para>

				<para>
					Usually this term is used to imply that there
					is no physical implementation of this machine.
				</para>
			</glossdef>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>W</title>

		<glossentry>
			<glossterm>Weak typing</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Wiki</glossterm>

			<glossdef>
				<para><!-- TODO The thing you create on trac --></para>
			</glossdef>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>Languages</title>

		<para>
			<!-- TODO TODO These are all languages -->
		</para>

		<glossentry>
			<glossterm>Assembly</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>C</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>CPP<!-- TODO also C++ --></glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Make</glossterm>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>Architectures</title>

		<para>
			<!-- TODO TODO These are all architectures -->
		</para>

		<glossentry>
			<glossterm>680x0</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>80x86</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Alpha</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>AMD64</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>HPPA</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Power</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>PPC601</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>SPARC</glossterm>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>Machines</title>

		<para>
			<!-- TODO TODO These are all machines -->
		</para>

		<glossentry>
			<glossterm>AIX</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>DragonflyBSD</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>HPUX</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>NetBSD</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Solaris</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Cygwin</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>IRIX</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>OpenBSD</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>SunOS</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>OSF1</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>SVR4.2</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>FreeBSD</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Minix</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>SCO</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Ultrix</glossterm>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>APIs</title>

		<para>
			<!-- TODO These are all APIs -->
		</para>

		<glossentry>
			<glossterm>ANSI</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>GCC</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>POSIX (1,2,3)</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>UNIX95</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>BSD Extn</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>ISO</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>X5</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>CPP</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Motif</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>XPG3/XPG4</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Dummy (Dummy API?)</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>SVID3</glossterm>
		</glossentry>
	</glossdiv>

	<glossdiv>
		<title>Legalities</title>

		<para>
			<!-- TODO These are all legal terms -->
		</para>

		<glossentry>
			<glossterm>BSD Licence</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>Crown Copyright</glossterm>
		</glossentry>

		<glossentry>
			<glossterm>GPL</glossterm>
		</glossentry>
	</glossdiv>

</glossary>

